// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: rtk/rtk.proto

#include "rtk/rtk.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace mavsdk {
namespace rpc {
namespace rtk {

inline constexpr RtkResult::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : result_str_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        result_{static_cast< ::mavsdk::rpc::rtk::RtkResult_Result >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR RtkResult::RtkResult(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RtkResultDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RtkResultDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RtkResultDefaultTypeInternal() {}
  union {
    RtkResult _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RtkResultDefaultTypeInternal _RtkResult_default_instance_;

inline constexpr RtcmData::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : data_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR RtcmData::RtcmData(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RtcmDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RtcmDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RtcmDataDefaultTypeInternal() {}
  union {
    RtcmData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RtcmDataDefaultTypeInternal _RtcmData_default_instance_;

inline constexpr SendRtcmDataResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        rtk_result_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR SendRtcmDataResponse::SendRtcmDataResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SendRtcmDataResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SendRtcmDataResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SendRtcmDataResponseDefaultTypeInternal() {}
  union {
    SendRtcmDataResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SendRtcmDataResponseDefaultTypeInternal _SendRtcmDataResponse_default_instance_;

inline constexpr SendRtcmDataRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        rtcm_data_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR SendRtcmDataRequest::SendRtcmDataRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SendRtcmDataRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SendRtcmDataRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SendRtcmDataRequestDefaultTypeInternal() {}
  union {
    SendRtcmDataRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SendRtcmDataRequestDefaultTypeInternal _SendRtcmDataRequest_default_instance_;
}  // namespace rtk
}  // namespace rpc
}  // namespace mavsdk
static ::_pb::Metadata file_level_metadata_rtk_2frtk_2eproto[4];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_rtk_2frtk_2eproto[1];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_rtk_2frtk_2eproto = nullptr;
const ::uint32_t TableStruct_rtk_2frtk_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::rtk::RtcmData, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::rtk::RtcmData, _impl_.data_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::rtk::SendRtcmDataRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::rtk::SendRtcmDataRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::rtk::SendRtcmDataRequest, _impl_.rtcm_data_),
    0,
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::rtk::SendRtcmDataResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::rtk::SendRtcmDataResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::rtk::SendRtcmDataResponse, _impl_.rtk_result_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::rtk::RtkResult, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::rtk::RtkResult, _impl_.result_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::rtk::RtkResult, _impl_.result_str_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::mavsdk::rpc::rtk::RtcmData)},
        {9, 18, -1, sizeof(::mavsdk::rpc::rtk::SendRtcmDataRequest)},
        {19, 28, -1, sizeof(::mavsdk::rpc::rtk::SendRtcmDataResponse)},
        {29, -1, -1, sizeof(::mavsdk::rpc::rtk::RtkResult)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::mavsdk::rpc::rtk::_RtcmData_default_instance_._instance,
    &::mavsdk::rpc::rtk::_SendRtcmDataRequest_default_instance_._instance,
    &::mavsdk::rpc::rtk::_SendRtcmDataResponse_default_instance_._instance,
    &::mavsdk::rpc::rtk::_RtkResult_default_instance_._instance,
};
const char descriptor_table_protodef_rtk_2frtk_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\rrtk/rtk.proto\022\016mavsdk.rpc.rtk\032\024mavsdk_"
    "options.proto\"\030\n\010RtcmData\022\014\n\004data\030\001 \001(\t\""
    "B\n\023SendRtcmDataRequest\022+\n\trtcm_data\030\001 \001("
    "\0132\030.mavsdk.rpc.rtk.RtcmData\"E\n\024SendRtcmD"
    "ataResponse\022-\n\nrtk_result\030\001 \001(\0132\031.mavsdk"
    ".rpc.rtk.RtkResult\"\313\001\n\tRtkResult\0220\n\006resu"
    "lt\030\001 \001(\0162 .mavsdk.rpc.rtk.RtkResult.Resu"
    "lt\022\022\n\nresult_str\030\002 \001(\t\"x\n\006Result\022\022\n\016RESU"
    "LT_UNKNOWN\020\000\022\022\n\016RESULT_SUCCESS\020\001\022\023\n\017RESU"
    "LT_TOO_LONG\020\002\022\024\n\020RESULT_NO_SYSTEM\020\005\022\033\n\027R"
    "ESULT_CONNECTION_ERROR\020\0062m\n\nRtkService\022_"
    "\n\014SendRtcmData\022#.mavsdk.rpc.rtk.SendRtcm"
    "DataRequest\032$.mavsdk.rpc.rtk.SendRtcmDat"
    "aResponse\"\004\200\265\030\001B\031\n\rio.mavsdk.rtkB\010RtkPro"
    "tob\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_rtk_2frtk_2eproto_deps[1] =
    {
        &::descriptor_table_mavsdk_5foptions_2eproto,
};
static ::absl::once_flag descriptor_table_rtk_2frtk_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_rtk_2frtk_2eproto = {
    false,
    false,
    570,
    descriptor_table_protodef_rtk_2frtk_2eproto,
    "rtk/rtk.proto",
    &descriptor_table_rtk_2frtk_2eproto_once,
    descriptor_table_rtk_2frtk_2eproto_deps,
    1,
    4,
    schemas,
    file_default_instances,
    TableStruct_rtk_2frtk_2eproto::offsets,
    file_level_metadata_rtk_2frtk_2eproto,
    file_level_enum_descriptors_rtk_2frtk_2eproto,
    file_level_service_descriptors_rtk_2frtk_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_rtk_2frtk_2eproto_getter() {
  return &descriptor_table_rtk_2frtk_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_rtk_2frtk_2eproto(&descriptor_table_rtk_2frtk_2eproto);
namespace mavsdk {
namespace rpc {
namespace rtk {
const ::google::protobuf::EnumDescriptor* RtkResult_Result_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_rtk_2frtk_2eproto);
  return file_level_enum_descriptors_rtk_2frtk_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t RtkResult_Result_internal_data_[] = {
    196608u, 32u, 12u, };
bool RtkResult_Result_IsValid(int value) {
  return 0 <= value && value <= 6 && ((103u >> value) & 1) != 0;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr RtkResult_Result RtkResult::RESULT_UNKNOWN;
constexpr RtkResult_Result RtkResult::RESULT_SUCCESS;
constexpr RtkResult_Result RtkResult::RESULT_TOO_LONG;
constexpr RtkResult_Result RtkResult::RESULT_NO_SYSTEM;
constexpr RtkResult_Result RtkResult::RESULT_CONNECTION_ERROR;
constexpr RtkResult_Result RtkResult::Result_MIN;
constexpr RtkResult_Result RtkResult::Result_MAX;
constexpr int RtkResult::Result_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
// ===================================================================

class RtcmData::_Internal {
 public:
};

RtcmData::RtcmData(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.rtk.RtcmData)
}
inline PROTOBUF_NDEBUG_INLINE RtcmData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : data_(arena, from.data_),
        _cached_size_{0} {}

RtcmData::RtcmData(
    ::google::protobuf::Arena* arena,
    const RtcmData& from)
    : ::google::protobuf::Message(arena) {
  RtcmData* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.rtk.RtcmData)
}
inline PROTOBUF_NDEBUG_INLINE RtcmData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : data_(arena),
        _cached_size_{0} {}

inline void RtcmData::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
RtcmData::~RtcmData() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.rtk.RtcmData)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RtcmData::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.data_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void RtcmData::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.rtk.RtcmData)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.data_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RtcmData::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 36, 2> RtcmData::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_RtcmData_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string data = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(RtcmData, _impl_.data_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string data = 1;
    {PROTOBUF_FIELD_OFFSET(RtcmData, _impl_.data_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\27\4\0\0\0\0\0\0"
    "mavsdk.rpc.rtk.RtcmData"
    "data"
  }},
};

::uint8_t* RtcmData::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.rtk.RtcmData)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string data = 1;
  if (!this->_internal_data().empty()) {
    const std::string& _s = this->_internal_data();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mavsdk.rpc.rtk.RtcmData.data");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.rtk.RtcmData)
  return target;
}

::size_t RtcmData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.rtk.RtcmData)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string data = 1;
  if (!this->_internal_data().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_data());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData RtcmData::_class_data_ = {
    RtcmData::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* RtcmData::GetClassData() const {
  return &_class_data_;
}

void RtcmData::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<RtcmData*>(&to_msg);
  auto& from = static_cast<const RtcmData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.rtk.RtcmData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_data().empty()) {
    _this->_internal_set_data(from._internal_data());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RtcmData::CopyFrom(const RtcmData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.rtk.RtcmData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RtcmData::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* RtcmData::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void RtcmData::InternalSwap(RtcmData* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.data_, &other->_impl_.data_, arena);
}

::google::protobuf::Metadata RtcmData::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_rtk_2frtk_2eproto_getter, &descriptor_table_rtk_2frtk_2eproto_once,
      file_level_metadata_rtk_2frtk_2eproto[0]);
}
// ===================================================================

class SendRtcmDataRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<SendRtcmDataRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SendRtcmDataRequest, _impl_._has_bits_);
  static const ::mavsdk::rpc::rtk::RtcmData& rtcm_data(const SendRtcmDataRequest* msg);
  static void set_has_rtcm_data(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::rtk::RtcmData& SendRtcmDataRequest::_Internal::rtcm_data(const SendRtcmDataRequest* msg) {
  return *msg->_impl_.rtcm_data_;
}
SendRtcmDataRequest::SendRtcmDataRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.rtk.SendRtcmDataRequest)
}
inline PROTOBUF_NDEBUG_INLINE SendRtcmDataRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SendRtcmDataRequest::SendRtcmDataRequest(
    ::google::protobuf::Arena* arena,
    const SendRtcmDataRequest& from)
    : ::google::protobuf::Message(arena) {
  SendRtcmDataRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.rtcm_data_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::rtk::RtcmData>(arena, *from._impl_.rtcm_data_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.rtk.SendRtcmDataRequest)
}
inline PROTOBUF_NDEBUG_INLINE SendRtcmDataRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SendRtcmDataRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.rtcm_data_ = {};
}
SendRtcmDataRequest::~SendRtcmDataRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.rtk.SendRtcmDataRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SendRtcmDataRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.rtcm_data_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SendRtcmDataRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.rtk.SendRtcmDataRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.rtcm_data_ != nullptr);
    _impl_.rtcm_data_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SendRtcmDataRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> SendRtcmDataRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SendRtcmDataRequest, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SendRtcmDataRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.rtk.RtcmData rtcm_data = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SendRtcmDataRequest, _impl_.rtcm_data_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.rtk.RtcmData rtcm_data = 1;
    {PROTOBUF_FIELD_OFFSET(SendRtcmDataRequest, _impl_.rtcm_data_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::rtk::RtcmData>()},
  }}, {{
  }},
};

::uint8_t* SendRtcmDataRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.rtk.SendRtcmDataRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.rtk.RtcmData rtcm_data = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::rtcm_data(this),
        _Internal::rtcm_data(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.rtk.SendRtcmDataRequest)
  return target;
}

::size_t SendRtcmDataRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.rtk.SendRtcmDataRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.rtk.RtcmData rtcm_data = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.rtcm_data_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SendRtcmDataRequest::_class_data_ = {
    SendRtcmDataRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SendRtcmDataRequest::GetClassData() const {
  return &_class_data_;
}

void SendRtcmDataRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SendRtcmDataRequest*>(&to_msg);
  auto& from = static_cast<const SendRtcmDataRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.rtk.SendRtcmDataRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_rtcm_data()->::mavsdk::rpc::rtk::RtcmData::MergeFrom(
        from._internal_rtcm_data());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SendRtcmDataRequest::CopyFrom(const SendRtcmDataRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.rtk.SendRtcmDataRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SendRtcmDataRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SendRtcmDataRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SendRtcmDataRequest::InternalSwap(SendRtcmDataRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.rtcm_data_, other->_impl_.rtcm_data_);
}

::google::protobuf::Metadata SendRtcmDataRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_rtk_2frtk_2eproto_getter, &descriptor_table_rtk_2frtk_2eproto_once,
      file_level_metadata_rtk_2frtk_2eproto[1]);
}
// ===================================================================

class SendRtcmDataResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<SendRtcmDataResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SendRtcmDataResponse, _impl_._has_bits_);
  static const ::mavsdk::rpc::rtk::RtkResult& rtk_result(const SendRtcmDataResponse* msg);
  static void set_has_rtk_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::rtk::RtkResult& SendRtcmDataResponse::_Internal::rtk_result(const SendRtcmDataResponse* msg) {
  return *msg->_impl_.rtk_result_;
}
SendRtcmDataResponse::SendRtcmDataResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.rtk.SendRtcmDataResponse)
}
inline PROTOBUF_NDEBUG_INLINE SendRtcmDataResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SendRtcmDataResponse::SendRtcmDataResponse(
    ::google::protobuf::Arena* arena,
    const SendRtcmDataResponse& from)
    : ::google::protobuf::Message(arena) {
  SendRtcmDataResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.rtk_result_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::rtk::RtkResult>(arena, *from._impl_.rtk_result_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.rtk.SendRtcmDataResponse)
}
inline PROTOBUF_NDEBUG_INLINE SendRtcmDataResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SendRtcmDataResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.rtk_result_ = {};
}
SendRtcmDataResponse::~SendRtcmDataResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.rtk.SendRtcmDataResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SendRtcmDataResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.rtk_result_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SendRtcmDataResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.rtk.SendRtcmDataResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.rtk_result_ != nullptr);
    _impl_.rtk_result_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SendRtcmDataResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> SendRtcmDataResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SendRtcmDataResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SendRtcmDataResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.rtk.RtkResult rtk_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SendRtcmDataResponse, _impl_.rtk_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.rtk.RtkResult rtk_result = 1;
    {PROTOBUF_FIELD_OFFSET(SendRtcmDataResponse, _impl_.rtk_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::rtk::RtkResult>()},
  }}, {{
  }},
};

::uint8_t* SendRtcmDataResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.rtk.SendRtcmDataResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.rtk.RtkResult rtk_result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::rtk_result(this),
        _Internal::rtk_result(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.rtk.SendRtcmDataResponse)
  return target;
}

::size_t SendRtcmDataResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.rtk.SendRtcmDataResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.rtk.RtkResult rtk_result = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.rtk_result_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SendRtcmDataResponse::_class_data_ = {
    SendRtcmDataResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SendRtcmDataResponse::GetClassData() const {
  return &_class_data_;
}

void SendRtcmDataResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SendRtcmDataResponse*>(&to_msg);
  auto& from = static_cast<const SendRtcmDataResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.rtk.SendRtcmDataResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_rtk_result()->::mavsdk::rpc::rtk::RtkResult::MergeFrom(
        from._internal_rtk_result());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SendRtcmDataResponse::CopyFrom(const SendRtcmDataResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.rtk.SendRtcmDataResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SendRtcmDataResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SendRtcmDataResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SendRtcmDataResponse::InternalSwap(SendRtcmDataResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.rtk_result_, other->_impl_.rtk_result_);
}

::google::protobuf::Metadata SendRtcmDataResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_rtk_2frtk_2eproto_getter, &descriptor_table_rtk_2frtk_2eproto_once,
      file_level_metadata_rtk_2frtk_2eproto[2]);
}
// ===================================================================

class RtkResult::_Internal {
 public:
};

RtkResult::RtkResult(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.rtk.RtkResult)
}
inline PROTOBUF_NDEBUG_INLINE RtkResult::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : result_str_(arena, from.result_str_),
        _cached_size_{0} {}

RtkResult::RtkResult(
    ::google::protobuf::Arena* arena,
    const RtkResult& from)
    : ::google::protobuf::Message(arena) {
  RtkResult* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.result_ = from._impl_.result_;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.rtk.RtkResult)
}
inline PROTOBUF_NDEBUG_INLINE RtkResult::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : result_str_(arena),
        _cached_size_{0} {}

inline void RtkResult::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.result_ = {};
}
RtkResult::~RtkResult() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.rtk.RtkResult)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RtkResult::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.result_str_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void RtkResult::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.rtk.RtkResult)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.result_str_.ClearToEmpty();
  _impl_.result_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RtkResult::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 43, 2> RtkResult::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_RtkResult_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string result_str = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(RtkResult, _impl_.result_str_)}},
    // .mavsdk.rpc.rtk.RtkResult.Result result = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RtkResult, _impl_.result_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(RtkResult, _impl_.result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.rtk.RtkResult.Result result = 1;
    {PROTOBUF_FIELD_OFFSET(RtkResult, _impl_.result_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string result_str = 2;
    {PROTOBUF_FIELD_OFFSET(RtkResult, _impl_.result_str_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\30\0\12\0\0\0\0\0"
    "mavsdk.rpc.rtk.RtkResult"
    "result_str"
  }},
};

::uint8_t* RtkResult::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.rtk.RtkResult)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .mavsdk.rpc.rtk.RtkResult.Result result = 1;
  if (this->_internal_result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_result(), target);
  }

  // string result_str = 2;
  if (!this->_internal_result_str().empty()) {
    const std::string& _s = this->_internal_result_str();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mavsdk.rpc.rtk.RtkResult.result_str");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.rtk.RtkResult)
  return target;
}

::size_t RtkResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.rtk.RtkResult)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string result_str = 2;
  if (!this->_internal_result_str().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_result_str());
  }

  // .mavsdk.rpc.rtk.RtkResult.Result result = 1;
  if (this->_internal_result() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_result());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData RtkResult::_class_data_ = {
    RtkResult::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* RtkResult::GetClassData() const {
  return &_class_data_;
}

void RtkResult::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<RtkResult*>(&to_msg);
  auto& from = static_cast<const RtkResult&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.rtk.RtkResult)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_result_str().empty()) {
    _this->_internal_set_result_str(from._internal_result_str());
  }
  if (from._internal_result() != 0) {
    _this->_internal_set_result(from._internal_result());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RtkResult::CopyFrom(const RtkResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.rtk.RtkResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RtkResult::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* RtkResult::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void RtkResult::InternalSwap(RtkResult* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.result_str_, &other->_impl_.result_str_, arena);
  swap(_impl_.result_, other->_impl_.result_);
}

::google::protobuf::Metadata RtkResult::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_rtk_2frtk_2eproto_getter, &descriptor_table_rtk_2frtk_2eproto_once,
      file_level_metadata_rtk_2frtk_2eproto[3]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace rtk
}  // namespace rpc
}  // namespace mavsdk
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"

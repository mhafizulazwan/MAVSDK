// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mission/mission.proto

#include "mission/mission.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace mavsdk {
namespace rpc {
namespace mission {
      template <typename>
PROTOBUF_CONSTEXPR SubscribeMissionProgressRequest::SubscribeMissionProgressRequest(::_pbi::ConstantInitialized) {}
struct SubscribeMissionProgressRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscribeMissionProgressRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscribeMissionProgressRequestDefaultTypeInternal() {}
  union {
    SubscribeMissionProgressRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscribeMissionProgressRequestDefaultTypeInternal _SubscribeMissionProgressRequest_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR SubscribeDownloadMissionWithProgressRequest::SubscribeDownloadMissionWithProgressRequest(::_pbi::ConstantInitialized) {}
struct SubscribeDownloadMissionWithProgressRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscribeDownloadMissionWithProgressRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscribeDownloadMissionWithProgressRequestDefaultTypeInternal() {}
  union {
    SubscribeDownloadMissionWithProgressRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscribeDownloadMissionWithProgressRequestDefaultTypeInternal _SubscribeDownloadMissionWithProgressRequest_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR StartMissionRequest::StartMissionRequest(::_pbi::ConstantInitialized) {}
struct StartMissionRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StartMissionRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StartMissionRequestDefaultTypeInternal() {}
  union {
    StartMissionRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StartMissionRequestDefaultTypeInternal _StartMissionRequest_default_instance_;

inline constexpr SetReturnToLaunchAfterMissionRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : enable_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SetReturnToLaunchAfterMissionRequest::SetReturnToLaunchAfterMissionRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SetReturnToLaunchAfterMissionRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetReturnToLaunchAfterMissionRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetReturnToLaunchAfterMissionRequestDefaultTypeInternal() {}
  union {
    SetReturnToLaunchAfterMissionRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetReturnToLaunchAfterMissionRequestDefaultTypeInternal _SetReturnToLaunchAfterMissionRequest_default_instance_;

inline constexpr SetCurrentMissionItemRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : index_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SetCurrentMissionItemRequest::SetCurrentMissionItemRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SetCurrentMissionItemRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetCurrentMissionItemRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetCurrentMissionItemRequestDefaultTypeInternal() {}
  union {
    SetCurrentMissionItemRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetCurrentMissionItemRequestDefaultTypeInternal _SetCurrentMissionItemRequest_default_instance_;

inline constexpr ProgressData::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : progress_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ProgressData::ProgressData(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ProgressDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ProgressDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ProgressDataDefaultTypeInternal() {}
  union {
    ProgressData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ProgressDataDefaultTypeInternal _ProgressData_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR PauseMissionRequest::PauseMissionRequest(::_pbi::ConstantInitialized) {}
struct PauseMissionRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PauseMissionRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PauseMissionRequestDefaultTypeInternal() {}
  union {
    PauseMissionRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PauseMissionRequestDefaultTypeInternal _PauseMissionRequest_default_instance_;

inline constexpr MissionResult::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : result_str_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        result_{static_cast< ::mavsdk::rpc::mission::MissionResult_Result >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR MissionResult::MissionResult(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct MissionResultDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MissionResultDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MissionResultDefaultTypeInternal() {}
  union {
    MissionResult _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MissionResultDefaultTypeInternal _MissionResult_default_instance_;

inline constexpr MissionProgress::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : current_{0},
        total_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR MissionProgress::MissionProgress(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct MissionProgressDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MissionProgressDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MissionProgressDefaultTypeInternal() {}
  union {
    MissionProgress _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MissionProgressDefaultTypeInternal _MissionProgress_default_instance_;

inline constexpr MissionItem::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : latitude_deg_{0},
        longitude_deg_{0},
        relative_altitude_m_{0},
        speed_m_s_{0},
        is_fly_through_{false},
        gimbal_pitch_deg_{0},
        gimbal_yaw_deg_{0},
        camera_action_{static_cast< ::mavsdk::rpc::mission::MissionItem_CameraAction >(0)},
        camera_photo_interval_s_{0},
        loiter_time_s_{0},
        acceptance_radius_m_{0},
        yaw_deg_{0},
        camera_photo_distance_m_{0},
        vehicle_action_{static_cast< ::mavsdk::rpc::mission::MissionItem_VehicleAction >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR MissionItem::MissionItem(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct MissionItemDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MissionItemDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MissionItemDefaultTypeInternal() {}
  union {
    MissionItem _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MissionItemDefaultTypeInternal _MissionItem_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR IsMissionFinishedRequest::IsMissionFinishedRequest(::_pbi::ConstantInitialized) {}
struct IsMissionFinishedRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR IsMissionFinishedRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~IsMissionFinishedRequestDefaultTypeInternal() {}
  union {
    IsMissionFinishedRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 IsMissionFinishedRequestDefaultTypeInternal _IsMissionFinishedRequest_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR GetReturnToLaunchAfterMissionRequest::GetReturnToLaunchAfterMissionRequest(::_pbi::ConstantInitialized) {}
struct GetReturnToLaunchAfterMissionRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetReturnToLaunchAfterMissionRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetReturnToLaunchAfterMissionRequestDefaultTypeInternal() {}
  union {
    GetReturnToLaunchAfterMissionRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetReturnToLaunchAfterMissionRequestDefaultTypeInternal _GetReturnToLaunchAfterMissionRequest_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR DownloadMissionRequest::DownloadMissionRequest(::_pbi::ConstantInitialized) {}
struct DownloadMissionRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DownloadMissionRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DownloadMissionRequestDefaultTypeInternal() {}
  union {
    DownloadMissionRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DownloadMissionRequestDefaultTypeInternal _DownloadMissionRequest_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR ClearMissionRequest::ClearMissionRequest(::_pbi::ConstantInitialized) {}
struct ClearMissionRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ClearMissionRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ClearMissionRequestDefaultTypeInternal() {}
  union {
    ClearMissionRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ClearMissionRequestDefaultTypeInternal _ClearMissionRequest_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR CancelMissionUploadRequest::CancelMissionUploadRequest(::_pbi::ConstantInitialized) {}
struct CancelMissionUploadRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CancelMissionUploadRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CancelMissionUploadRequestDefaultTypeInternal() {}
  union {
    CancelMissionUploadRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CancelMissionUploadRequestDefaultTypeInternal _CancelMissionUploadRequest_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR CancelMissionDownloadRequest::CancelMissionDownloadRequest(::_pbi::ConstantInitialized) {}
struct CancelMissionDownloadRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CancelMissionDownloadRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CancelMissionDownloadRequestDefaultTypeInternal() {}
  union {
    CancelMissionDownloadRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CancelMissionDownloadRequestDefaultTypeInternal _CancelMissionDownloadRequest_default_instance_;

inline constexpr UploadMissionWithProgressResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        mission_result_{nullptr},
        progress_data_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR UploadMissionWithProgressResponse::UploadMissionWithProgressResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct UploadMissionWithProgressResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UploadMissionWithProgressResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UploadMissionWithProgressResponseDefaultTypeInternal() {}
  union {
    UploadMissionWithProgressResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UploadMissionWithProgressResponseDefaultTypeInternal _UploadMissionWithProgressResponse_default_instance_;

inline constexpr UploadMissionResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        mission_result_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR UploadMissionResponse::UploadMissionResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct UploadMissionResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UploadMissionResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UploadMissionResponseDefaultTypeInternal() {}
  union {
    UploadMissionResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UploadMissionResponseDefaultTypeInternal _UploadMissionResponse_default_instance_;

inline constexpr StartMissionResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        mission_result_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR StartMissionResponse::StartMissionResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct StartMissionResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StartMissionResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StartMissionResponseDefaultTypeInternal() {}
  union {
    StartMissionResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StartMissionResponseDefaultTypeInternal _StartMissionResponse_default_instance_;

inline constexpr SetReturnToLaunchAfterMissionResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        mission_result_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR SetReturnToLaunchAfterMissionResponse::SetReturnToLaunchAfterMissionResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SetReturnToLaunchAfterMissionResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetReturnToLaunchAfterMissionResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetReturnToLaunchAfterMissionResponseDefaultTypeInternal() {}
  union {
    SetReturnToLaunchAfterMissionResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetReturnToLaunchAfterMissionResponseDefaultTypeInternal _SetReturnToLaunchAfterMissionResponse_default_instance_;

inline constexpr SetCurrentMissionItemResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        mission_result_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR SetCurrentMissionItemResponse::SetCurrentMissionItemResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SetCurrentMissionItemResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetCurrentMissionItemResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetCurrentMissionItemResponseDefaultTypeInternal() {}
  union {
    SetCurrentMissionItemResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetCurrentMissionItemResponseDefaultTypeInternal _SetCurrentMissionItemResponse_default_instance_;

inline constexpr PauseMissionResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        mission_result_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR PauseMissionResponse::PauseMissionResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PauseMissionResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PauseMissionResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PauseMissionResponseDefaultTypeInternal() {}
  union {
    PauseMissionResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PauseMissionResponseDefaultTypeInternal _PauseMissionResponse_default_instance_;

inline constexpr MissionProgressResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        mission_progress_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR MissionProgressResponse::MissionProgressResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct MissionProgressResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MissionProgressResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MissionProgressResponseDefaultTypeInternal() {}
  union {
    MissionProgressResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MissionProgressResponseDefaultTypeInternal _MissionProgressResponse_default_instance_;

inline constexpr MissionPlan::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : mission_items_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR MissionPlan::MissionPlan(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct MissionPlanDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MissionPlanDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MissionPlanDefaultTypeInternal() {}
  union {
    MissionPlan _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MissionPlanDefaultTypeInternal _MissionPlan_default_instance_;

inline constexpr IsMissionFinishedResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        mission_result_{nullptr},
        is_finished_{false} {}

template <typename>
PROTOBUF_CONSTEXPR IsMissionFinishedResponse::IsMissionFinishedResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct IsMissionFinishedResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR IsMissionFinishedResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~IsMissionFinishedResponseDefaultTypeInternal() {}
  union {
    IsMissionFinishedResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 IsMissionFinishedResponseDefaultTypeInternal _IsMissionFinishedResponse_default_instance_;

inline constexpr GetReturnToLaunchAfterMissionResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        mission_result_{nullptr},
        enable_{false} {}

template <typename>
PROTOBUF_CONSTEXPR GetReturnToLaunchAfterMissionResponse::GetReturnToLaunchAfterMissionResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GetReturnToLaunchAfterMissionResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetReturnToLaunchAfterMissionResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetReturnToLaunchAfterMissionResponseDefaultTypeInternal() {}
  union {
    GetReturnToLaunchAfterMissionResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetReturnToLaunchAfterMissionResponseDefaultTypeInternal _GetReturnToLaunchAfterMissionResponse_default_instance_;

inline constexpr ClearMissionResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        mission_result_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR ClearMissionResponse::ClearMissionResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ClearMissionResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ClearMissionResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ClearMissionResponseDefaultTypeInternal() {}
  union {
    ClearMissionResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ClearMissionResponseDefaultTypeInternal _ClearMissionResponse_default_instance_;

inline constexpr CancelMissionUploadResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        mission_result_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR CancelMissionUploadResponse::CancelMissionUploadResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CancelMissionUploadResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CancelMissionUploadResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CancelMissionUploadResponseDefaultTypeInternal() {}
  union {
    CancelMissionUploadResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CancelMissionUploadResponseDefaultTypeInternal _CancelMissionUploadResponse_default_instance_;

inline constexpr CancelMissionDownloadResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        mission_result_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR CancelMissionDownloadResponse::CancelMissionDownloadResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CancelMissionDownloadResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CancelMissionDownloadResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CancelMissionDownloadResponseDefaultTypeInternal() {}
  union {
    CancelMissionDownloadResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CancelMissionDownloadResponseDefaultTypeInternal _CancelMissionDownloadResponse_default_instance_;

inline constexpr UploadMissionRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        mission_plan_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR UploadMissionRequest::UploadMissionRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct UploadMissionRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UploadMissionRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UploadMissionRequestDefaultTypeInternal() {}
  union {
    UploadMissionRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UploadMissionRequestDefaultTypeInternal _UploadMissionRequest_default_instance_;

inline constexpr SubscribeUploadMissionWithProgressRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        mission_plan_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR SubscribeUploadMissionWithProgressRequest::SubscribeUploadMissionWithProgressRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SubscribeUploadMissionWithProgressRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscribeUploadMissionWithProgressRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscribeUploadMissionWithProgressRequestDefaultTypeInternal() {}
  union {
    SubscribeUploadMissionWithProgressRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscribeUploadMissionWithProgressRequestDefaultTypeInternal _SubscribeUploadMissionWithProgressRequest_default_instance_;

inline constexpr ProgressDataOrMission::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        mission_plan_{nullptr},
        progress_{0},
        has_progress_{false},
        has_mission_{false} {}

template <typename>
PROTOBUF_CONSTEXPR ProgressDataOrMission::ProgressDataOrMission(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ProgressDataOrMissionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ProgressDataOrMissionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ProgressDataOrMissionDefaultTypeInternal() {}
  union {
    ProgressDataOrMission _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ProgressDataOrMissionDefaultTypeInternal _ProgressDataOrMission_default_instance_;

inline constexpr DownloadMissionResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        mission_result_{nullptr},
        mission_plan_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR DownloadMissionResponse::DownloadMissionResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct DownloadMissionResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DownloadMissionResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DownloadMissionResponseDefaultTypeInternal() {}
  union {
    DownloadMissionResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DownloadMissionResponseDefaultTypeInternal _DownloadMissionResponse_default_instance_;

inline constexpr DownloadMissionWithProgressResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        mission_result_{nullptr},
        progress_data_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR DownloadMissionWithProgressResponse::DownloadMissionWithProgressResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct DownloadMissionWithProgressResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DownloadMissionWithProgressResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DownloadMissionWithProgressResponseDefaultTypeInternal() {}
  union {
    DownloadMissionWithProgressResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DownloadMissionWithProgressResponseDefaultTypeInternal _DownloadMissionWithProgressResponse_default_instance_;
}  // namespace mission
}  // namespace rpc
}  // namespace mavsdk
static ::_pb::Metadata file_level_metadata_mission_2fmission_2eproto[34];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_mission_2fmission_2eproto[3];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_mission_2fmission_2eproto = nullptr;
const ::uint32_t TableStruct_mission_2fmission_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission::UploadMissionRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission::UploadMissionRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission::UploadMissionRequest, _impl_.mission_plan_),
    0,
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission::UploadMissionResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission::UploadMissionResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission::UploadMissionResponse, _impl_.mission_result_),
    0,
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission::SubscribeUploadMissionWithProgressRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission::SubscribeUploadMissionWithProgressRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission::SubscribeUploadMissionWithProgressRequest, _impl_.mission_plan_),
    0,
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission::UploadMissionWithProgressResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission::UploadMissionWithProgressResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission::UploadMissionWithProgressResponse, _impl_.mission_result_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission::UploadMissionWithProgressResponse, _impl_.progress_data_),
    0,
    1,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission::CancelMissionUploadRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission::CancelMissionUploadResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission::CancelMissionUploadResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission::CancelMissionUploadResponse, _impl_.mission_result_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission::DownloadMissionRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission::DownloadMissionResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission::DownloadMissionResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission::DownloadMissionResponse, _impl_.mission_result_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission::DownloadMissionResponse, _impl_.mission_plan_),
    0,
    1,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission::SubscribeDownloadMissionWithProgressRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission::DownloadMissionWithProgressResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission::DownloadMissionWithProgressResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission::DownloadMissionWithProgressResponse, _impl_.mission_result_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission::DownloadMissionWithProgressResponse, _impl_.progress_data_),
    0,
    1,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission::CancelMissionDownloadRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission::CancelMissionDownloadResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission::CancelMissionDownloadResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission::CancelMissionDownloadResponse, _impl_.mission_result_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission::StartMissionRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission::StartMissionResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission::StartMissionResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission::StartMissionResponse, _impl_.mission_result_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission::PauseMissionRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission::PauseMissionResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission::PauseMissionResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission::PauseMissionResponse, _impl_.mission_result_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission::ClearMissionRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission::ClearMissionResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission::ClearMissionResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission::ClearMissionResponse, _impl_.mission_result_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission::SetCurrentMissionItemRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission::SetCurrentMissionItemRequest, _impl_.index_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission::SetCurrentMissionItemResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission::SetCurrentMissionItemResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission::SetCurrentMissionItemResponse, _impl_.mission_result_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission::IsMissionFinishedRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission::IsMissionFinishedResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission::IsMissionFinishedResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission::IsMissionFinishedResponse, _impl_.mission_result_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission::IsMissionFinishedResponse, _impl_.is_finished_),
    0,
    ~0u,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission::SubscribeMissionProgressRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission::MissionProgressResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission::MissionProgressResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission::MissionProgressResponse, _impl_.mission_progress_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission::GetReturnToLaunchAfterMissionRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission::GetReturnToLaunchAfterMissionResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission::GetReturnToLaunchAfterMissionResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission::GetReturnToLaunchAfterMissionResponse, _impl_.mission_result_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission::GetReturnToLaunchAfterMissionResponse, _impl_.enable_),
    0,
    ~0u,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission::SetReturnToLaunchAfterMissionRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission::SetReturnToLaunchAfterMissionRequest, _impl_.enable_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission::SetReturnToLaunchAfterMissionResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission::SetReturnToLaunchAfterMissionResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission::SetReturnToLaunchAfterMissionResponse, _impl_.mission_result_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission::MissionItem, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission::MissionItem, _impl_.latitude_deg_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission::MissionItem, _impl_.longitude_deg_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission::MissionItem, _impl_.relative_altitude_m_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission::MissionItem, _impl_.speed_m_s_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission::MissionItem, _impl_.is_fly_through_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission::MissionItem, _impl_.gimbal_pitch_deg_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission::MissionItem, _impl_.gimbal_yaw_deg_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission::MissionItem, _impl_.camera_action_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission::MissionItem, _impl_.loiter_time_s_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission::MissionItem, _impl_.camera_photo_interval_s_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission::MissionItem, _impl_.acceptance_radius_m_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission::MissionItem, _impl_.yaw_deg_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission::MissionItem, _impl_.camera_photo_distance_m_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission::MissionItem, _impl_.vehicle_action_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission::MissionPlan, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission::MissionPlan, _impl_.mission_items_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission::MissionProgress, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission::MissionProgress, _impl_.current_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission::MissionProgress, _impl_.total_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission::MissionResult, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission::MissionResult, _impl_.result_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission::MissionResult, _impl_.result_str_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission::ProgressData, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission::ProgressData, _impl_.progress_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission::ProgressDataOrMission, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission::ProgressDataOrMission, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission::ProgressDataOrMission, _impl_.has_progress_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission::ProgressDataOrMission, _impl_.progress_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission::ProgressDataOrMission, _impl_.has_mission_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission::ProgressDataOrMission, _impl_.mission_plan_),
    ~0u,
    ~0u,
    ~0u,
    0,
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, 9, -1, sizeof(::mavsdk::rpc::mission::UploadMissionRequest)},
        {10, 19, -1, sizeof(::mavsdk::rpc::mission::UploadMissionResponse)},
        {20, 29, -1, sizeof(::mavsdk::rpc::mission::SubscribeUploadMissionWithProgressRequest)},
        {30, 40, -1, sizeof(::mavsdk::rpc::mission::UploadMissionWithProgressResponse)},
        {42, -1, -1, sizeof(::mavsdk::rpc::mission::CancelMissionUploadRequest)},
        {50, 59, -1, sizeof(::mavsdk::rpc::mission::CancelMissionUploadResponse)},
        {60, -1, -1, sizeof(::mavsdk::rpc::mission::DownloadMissionRequest)},
        {68, 78, -1, sizeof(::mavsdk::rpc::mission::DownloadMissionResponse)},
        {80, -1, -1, sizeof(::mavsdk::rpc::mission::SubscribeDownloadMissionWithProgressRequest)},
        {88, 98, -1, sizeof(::mavsdk::rpc::mission::DownloadMissionWithProgressResponse)},
        {100, -1, -1, sizeof(::mavsdk::rpc::mission::CancelMissionDownloadRequest)},
        {108, 117, -1, sizeof(::mavsdk::rpc::mission::CancelMissionDownloadResponse)},
        {118, -1, -1, sizeof(::mavsdk::rpc::mission::StartMissionRequest)},
        {126, 135, -1, sizeof(::mavsdk::rpc::mission::StartMissionResponse)},
        {136, -1, -1, sizeof(::mavsdk::rpc::mission::PauseMissionRequest)},
        {144, 153, -1, sizeof(::mavsdk::rpc::mission::PauseMissionResponse)},
        {154, -1, -1, sizeof(::mavsdk::rpc::mission::ClearMissionRequest)},
        {162, 171, -1, sizeof(::mavsdk::rpc::mission::ClearMissionResponse)},
        {172, -1, -1, sizeof(::mavsdk::rpc::mission::SetCurrentMissionItemRequest)},
        {181, 190, -1, sizeof(::mavsdk::rpc::mission::SetCurrentMissionItemResponse)},
        {191, -1, -1, sizeof(::mavsdk::rpc::mission::IsMissionFinishedRequest)},
        {199, 209, -1, sizeof(::mavsdk::rpc::mission::IsMissionFinishedResponse)},
        {211, -1, -1, sizeof(::mavsdk::rpc::mission::SubscribeMissionProgressRequest)},
        {219, 228, -1, sizeof(::mavsdk::rpc::mission::MissionProgressResponse)},
        {229, -1, -1, sizeof(::mavsdk::rpc::mission::GetReturnToLaunchAfterMissionRequest)},
        {237, 247, -1, sizeof(::mavsdk::rpc::mission::GetReturnToLaunchAfterMissionResponse)},
        {249, -1, -1, sizeof(::mavsdk::rpc::mission::SetReturnToLaunchAfterMissionRequest)},
        {258, 267, -1, sizeof(::mavsdk::rpc::mission::SetReturnToLaunchAfterMissionResponse)},
        {268, -1, -1, sizeof(::mavsdk::rpc::mission::MissionItem)},
        {290, -1, -1, sizeof(::mavsdk::rpc::mission::MissionPlan)},
        {299, -1, -1, sizeof(::mavsdk::rpc::mission::MissionProgress)},
        {309, -1, -1, sizeof(::mavsdk::rpc::mission::MissionResult)},
        {319, -1, -1, sizeof(::mavsdk::rpc::mission::ProgressData)},
        {328, 340, -1, sizeof(::mavsdk::rpc::mission::ProgressDataOrMission)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::mavsdk::rpc::mission::_UploadMissionRequest_default_instance_._instance,
    &::mavsdk::rpc::mission::_UploadMissionResponse_default_instance_._instance,
    &::mavsdk::rpc::mission::_SubscribeUploadMissionWithProgressRequest_default_instance_._instance,
    &::mavsdk::rpc::mission::_UploadMissionWithProgressResponse_default_instance_._instance,
    &::mavsdk::rpc::mission::_CancelMissionUploadRequest_default_instance_._instance,
    &::mavsdk::rpc::mission::_CancelMissionUploadResponse_default_instance_._instance,
    &::mavsdk::rpc::mission::_DownloadMissionRequest_default_instance_._instance,
    &::mavsdk::rpc::mission::_DownloadMissionResponse_default_instance_._instance,
    &::mavsdk::rpc::mission::_SubscribeDownloadMissionWithProgressRequest_default_instance_._instance,
    &::mavsdk::rpc::mission::_DownloadMissionWithProgressResponse_default_instance_._instance,
    &::mavsdk::rpc::mission::_CancelMissionDownloadRequest_default_instance_._instance,
    &::mavsdk::rpc::mission::_CancelMissionDownloadResponse_default_instance_._instance,
    &::mavsdk::rpc::mission::_StartMissionRequest_default_instance_._instance,
    &::mavsdk::rpc::mission::_StartMissionResponse_default_instance_._instance,
    &::mavsdk::rpc::mission::_PauseMissionRequest_default_instance_._instance,
    &::mavsdk::rpc::mission::_PauseMissionResponse_default_instance_._instance,
    &::mavsdk::rpc::mission::_ClearMissionRequest_default_instance_._instance,
    &::mavsdk::rpc::mission::_ClearMissionResponse_default_instance_._instance,
    &::mavsdk::rpc::mission::_SetCurrentMissionItemRequest_default_instance_._instance,
    &::mavsdk::rpc::mission::_SetCurrentMissionItemResponse_default_instance_._instance,
    &::mavsdk::rpc::mission::_IsMissionFinishedRequest_default_instance_._instance,
    &::mavsdk::rpc::mission::_IsMissionFinishedResponse_default_instance_._instance,
    &::mavsdk::rpc::mission::_SubscribeMissionProgressRequest_default_instance_._instance,
    &::mavsdk::rpc::mission::_MissionProgressResponse_default_instance_._instance,
    &::mavsdk::rpc::mission::_GetReturnToLaunchAfterMissionRequest_default_instance_._instance,
    &::mavsdk::rpc::mission::_GetReturnToLaunchAfterMissionResponse_default_instance_._instance,
    &::mavsdk::rpc::mission::_SetReturnToLaunchAfterMissionRequest_default_instance_._instance,
    &::mavsdk::rpc::mission::_SetReturnToLaunchAfterMissionResponse_default_instance_._instance,
    &::mavsdk::rpc::mission::_MissionItem_default_instance_._instance,
    &::mavsdk::rpc::mission::_MissionPlan_default_instance_._instance,
    &::mavsdk::rpc::mission::_MissionProgress_default_instance_._instance,
    &::mavsdk::rpc::mission::_MissionResult_default_instance_._instance,
    &::mavsdk::rpc::mission::_ProgressData_default_instance_._instance,
    &::mavsdk::rpc::mission::_ProgressDataOrMission_default_instance_._instance,
};
const char descriptor_table_protodef_mission_2fmission_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\025mission/mission.proto\022\022mavsdk.rpc.miss"
    "ion\032\024mavsdk_options.proto\"M\n\024UploadMissi"
    "onRequest\0225\n\014mission_plan\030\001 \001(\0132\037.mavsdk"
    ".rpc.mission.MissionPlan\"R\n\025UploadMissio"
    "nResponse\0229\n\016mission_result\030\001 \001(\0132!.mavs"
    "dk.rpc.mission.MissionResult\"b\n)Subscrib"
    "eUploadMissionWithProgressRequest\0225\n\014mis"
    "sion_plan\030\001 \001(\0132\037.mavsdk.rpc.mission.Mis"
    "sionPlan\"\227\001\n!UploadMissionWithProgressRe"
    "sponse\0229\n\016mission_result\030\001 \001(\0132!.mavsdk."
    "rpc.mission.MissionResult\0227\n\rprogress_da"
    "ta\030\002 \001(\0132 .mavsdk.rpc.mission.ProgressDa"
    "ta\"\034\n\032CancelMissionUploadRequest\"X\n\033Canc"
    "elMissionUploadResponse\0229\n\016mission_resul"
    "t\030\001 \001(\0132!.mavsdk.rpc.mission.MissionResu"
    "lt\"\030\n\026DownloadMissionRequest\"\213\001\n\027Downloa"
    "dMissionResponse\0229\n\016mission_result\030\001 \001(\013"
    "2!.mavsdk.rpc.mission.MissionResult\0225\n\014m"
    "ission_plan\030\002 \001(\0132\037.mavsdk.rpc.mission.M"
    "issionPlan\"-\n+SubscribeDownloadMissionWi"
    "thProgressRequest\"\242\001\n#DownloadMissionWit"
    "hProgressResponse\0229\n\016mission_result\030\001 \001("
    "\0132!.mavsdk.rpc.mission.MissionResult\022@\n\r"
    "progress_data\030\002 \001(\0132).mavsdk.rpc.mission"
    ".ProgressDataOrMission\"\036\n\034CancelMissionD"
    "ownloadRequest\"Z\n\035CancelMissionDownloadR"
    "esponse\0229\n\016mission_result\030\001 \001(\0132!.mavsdk"
    ".rpc.mission.MissionResult\"\025\n\023StartMissi"
    "onRequest\"Q\n\024StartMissionResponse\0229\n\016mis"
    "sion_result\030\001 \001(\0132!.mavsdk.rpc.mission.M"
    "issionResult\"\025\n\023PauseMissionRequest\"Q\n\024P"
    "auseMissionResponse\0229\n\016mission_result\030\001 "
    "\001(\0132!.mavsdk.rpc.mission.MissionResult\"\025"
    "\n\023ClearMissionRequest\"Q\n\024ClearMissionRes"
    "ponse\0229\n\016mission_result\030\001 \001(\0132!.mavsdk.r"
    "pc.mission.MissionResult\"-\n\034SetCurrentMi"
    "ssionItemRequest\022\r\n\005index\030\001 \001(\005\"Z\n\035SetCu"
    "rrentMissionItemResponse\0229\n\016mission_resu"
    "lt\030\001 \001(\0132!.mavsdk.rpc.mission.MissionRes"
    "ult\"\032\n\030IsMissionFinishedRequest\"k\n\031IsMis"
    "sionFinishedResponse\0229\n\016mission_result\030\001"
    " \001(\0132!.mavsdk.rpc.mission.MissionResult\022"
    "\023\n\013is_finished\030\002 \001(\010\"!\n\037SubscribeMission"
    "ProgressRequest\"X\n\027MissionProgressRespon"
    "se\022=\n\020mission_progress\030\001 \001(\0132#.mavsdk.rp"
    "c.mission.MissionProgress\"&\n$GetReturnTo"
    "LaunchAfterMissionRequest\"r\n%GetReturnTo"
    "LaunchAfterMissionResponse\0229\n\016mission_re"
    "sult\030\001 \001(\0132!.mavsdk.rpc.mission.MissionR"
    "esult\022\016\n\006enable\030\002 \001(\010\"6\n$SetReturnToLaun"
    "chAfterMissionRequest\022\016\n\006enable\030\001 \001(\010\"b\n"
    "%SetReturnToLaunchAfterMissionResponse\0229"
    "\n\016mission_result\030\001 \001(\0132!.mavsdk.rpc.miss"
    "ion.MissionResult\"\255\010\n\013MissionItem\022(\n\014lat"
    "itude_deg\030\001 \001(\001B\022\202\265\030\003NaN\211\265\030H\257\274\232\362\327z>\022)\n\rl"
    "ongitude_deg\030\002 \001(\001B\022\202\265\030\003NaN\211\265\030H\257\274\232\362\327z>\022$"
    "\n\023relative_altitude_m\030\003 \001(\002B\007\202\265\030\003NaN\022\032\n\t"
    "speed_m_s\030\004 \001(\002B\007\202\265\030\003NaN\022!\n\016is_fly_throu"
    "gh\030\005 \001(\010B\t\202\265\030\005false\022,\n\020gimbal_pitch_deg\030"
    "\006 \001(\002B\022\202\265\030\003NaN\211\265\030-C\034\353\3426\032\?\022*\n\016gimbal_yaw_"
    "deg\030\007 \001(\002B\022\202\265\030\003NaN\211\265\030-C\034\353\3426\032\?\022C\n\rcamera_"
    "action\030\010 \001(\0162,.mavsdk.rpc.mission.Missio"
    "nItem.CameraAction\022\036\n\rloiter_time_s\030\t \001("
    "\002B\007\202\265\030\003NaN\022(\n\027camera_photo_interval_s\030\n "
    "\001(\001B\007\202\265\030\0031.0\022$\n\023acceptance_radius_m\030\013 \001("
    "\002B\007\202\265\030\003NaN\022\030\n\007yaw_deg\030\014 \001(\002B\007\202\265\030\003NaN\022(\n\027"
    "camera_photo_distance_m\030\r \001(\002B\007\202\265\030\003NAN\022E"
    "\n\016vehicle_action\030\016 \001(\0162-.mavsdk.rpc.miss"
    "ion.MissionItem.VehicleAction\"\237\002\n\014Camera"
    "Action\022\026\n\022CAMERA_ACTION_NONE\020\000\022\034\n\030CAMERA"
    "_ACTION_TAKE_PHOTO\020\001\022&\n\"CAMERA_ACTION_ST"
    "ART_PHOTO_INTERVAL\020\002\022%\n!CAMERA_ACTION_ST"
    "OP_PHOTO_INTERVAL\020\003\022\035\n\031CAMERA_ACTION_STA"
    "RT_VIDEO\020\004\022\034\n\030CAMERA_ACTION_STOP_VIDEO\020\005"
    "\022&\n\"CAMERA_ACTION_START_PHOTO_DISTANCE\020\006"
    "\022%\n!CAMERA_ACTION_STOP_PHOTO_DISTANCE\020\007\""
    "\247\001\n\rVehicleAction\022\027\n\023VEHICLE_ACTION_NONE"
    "\020\000\022\032\n\026VEHICLE_ACTION_TAKEOFF\020\001\022\027\n\023VEHICL"
    "E_ACTION_LAND\020\002\022#\n\037VEHICLE_ACTION_TRANSI"
    "TION_TO_FW\020\003\022#\n\037VEHICLE_ACTION_TRANSITIO"
    "N_TO_MC\020\004\"E\n\013MissionPlan\0226\n\rmission_item"
    "s\030\001 \003(\0132\037.mavsdk.rpc.mission.MissionItem"
    "\"1\n\017MissionProgress\022\017\n\007current\030\001 \001(\005\022\r\n\005"
    "total\030\002 \001(\005\"\377\003\n\rMissionResult\0228\n\006result\030"
    "\001 \001(\0162(.mavsdk.rpc.mission.MissionResult"
    ".Result\022\022\n\nresult_str\030\002 \001(\t\"\237\003\n\006Result\022\022"
    "\n\016RESULT_UNKNOWN\020\000\022\022\n\016RESULT_SUCCESS\020\001\022\020"
    "\n\014RESULT_ERROR\020\002\022!\n\035RESULT_TOO_MANY_MISS"
    "ION_ITEMS\020\003\022\017\n\013RESULT_BUSY\020\004\022\022\n\016RESULT_T"
    "IMEOUT\020\005\022\033\n\027RESULT_INVALID_ARGUMENT\020\006\022\026\n"
    "\022RESULT_UNSUPPORTED\020\007\022\037\n\033RESULT_NO_MISSI"
    "ON_AVAILABLE\020\010\022\"\n\036RESULT_UNSUPPORTED_MIS"
    "SION_CMD\020\013\022\035\n\031RESULT_TRANSFER_CANCELLED\020"
    "\014\022\024\n\020RESULT_NO_SYSTEM\020\r\022\017\n\013RESULT_NEXT\020\016"
    "\022\021\n\rRESULT_DENIED\020\017\022\031\n\025RESULT_PROTOCOL_E"
    "RROR\020\020\022%\n!RESULT_INT_MESSAGES_NOT_SUPPOR"
    "TED\020\021\")\n\014ProgressData\022\031\n\010progress\030\001 \001(\002B"
    "\007\202\265\030\003NaN\"\237\001\n\025ProgressDataOrMission\022\037\n\014ha"
    "s_progress\030\001 \001(\010B\t\202\265\030\005false\022\031\n\010progress\030"
    "\002 \001(\002B\007\202\265\030\003NaN\022\023\n\013has_mission\030\003 \001(\010\0225\n\014m"
    "ission_plan\030\004 \001(\0132\037.mavsdk.rpc.mission.M"
    "issionPlan2\245\016\n\016MissionService\022f\n\rUploadM"
    "ission\022(.mavsdk.rpc.mission.UploadMissio"
    "nRequest\032).mavsdk.rpc.mission.UploadMiss"
    "ionResponse\"\000\022\246\001\n\"SubscribeUploadMission"
    "WithProgress\022=.mavsdk.rpc.mission.Subscr"
    "ibeUploadMissionWithProgressRequest\0325.ma"
    "vsdk.rpc.mission.UploadMissionWithProgre"
    "ssResponse\"\010\200\265\030\000\210\265\030\0010\001\022|\n\023CancelMissionU"
    "pload\022..mavsdk.rpc.mission.CancelMission"
    "UploadRequest\032/.mavsdk.rpc.mission.Cance"
    "lMissionUploadResponse\"\004\200\265\030\001\022l\n\017Download"
    "Mission\022*.mavsdk.rpc.mission.DownloadMis"
    "sionRequest\032+.mavsdk.rpc.mission.Downloa"
    "dMissionResponse\"\000\022\254\001\n$SubscribeDownload"
    "MissionWithProgress\022\?.mavsdk.rpc.mission"
    ".SubscribeDownloadMissionWithProgressReq"
    "uest\0327.mavsdk.rpc.mission.DownloadMissio"
    "nWithProgressResponse\"\010\200\265\030\000\210\265\030\0010\001\022\202\001\n\025Ca"
    "ncelMissionDownload\0220.mavsdk.rpc.mission"
    ".CancelMissionDownloadRequest\0321.mavsdk.r"
    "pc.mission.CancelMissionDownloadResponse"
    "\"\004\200\265\030\001\022c\n\014StartMission\022\'.mavsdk.rpc.miss"
    "ion.StartMissionRequest\032(.mavsdk.rpc.mis"
    "sion.StartMissionResponse\"\000\022c\n\014PauseMiss"
    "ion\022\'.mavsdk.rpc.mission.PauseMissionReq"
    "uest\032(.mavsdk.rpc.mission.PauseMissionRe"
    "sponse\"\000\022c\n\014ClearMission\022\'.mavsdk.rpc.mi"
    "ssion.ClearMissionRequest\032(.mavsdk.rpc.m"
    "ission.ClearMissionResponse\"\000\022~\n\025SetCurr"
    "entMissionItem\0220.mavsdk.rpc.mission.SetC"
    "urrentMissionItemRequest\0321.mavsdk.rpc.mi"
    "ssion.SetCurrentMissionItemResponse\"\000\022v\n"
    "\021IsMissionFinished\022,.mavsdk.rpc.mission."
    "IsMissionFinishedRequest\032-.mavsdk.rpc.mi"
    "ssion.IsMissionFinishedResponse\"\004\200\265\030\001\022\200\001"
    "\n\030SubscribeMissionProgress\0223.mavsdk.rpc."
    "mission.SubscribeMissionProgressRequest\032"
    "+.mavsdk.rpc.mission.MissionProgressResp"
    "onse\"\0000\001\022\232\001\n\035GetReturnToLaunchAfterMissi"
    "on\0228.mavsdk.rpc.mission.GetReturnToLaunc"
    "hAfterMissionRequest\0329.mavsdk.rpc.missio"
    "n.GetReturnToLaunchAfterMissionResponse\""
    "\004\200\265\030\001\022\232\001\n\035SetReturnToLaunchAfterMission\022"
    "8.mavsdk.rpc.mission.SetReturnToLaunchAf"
    "terMissionRequest\0329.mavsdk.rpc.mission.S"
    "etReturnToLaunchAfterMissionResponse\"\004\200\265"
    "\030\001B!\n\021io.mavsdk.missionB\014MissionProtob\006p"
    "roto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_mission_2fmission_2eproto_deps[1] =
    {
        &::descriptor_table_mavsdk_5foptions_2eproto,
};
static ::absl::once_flag descriptor_table_mission_2fmission_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_mission_2fmission_2eproto = {
    false,
    false,
    5925,
    descriptor_table_protodef_mission_2fmission_2eproto,
    "mission/mission.proto",
    &descriptor_table_mission_2fmission_2eproto_once,
    descriptor_table_mission_2fmission_2eproto_deps,
    1,
    34,
    schemas,
    file_default_instances,
    TableStruct_mission_2fmission_2eproto::offsets,
    file_level_metadata_mission_2fmission_2eproto,
    file_level_enum_descriptors_mission_2fmission_2eproto,
    file_level_service_descriptors_mission_2fmission_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_mission_2fmission_2eproto_getter() {
  return &descriptor_table_mission_2fmission_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_mission_2fmission_2eproto(&descriptor_table_mission_2fmission_2eproto);
namespace mavsdk {
namespace rpc {
namespace mission {
const ::google::protobuf::EnumDescriptor* MissionItem_CameraAction_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_mission_2fmission_2eproto);
  return file_level_enum_descriptors_mission_2fmission_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t MissionItem_CameraAction_internal_data_[] = {
    524288u, 0u, };
bool MissionItem_CameraAction_IsValid(int value) {
  return 0 <= value && value <= 7;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr MissionItem_CameraAction MissionItem::CAMERA_ACTION_NONE;
constexpr MissionItem_CameraAction MissionItem::CAMERA_ACTION_TAKE_PHOTO;
constexpr MissionItem_CameraAction MissionItem::CAMERA_ACTION_START_PHOTO_INTERVAL;
constexpr MissionItem_CameraAction MissionItem::CAMERA_ACTION_STOP_PHOTO_INTERVAL;
constexpr MissionItem_CameraAction MissionItem::CAMERA_ACTION_START_VIDEO;
constexpr MissionItem_CameraAction MissionItem::CAMERA_ACTION_STOP_VIDEO;
constexpr MissionItem_CameraAction MissionItem::CAMERA_ACTION_START_PHOTO_DISTANCE;
constexpr MissionItem_CameraAction MissionItem::CAMERA_ACTION_STOP_PHOTO_DISTANCE;
constexpr MissionItem_CameraAction MissionItem::CameraAction_MIN;
constexpr MissionItem_CameraAction MissionItem::CameraAction_MAX;
constexpr int MissionItem::CameraAction_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* MissionItem_VehicleAction_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_mission_2fmission_2eproto);
  return file_level_enum_descriptors_mission_2fmission_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t MissionItem_VehicleAction_internal_data_[] = {
    327680u, 0u, };
bool MissionItem_VehicleAction_IsValid(int value) {
  return 0 <= value && value <= 4;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr MissionItem_VehicleAction MissionItem::VEHICLE_ACTION_NONE;
constexpr MissionItem_VehicleAction MissionItem::VEHICLE_ACTION_TAKEOFF;
constexpr MissionItem_VehicleAction MissionItem::VEHICLE_ACTION_LAND;
constexpr MissionItem_VehicleAction MissionItem::VEHICLE_ACTION_TRANSITION_TO_FW;
constexpr MissionItem_VehicleAction MissionItem::VEHICLE_ACTION_TRANSITION_TO_MC;
constexpr MissionItem_VehicleAction MissionItem::VehicleAction_MIN;
constexpr MissionItem_VehicleAction MissionItem::VehicleAction_MAX;
constexpr int MissionItem::VehicleAction_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* MissionResult_Result_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_mission_2fmission_2eproto);
  return file_level_enum_descriptors_mission_2fmission_2eproto[2];
}
PROTOBUF_CONSTINIT const uint32_t MissionResult_Result_internal_data_[] = {
    589824u, 32u, 508u, };
bool MissionResult_Result_IsValid(int value) {
  return 0 <= value && value <= 17 && ((260607u >> value) & 1) != 0;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr MissionResult_Result MissionResult::RESULT_UNKNOWN;
constexpr MissionResult_Result MissionResult::RESULT_SUCCESS;
constexpr MissionResult_Result MissionResult::RESULT_ERROR;
constexpr MissionResult_Result MissionResult::RESULT_TOO_MANY_MISSION_ITEMS;
constexpr MissionResult_Result MissionResult::RESULT_BUSY;
constexpr MissionResult_Result MissionResult::RESULT_TIMEOUT;
constexpr MissionResult_Result MissionResult::RESULT_INVALID_ARGUMENT;
constexpr MissionResult_Result MissionResult::RESULT_UNSUPPORTED;
constexpr MissionResult_Result MissionResult::RESULT_NO_MISSION_AVAILABLE;
constexpr MissionResult_Result MissionResult::RESULT_UNSUPPORTED_MISSION_CMD;
constexpr MissionResult_Result MissionResult::RESULT_TRANSFER_CANCELLED;
constexpr MissionResult_Result MissionResult::RESULT_NO_SYSTEM;
constexpr MissionResult_Result MissionResult::RESULT_NEXT;
constexpr MissionResult_Result MissionResult::RESULT_DENIED;
constexpr MissionResult_Result MissionResult::RESULT_PROTOCOL_ERROR;
constexpr MissionResult_Result MissionResult::RESULT_INT_MESSAGES_NOT_SUPPORTED;
constexpr MissionResult_Result MissionResult::Result_MIN;
constexpr MissionResult_Result MissionResult::Result_MAX;
constexpr int MissionResult::Result_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
// ===================================================================

class UploadMissionRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<UploadMissionRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(UploadMissionRequest, _impl_._has_bits_);
  static const ::mavsdk::rpc::mission::MissionPlan& mission_plan(const UploadMissionRequest* msg);
  static void set_has_mission_plan(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::mission::MissionPlan& UploadMissionRequest::_Internal::mission_plan(const UploadMissionRequest* msg) {
  return *msg->_impl_.mission_plan_;
}
UploadMissionRequest::UploadMissionRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.mission.UploadMissionRequest)
}
inline PROTOBUF_NDEBUG_INLINE UploadMissionRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

UploadMissionRequest::UploadMissionRequest(
    ::google::protobuf::Arena* arena,
    const UploadMissionRequest& from)
    : ::google::protobuf::Message(arena) {
  UploadMissionRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.mission_plan_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::mission::MissionPlan>(arena, *from._impl_.mission_plan_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.mission.UploadMissionRequest)
}
inline PROTOBUF_NDEBUG_INLINE UploadMissionRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void UploadMissionRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.mission_plan_ = {};
}
UploadMissionRequest::~UploadMissionRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.mission.UploadMissionRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void UploadMissionRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.mission_plan_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void UploadMissionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.mission.UploadMissionRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.mission_plan_ != nullptr);
    _impl_.mission_plan_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* UploadMissionRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> UploadMissionRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(UploadMissionRequest, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_UploadMissionRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.mission.MissionPlan mission_plan = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(UploadMissionRequest, _impl_.mission_plan_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.mission.MissionPlan mission_plan = 1;
    {PROTOBUF_FIELD_OFFSET(UploadMissionRequest, _impl_.mission_plan_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::mission::MissionPlan>()},
  }}, {{
  }},
};

::uint8_t* UploadMissionRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.mission.UploadMissionRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.mission.MissionPlan mission_plan = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::mission_plan(this),
        _Internal::mission_plan(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.mission.UploadMissionRequest)
  return target;
}

::size_t UploadMissionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.mission.UploadMissionRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.mission.MissionPlan mission_plan = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.mission_plan_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData UploadMissionRequest::_class_data_ = {
    UploadMissionRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* UploadMissionRequest::GetClassData() const {
  return &_class_data_;
}

void UploadMissionRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<UploadMissionRequest*>(&to_msg);
  auto& from = static_cast<const UploadMissionRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.mission.UploadMissionRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_mission_plan()->::mavsdk::rpc::mission::MissionPlan::MergeFrom(
        from._internal_mission_plan());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UploadMissionRequest::CopyFrom(const UploadMissionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.mission.UploadMissionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool UploadMissionRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* UploadMissionRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void UploadMissionRequest::InternalSwap(UploadMissionRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.mission_plan_, other->_impl_.mission_plan_);
}

::google::protobuf::Metadata UploadMissionRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_mission_2fmission_2eproto_getter, &descriptor_table_mission_2fmission_2eproto_once,
      file_level_metadata_mission_2fmission_2eproto[0]);
}
// ===================================================================

class UploadMissionResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<UploadMissionResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(UploadMissionResponse, _impl_._has_bits_);
  static const ::mavsdk::rpc::mission::MissionResult& mission_result(const UploadMissionResponse* msg);
  static void set_has_mission_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::mission::MissionResult& UploadMissionResponse::_Internal::mission_result(const UploadMissionResponse* msg) {
  return *msg->_impl_.mission_result_;
}
UploadMissionResponse::UploadMissionResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.mission.UploadMissionResponse)
}
inline PROTOBUF_NDEBUG_INLINE UploadMissionResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

UploadMissionResponse::UploadMissionResponse(
    ::google::protobuf::Arena* arena,
    const UploadMissionResponse& from)
    : ::google::protobuf::Message(arena) {
  UploadMissionResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.mission_result_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::mission::MissionResult>(arena, *from._impl_.mission_result_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.mission.UploadMissionResponse)
}
inline PROTOBUF_NDEBUG_INLINE UploadMissionResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void UploadMissionResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.mission_result_ = {};
}
UploadMissionResponse::~UploadMissionResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.mission.UploadMissionResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void UploadMissionResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.mission_result_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void UploadMissionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.mission.UploadMissionResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.mission_result_ != nullptr);
    _impl_.mission_result_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* UploadMissionResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> UploadMissionResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(UploadMissionResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_UploadMissionResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.mission.MissionResult mission_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(UploadMissionResponse, _impl_.mission_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.mission.MissionResult mission_result = 1;
    {PROTOBUF_FIELD_OFFSET(UploadMissionResponse, _impl_.mission_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::mission::MissionResult>()},
  }}, {{
  }},
};

::uint8_t* UploadMissionResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.mission.UploadMissionResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.mission.MissionResult mission_result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::mission_result(this),
        _Internal::mission_result(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.mission.UploadMissionResponse)
  return target;
}

::size_t UploadMissionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.mission.UploadMissionResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.mission.MissionResult mission_result = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.mission_result_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData UploadMissionResponse::_class_data_ = {
    UploadMissionResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* UploadMissionResponse::GetClassData() const {
  return &_class_data_;
}

void UploadMissionResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<UploadMissionResponse*>(&to_msg);
  auto& from = static_cast<const UploadMissionResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.mission.UploadMissionResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_mission_result()->::mavsdk::rpc::mission::MissionResult::MergeFrom(
        from._internal_mission_result());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UploadMissionResponse::CopyFrom(const UploadMissionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.mission.UploadMissionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool UploadMissionResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* UploadMissionResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void UploadMissionResponse::InternalSwap(UploadMissionResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.mission_result_, other->_impl_.mission_result_);
}

::google::protobuf::Metadata UploadMissionResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_mission_2fmission_2eproto_getter, &descriptor_table_mission_2fmission_2eproto_once,
      file_level_metadata_mission_2fmission_2eproto[1]);
}
// ===================================================================

class SubscribeUploadMissionWithProgressRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<SubscribeUploadMissionWithProgressRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SubscribeUploadMissionWithProgressRequest, _impl_._has_bits_);
  static const ::mavsdk::rpc::mission::MissionPlan& mission_plan(const SubscribeUploadMissionWithProgressRequest* msg);
  static void set_has_mission_plan(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::mission::MissionPlan& SubscribeUploadMissionWithProgressRequest::_Internal::mission_plan(const SubscribeUploadMissionWithProgressRequest* msg) {
  return *msg->_impl_.mission_plan_;
}
SubscribeUploadMissionWithProgressRequest::SubscribeUploadMissionWithProgressRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.mission.SubscribeUploadMissionWithProgressRequest)
}
inline PROTOBUF_NDEBUG_INLINE SubscribeUploadMissionWithProgressRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SubscribeUploadMissionWithProgressRequest::SubscribeUploadMissionWithProgressRequest(
    ::google::protobuf::Arena* arena,
    const SubscribeUploadMissionWithProgressRequest& from)
    : ::google::protobuf::Message(arena) {
  SubscribeUploadMissionWithProgressRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.mission_plan_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::mission::MissionPlan>(arena, *from._impl_.mission_plan_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.mission.SubscribeUploadMissionWithProgressRequest)
}
inline PROTOBUF_NDEBUG_INLINE SubscribeUploadMissionWithProgressRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SubscribeUploadMissionWithProgressRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.mission_plan_ = {};
}
SubscribeUploadMissionWithProgressRequest::~SubscribeUploadMissionWithProgressRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.mission.SubscribeUploadMissionWithProgressRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SubscribeUploadMissionWithProgressRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.mission_plan_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SubscribeUploadMissionWithProgressRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.mission.SubscribeUploadMissionWithProgressRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.mission_plan_ != nullptr);
    _impl_.mission_plan_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SubscribeUploadMissionWithProgressRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> SubscribeUploadMissionWithProgressRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SubscribeUploadMissionWithProgressRequest, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SubscribeUploadMissionWithProgressRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.mission.MissionPlan mission_plan = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SubscribeUploadMissionWithProgressRequest, _impl_.mission_plan_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.mission.MissionPlan mission_plan = 1;
    {PROTOBUF_FIELD_OFFSET(SubscribeUploadMissionWithProgressRequest, _impl_.mission_plan_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::mission::MissionPlan>()},
  }}, {{
  }},
};

::uint8_t* SubscribeUploadMissionWithProgressRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.mission.SubscribeUploadMissionWithProgressRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.mission.MissionPlan mission_plan = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::mission_plan(this),
        _Internal::mission_plan(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.mission.SubscribeUploadMissionWithProgressRequest)
  return target;
}

::size_t SubscribeUploadMissionWithProgressRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.mission.SubscribeUploadMissionWithProgressRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.mission.MissionPlan mission_plan = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.mission_plan_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SubscribeUploadMissionWithProgressRequest::_class_data_ = {
    SubscribeUploadMissionWithProgressRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SubscribeUploadMissionWithProgressRequest::GetClassData() const {
  return &_class_data_;
}

void SubscribeUploadMissionWithProgressRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SubscribeUploadMissionWithProgressRequest*>(&to_msg);
  auto& from = static_cast<const SubscribeUploadMissionWithProgressRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.mission.SubscribeUploadMissionWithProgressRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_mission_plan()->::mavsdk::rpc::mission::MissionPlan::MergeFrom(
        from._internal_mission_plan());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SubscribeUploadMissionWithProgressRequest::CopyFrom(const SubscribeUploadMissionWithProgressRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.mission.SubscribeUploadMissionWithProgressRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SubscribeUploadMissionWithProgressRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SubscribeUploadMissionWithProgressRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SubscribeUploadMissionWithProgressRequest::InternalSwap(SubscribeUploadMissionWithProgressRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.mission_plan_, other->_impl_.mission_plan_);
}

::google::protobuf::Metadata SubscribeUploadMissionWithProgressRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_mission_2fmission_2eproto_getter, &descriptor_table_mission_2fmission_2eproto_once,
      file_level_metadata_mission_2fmission_2eproto[2]);
}
// ===================================================================

class UploadMissionWithProgressResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<UploadMissionWithProgressResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(UploadMissionWithProgressResponse, _impl_._has_bits_);
  static const ::mavsdk::rpc::mission::MissionResult& mission_result(const UploadMissionWithProgressResponse* msg);
  static void set_has_mission_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::mavsdk::rpc::mission::ProgressData& progress_data(const UploadMissionWithProgressResponse* msg);
  static void set_has_progress_data(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::mavsdk::rpc::mission::MissionResult& UploadMissionWithProgressResponse::_Internal::mission_result(const UploadMissionWithProgressResponse* msg) {
  return *msg->_impl_.mission_result_;
}
const ::mavsdk::rpc::mission::ProgressData& UploadMissionWithProgressResponse::_Internal::progress_data(const UploadMissionWithProgressResponse* msg) {
  return *msg->_impl_.progress_data_;
}
UploadMissionWithProgressResponse::UploadMissionWithProgressResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.mission.UploadMissionWithProgressResponse)
}
inline PROTOBUF_NDEBUG_INLINE UploadMissionWithProgressResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

UploadMissionWithProgressResponse::UploadMissionWithProgressResponse(
    ::google::protobuf::Arena* arena,
    const UploadMissionWithProgressResponse& from)
    : ::google::protobuf::Message(arena) {
  UploadMissionWithProgressResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.mission_result_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::mission::MissionResult>(arena, *from._impl_.mission_result_)
                : nullptr;
  _impl_.progress_data_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::mavsdk::rpc::mission::ProgressData>(arena, *from._impl_.progress_data_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.mission.UploadMissionWithProgressResponse)
}
inline PROTOBUF_NDEBUG_INLINE UploadMissionWithProgressResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void UploadMissionWithProgressResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, mission_result_),
           0,
           offsetof(Impl_, progress_data_) -
               offsetof(Impl_, mission_result_) +
               sizeof(Impl_::progress_data_));
}
UploadMissionWithProgressResponse::~UploadMissionWithProgressResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.mission.UploadMissionWithProgressResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void UploadMissionWithProgressResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.mission_result_;
  delete _impl_.progress_data_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void UploadMissionWithProgressResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.mission.UploadMissionWithProgressResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.mission_result_ != nullptr);
      _impl_.mission_result_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.progress_data_ != nullptr);
      _impl_.progress_data_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* UploadMissionWithProgressResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> UploadMissionWithProgressResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(UploadMissionWithProgressResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_UploadMissionWithProgressResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.mission.ProgressData progress_data = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(UploadMissionWithProgressResponse, _impl_.progress_data_)}},
    // .mavsdk.rpc.mission.MissionResult mission_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(UploadMissionWithProgressResponse, _impl_.mission_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.mission.MissionResult mission_result = 1;
    {PROTOBUF_FIELD_OFFSET(UploadMissionWithProgressResponse, _impl_.mission_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .mavsdk.rpc.mission.ProgressData progress_data = 2;
    {PROTOBUF_FIELD_OFFSET(UploadMissionWithProgressResponse, _impl_.progress_data_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::mission::MissionResult>()},
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::mission::ProgressData>()},
  }}, {{
  }},
};

::uint8_t* UploadMissionWithProgressResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.mission.UploadMissionWithProgressResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.mission.MissionResult mission_result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::mission_result(this),
        _Internal::mission_result(this).GetCachedSize(), target, stream);
  }

  // .mavsdk.rpc.mission.ProgressData progress_data = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::progress_data(this),
        _Internal::progress_data(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.mission.UploadMissionWithProgressResponse)
  return target;
}

::size_t UploadMissionWithProgressResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.mission.UploadMissionWithProgressResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .mavsdk.rpc.mission.MissionResult mission_result = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.mission_result_);
    }

    // .mavsdk.rpc.mission.ProgressData progress_data = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.progress_data_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData UploadMissionWithProgressResponse::_class_data_ = {
    UploadMissionWithProgressResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* UploadMissionWithProgressResponse::GetClassData() const {
  return &_class_data_;
}

void UploadMissionWithProgressResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<UploadMissionWithProgressResponse*>(&to_msg);
  auto& from = static_cast<const UploadMissionWithProgressResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.mission.UploadMissionWithProgressResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_mission_result()->::mavsdk::rpc::mission::MissionResult::MergeFrom(
          from._internal_mission_result());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_progress_data()->::mavsdk::rpc::mission::ProgressData::MergeFrom(
          from._internal_progress_data());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UploadMissionWithProgressResponse::CopyFrom(const UploadMissionWithProgressResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.mission.UploadMissionWithProgressResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool UploadMissionWithProgressResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* UploadMissionWithProgressResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void UploadMissionWithProgressResponse::InternalSwap(UploadMissionWithProgressResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UploadMissionWithProgressResponse, _impl_.progress_data_)
      + sizeof(UploadMissionWithProgressResponse::_impl_.progress_data_)
      - PROTOBUF_FIELD_OFFSET(UploadMissionWithProgressResponse, _impl_.mission_result_)>(
          reinterpret_cast<char*>(&_impl_.mission_result_),
          reinterpret_cast<char*>(&other->_impl_.mission_result_));
}

::google::protobuf::Metadata UploadMissionWithProgressResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_mission_2fmission_2eproto_getter, &descriptor_table_mission_2fmission_2eproto_once,
      file_level_metadata_mission_2fmission_2eproto[3]);
}
// ===================================================================

class CancelMissionUploadRequest::_Internal {
 public:
};

CancelMissionUploadRequest::CancelMissionUploadRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.mission.CancelMissionUploadRequest)
}
CancelMissionUploadRequest::CancelMissionUploadRequest(
    ::google::protobuf::Arena* arena,
    const CancelMissionUploadRequest& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  CancelMissionUploadRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.mission.CancelMissionUploadRequest)
}









::google::protobuf::Metadata CancelMissionUploadRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_mission_2fmission_2eproto_getter, &descriptor_table_mission_2fmission_2eproto_once,
      file_level_metadata_mission_2fmission_2eproto[4]);
}
// ===================================================================

class CancelMissionUploadResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CancelMissionUploadResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CancelMissionUploadResponse, _impl_._has_bits_);
  static const ::mavsdk::rpc::mission::MissionResult& mission_result(const CancelMissionUploadResponse* msg);
  static void set_has_mission_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::mission::MissionResult& CancelMissionUploadResponse::_Internal::mission_result(const CancelMissionUploadResponse* msg) {
  return *msg->_impl_.mission_result_;
}
CancelMissionUploadResponse::CancelMissionUploadResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.mission.CancelMissionUploadResponse)
}
inline PROTOBUF_NDEBUG_INLINE CancelMissionUploadResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

CancelMissionUploadResponse::CancelMissionUploadResponse(
    ::google::protobuf::Arena* arena,
    const CancelMissionUploadResponse& from)
    : ::google::protobuf::Message(arena) {
  CancelMissionUploadResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.mission_result_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::mission::MissionResult>(arena, *from._impl_.mission_result_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.mission.CancelMissionUploadResponse)
}
inline PROTOBUF_NDEBUG_INLINE CancelMissionUploadResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void CancelMissionUploadResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.mission_result_ = {};
}
CancelMissionUploadResponse::~CancelMissionUploadResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.mission.CancelMissionUploadResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CancelMissionUploadResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.mission_result_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void CancelMissionUploadResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.mission.CancelMissionUploadResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.mission_result_ != nullptr);
    _impl_.mission_result_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CancelMissionUploadResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> CancelMissionUploadResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CancelMissionUploadResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CancelMissionUploadResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.mission.MissionResult mission_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CancelMissionUploadResponse, _impl_.mission_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.mission.MissionResult mission_result = 1;
    {PROTOBUF_FIELD_OFFSET(CancelMissionUploadResponse, _impl_.mission_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::mission::MissionResult>()},
  }}, {{
  }},
};

::uint8_t* CancelMissionUploadResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.mission.CancelMissionUploadResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.mission.MissionResult mission_result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::mission_result(this),
        _Internal::mission_result(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.mission.CancelMissionUploadResponse)
  return target;
}

::size_t CancelMissionUploadResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.mission.CancelMissionUploadResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.mission.MissionResult mission_result = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.mission_result_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CancelMissionUploadResponse::_class_data_ = {
    CancelMissionUploadResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* CancelMissionUploadResponse::GetClassData() const {
  return &_class_data_;
}

void CancelMissionUploadResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CancelMissionUploadResponse*>(&to_msg);
  auto& from = static_cast<const CancelMissionUploadResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.mission.CancelMissionUploadResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_mission_result()->::mavsdk::rpc::mission::MissionResult::MergeFrom(
        from._internal_mission_result());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CancelMissionUploadResponse::CopyFrom(const CancelMissionUploadResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.mission.CancelMissionUploadResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CancelMissionUploadResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* CancelMissionUploadResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void CancelMissionUploadResponse::InternalSwap(CancelMissionUploadResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.mission_result_, other->_impl_.mission_result_);
}

::google::protobuf::Metadata CancelMissionUploadResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_mission_2fmission_2eproto_getter, &descriptor_table_mission_2fmission_2eproto_once,
      file_level_metadata_mission_2fmission_2eproto[5]);
}
// ===================================================================

class DownloadMissionRequest::_Internal {
 public:
};

DownloadMissionRequest::DownloadMissionRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.mission.DownloadMissionRequest)
}
DownloadMissionRequest::DownloadMissionRequest(
    ::google::protobuf::Arena* arena,
    const DownloadMissionRequest& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  DownloadMissionRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.mission.DownloadMissionRequest)
}









::google::protobuf::Metadata DownloadMissionRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_mission_2fmission_2eproto_getter, &descriptor_table_mission_2fmission_2eproto_once,
      file_level_metadata_mission_2fmission_2eproto[6]);
}
// ===================================================================

class DownloadMissionResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<DownloadMissionResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(DownloadMissionResponse, _impl_._has_bits_);
  static const ::mavsdk::rpc::mission::MissionResult& mission_result(const DownloadMissionResponse* msg);
  static void set_has_mission_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::mavsdk::rpc::mission::MissionPlan& mission_plan(const DownloadMissionResponse* msg);
  static void set_has_mission_plan(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::mavsdk::rpc::mission::MissionResult& DownloadMissionResponse::_Internal::mission_result(const DownloadMissionResponse* msg) {
  return *msg->_impl_.mission_result_;
}
const ::mavsdk::rpc::mission::MissionPlan& DownloadMissionResponse::_Internal::mission_plan(const DownloadMissionResponse* msg) {
  return *msg->_impl_.mission_plan_;
}
DownloadMissionResponse::DownloadMissionResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.mission.DownloadMissionResponse)
}
inline PROTOBUF_NDEBUG_INLINE DownloadMissionResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

DownloadMissionResponse::DownloadMissionResponse(
    ::google::protobuf::Arena* arena,
    const DownloadMissionResponse& from)
    : ::google::protobuf::Message(arena) {
  DownloadMissionResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.mission_result_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::mission::MissionResult>(arena, *from._impl_.mission_result_)
                : nullptr;
  _impl_.mission_plan_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::mavsdk::rpc::mission::MissionPlan>(arena, *from._impl_.mission_plan_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.mission.DownloadMissionResponse)
}
inline PROTOBUF_NDEBUG_INLINE DownloadMissionResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void DownloadMissionResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, mission_result_),
           0,
           offsetof(Impl_, mission_plan_) -
               offsetof(Impl_, mission_result_) +
               sizeof(Impl_::mission_plan_));
}
DownloadMissionResponse::~DownloadMissionResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.mission.DownloadMissionResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void DownloadMissionResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.mission_result_;
  delete _impl_.mission_plan_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void DownloadMissionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.mission.DownloadMissionResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.mission_result_ != nullptr);
      _impl_.mission_result_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.mission_plan_ != nullptr);
      _impl_.mission_plan_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* DownloadMissionResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> DownloadMissionResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(DownloadMissionResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_DownloadMissionResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.mission.MissionPlan mission_plan = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(DownloadMissionResponse, _impl_.mission_plan_)}},
    // .mavsdk.rpc.mission.MissionResult mission_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(DownloadMissionResponse, _impl_.mission_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.mission.MissionResult mission_result = 1;
    {PROTOBUF_FIELD_OFFSET(DownloadMissionResponse, _impl_.mission_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .mavsdk.rpc.mission.MissionPlan mission_plan = 2;
    {PROTOBUF_FIELD_OFFSET(DownloadMissionResponse, _impl_.mission_plan_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::mission::MissionResult>()},
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::mission::MissionPlan>()},
  }}, {{
  }},
};

::uint8_t* DownloadMissionResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.mission.DownloadMissionResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.mission.MissionResult mission_result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::mission_result(this),
        _Internal::mission_result(this).GetCachedSize(), target, stream);
  }

  // .mavsdk.rpc.mission.MissionPlan mission_plan = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::mission_plan(this),
        _Internal::mission_plan(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.mission.DownloadMissionResponse)
  return target;
}

::size_t DownloadMissionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.mission.DownloadMissionResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .mavsdk.rpc.mission.MissionResult mission_result = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.mission_result_);
    }

    // .mavsdk.rpc.mission.MissionPlan mission_plan = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.mission_plan_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData DownloadMissionResponse::_class_data_ = {
    DownloadMissionResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* DownloadMissionResponse::GetClassData() const {
  return &_class_data_;
}

void DownloadMissionResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<DownloadMissionResponse*>(&to_msg);
  auto& from = static_cast<const DownloadMissionResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.mission.DownloadMissionResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_mission_result()->::mavsdk::rpc::mission::MissionResult::MergeFrom(
          from._internal_mission_result());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_mission_plan()->::mavsdk::rpc::mission::MissionPlan::MergeFrom(
          from._internal_mission_plan());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DownloadMissionResponse::CopyFrom(const DownloadMissionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.mission.DownloadMissionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool DownloadMissionResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* DownloadMissionResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void DownloadMissionResponse::InternalSwap(DownloadMissionResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DownloadMissionResponse, _impl_.mission_plan_)
      + sizeof(DownloadMissionResponse::_impl_.mission_plan_)
      - PROTOBUF_FIELD_OFFSET(DownloadMissionResponse, _impl_.mission_result_)>(
          reinterpret_cast<char*>(&_impl_.mission_result_),
          reinterpret_cast<char*>(&other->_impl_.mission_result_));
}

::google::protobuf::Metadata DownloadMissionResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_mission_2fmission_2eproto_getter, &descriptor_table_mission_2fmission_2eproto_once,
      file_level_metadata_mission_2fmission_2eproto[7]);
}
// ===================================================================

class SubscribeDownloadMissionWithProgressRequest::_Internal {
 public:
};

SubscribeDownloadMissionWithProgressRequest::SubscribeDownloadMissionWithProgressRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.mission.SubscribeDownloadMissionWithProgressRequest)
}
SubscribeDownloadMissionWithProgressRequest::SubscribeDownloadMissionWithProgressRequest(
    ::google::protobuf::Arena* arena,
    const SubscribeDownloadMissionWithProgressRequest& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  SubscribeDownloadMissionWithProgressRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.mission.SubscribeDownloadMissionWithProgressRequest)
}









::google::protobuf::Metadata SubscribeDownloadMissionWithProgressRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_mission_2fmission_2eproto_getter, &descriptor_table_mission_2fmission_2eproto_once,
      file_level_metadata_mission_2fmission_2eproto[8]);
}
// ===================================================================

class DownloadMissionWithProgressResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<DownloadMissionWithProgressResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(DownloadMissionWithProgressResponse, _impl_._has_bits_);
  static const ::mavsdk::rpc::mission::MissionResult& mission_result(const DownloadMissionWithProgressResponse* msg);
  static void set_has_mission_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::mavsdk::rpc::mission::ProgressDataOrMission& progress_data(const DownloadMissionWithProgressResponse* msg);
  static void set_has_progress_data(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::mavsdk::rpc::mission::MissionResult& DownloadMissionWithProgressResponse::_Internal::mission_result(const DownloadMissionWithProgressResponse* msg) {
  return *msg->_impl_.mission_result_;
}
const ::mavsdk::rpc::mission::ProgressDataOrMission& DownloadMissionWithProgressResponse::_Internal::progress_data(const DownloadMissionWithProgressResponse* msg) {
  return *msg->_impl_.progress_data_;
}
DownloadMissionWithProgressResponse::DownloadMissionWithProgressResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.mission.DownloadMissionWithProgressResponse)
}
inline PROTOBUF_NDEBUG_INLINE DownloadMissionWithProgressResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

DownloadMissionWithProgressResponse::DownloadMissionWithProgressResponse(
    ::google::protobuf::Arena* arena,
    const DownloadMissionWithProgressResponse& from)
    : ::google::protobuf::Message(arena) {
  DownloadMissionWithProgressResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.mission_result_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::mission::MissionResult>(arena, *from._impl_.mission_result_)
                : nullptr;
  _impl_.progress_data_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::mavsdk::rpc::mission::ProgressDataOrMission>(arena, *from._impl_.progress_data_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.mission.DownloadMissionWithProgressResponse)
}
inline PROTOBUF_NDEBUG_INLINE DownloadMissionWithProgressResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void DownloadMissionWithProgressResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, mission_result_),
           0,
           offsetof(Impl_, progress_data_) -
               offsetof(Impl_, mission_result_) +
               sizeof(Impl_::progress_data_));
}
DownloadMissionWithProgressResponse::~DownloadMissionWithProgressResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.mission.DownloadMissionWithProgressResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void DownloadMissionWithProgressResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.mission_result_;
  delete _impl_.progress_data_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void DownloadMissionWithProgressResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.mission.DownloadMissionWithProgressResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.mission_result_ != nullptr);
      _impl_.mission_result_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.progress_data_ != nullptr);
      _impl_.progress_data_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* DownloadMissionWithProgressResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> DownloadMissionWithProgressResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(DownloadMissionWithProgressResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_DownloadMissionWithProgressResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.mission.ProgressDataOrMission progress_data = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(DownloadMissionWithProgressResponse, _impl_.progress_data_)}},
    // .mavsdk.rpc.mission.MissionResult mission_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(DownloadMissionWithProgressResponse, _impl_.mission_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.mission.MissionResult mission_result = 1;
    {PROTOBUF_FIELD_OFFSET(DownloadMissionWithProgressResponse, _impl_.mission_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .mavsdk.rpc.mission.ProgressDataOrMission progress_data = 2;
    {PROTOBUF_FIELD_OFFSET(DownloadMissionWithProgressResponse, _impl_.progress_data_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::mission::MissionResult>()},
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::mission::ProgressDataOrMission>()},
  }}, {{
  }},
};

::uint8_t* DownloadMissionWithProgressResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.mission.DownloadMissionWithProgressResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.mission.MissionResult mission_result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::mission_result(this),
        _Internal::mission_result(this).GetCachedSize(), target, stream);
  }

  // .mavsdk.rpc.mission.ProgressDataOrMission progress_data = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::progress_data(this),
        _Internal::progress_data(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.mission.DownloadMissionWithProgressResponse)
  return target;
}

::size_t DownloadMissionWithProgressResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.mission.DownloadMissionWithProgressResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .mavsdk.rpc.mission.MissionResult mission_result = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.mission_result_);
    }

    // .mavsdk.rpc.mission.ProgressDataOrMission progress_data = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.progress_data_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData DownloadMissionWithProgressResponse::_class_data_ = {
    DownloadMissionWithProgressResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* DownloadMissionWithProgressResponse::GetClassData() const {
  return &_class_data_;
}

void DownloadMissionWithProgressResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<DownloadMissionWithProgressResponse*>(&to_msg);
  auto& from = static_cast<const DownloadMissionWithProgressResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.mission.DownloadMissionWithProgressResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_mission_result()->::mavsdk::rpc::mission::MissionResult::MergeFrom(
          from._internal_mission_result());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_progress_data()->::mavsdk::rpc::mission::ProgressDataOrMission::MergeFrom(
          from._internal_progress_data());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DownloadMissionWithProgressResponse::CopyFrom(const DownloadMissionWithProgressResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.mission.DownloadMissionWithProgressResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool DownloadMissionWithProgressResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* DownloadMissionWithProgressResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void DownloadMissionWithProgressResponse::InternalSwap(DownloadMissionWithProgressResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DownloadMissionWithProgressResponse, _impl_.progress_data_)
      + sizeof(DownloadMissionWithProgressResponse::_impl_.progress_data_)
      - PROTOBUF_FIELD_OFFSET(DownloadMissionWithProgressResponse, _impl_.mission_result_)>(
          reinterpret_cast<char*>(&_impl_.mission_result_),
          reinterpret_cast<char*>(&other->_impl_.mission_result_));
}

::google::protobuf::Metadata DownloadMissionWithProgressResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_mission_2fmission_2eproto_getter, &descriptor_table_mission_2fmission_2eproto_once,
      file_level_metadata_mission_2fmission_2eproto[9]);
}
// ===================================================================

class CancelMissionDownloadRequest::_Internal {
 public:
};

CancelMissionDownloadRequest::CancelMissionDownloadRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.mission.CancelMissionDownloadRequest)
}
CancelMissionDownloadRequest::CancelMissionDownloadRequest(
    ::google::protobuf::Arena* arena,
    const CancelMissionDownloadRequest& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  CancelMissionDownloadRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.mission.CancelMissionDownloadRequest)
}









::google::protobuf::Metadata CancelMissionDownloadRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_mission_2fmission_2eproto_getter, &descriptor_table_mission_2fmission_2eproto_once,
      file_level_metadata_mission_2fmission_2eproto[10]);
}
// ===================================================================

class CancelMissionDownloadResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CancelMissionDownloadResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CancelMissionDownloadResponse, _impl_._has_bits_);
  static const ::mavsdk::rpc::mission::MissionResult& mission_result(const CancelMissionDownloadResponse* msg);
  static void set_has_mission_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::mission::MissionResult& CancelMissionDownloadResponse::_Internal::mission_result(const CancelMissionDownloadResponse* msg) {
  return *msg->_impl_.mission_result_;
}
CancelMissionDownloadResponse::CancelMissionDownloadResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.mission.CancelMissionDownloadResponse)
}
inline PROTOBUF_NDEBUG_INLINE CancelMissionDownloadResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

CancelMissionDownloadResponse::CancelMissionDownloadResponse(
    ::google::protobuf::Arena* arena,
    const CancelMissionDownloadResponse& from)
    : ::google::protobuf::Message(arena) {
  CancelMissionDownloadResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.mission_result_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::mission::MissionResult>(arena, *from._impl_.mission_result_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.mission.CancelMissionDownloadResponse)
}
inline PROTOBUF_NDEBUG_INLINE CancelMissionDownloadResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void CancelMissionDownloadResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.mission_result_ = {};
}
CancelMissionDownloadResponse::~CancelMissionDownloadResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.mission.CancelMissionDownloadResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CancelMissionDownloadResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.mission_result_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void CancelMissionDownloadResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.mission.CancelMissionDownloadResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.mission_result_ != nullptr);
    _impl_.mission_result_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CancelMissionDownloadResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> CancelMissionDownloadResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CancelMissionDownloadResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CancelMissionDownloadResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.mission.MissionResult mission_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CancelMissionDownloadResponse, _impl_.mission_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.mission.MissionResult mission_result = 1;
    {PROTOBUF_FIELD_OFFSET(CancelMissionDownloadResponse, _impl_.mission_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::mission::MissionResult>()},
  }}, {{
  }},
};

::uint8_t* CancelMissionDownloadResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.mission.CancelMissionDownloadResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.mission.MissionResult mission_result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::mission_result(this),
        _Internal::mission_result(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.mission.CancelMissionDownloadResponse)
  return target;
}

::size_t CancelMissionDownloadResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.mission.CancelMissionDownloadResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.mission.MissionResult mission_result = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.mission_result_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CancelMissionDownloadResponse::_class_data_ = {
    CancelMissionDownloadResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* CancelMissionDownloadResponse::GetClassData() const {
  return &_class_data_;
}

void CancelMissionDownloadResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CancelMissionDownloadResponse*>(&to_msg);
  auto& from = static_cast<const CancelMissionDownloadResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.mission.CancelMissionDownloadResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_mission_result()->::mavsdk::rpc::mission::MissionResult::MergeFrom(
        from._internal_mission_result());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CancelMissionDownloadResponse::CopyFrom(const CancelMissionDownloadResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.mission.CancelMissionDownloadResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CancelMissionDownloadResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* CancelMissionDownloadResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void CancelMissionDownloadResponse::InternalSwap(CancelMissionDownloadResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.mission_result_, other->_impl_.mission_result_);
}

::google::protobuf::Metadata CancelMissionDownloadResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_mission_2fmission_2eproto_getter, &descriptor_table_mission_2fmission_2eproto_once,
      file_level_metadata_mission_2fmission_2eproto[11]);
}
// ===================================================================

class StartMissionRequest::_Internal {
 public:
};

StartMissionRequest::StartMissionRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.mission.StartMissionRequest)
}
StartMissionRequest::StartMissionRequest(
    ::google::protobuf::Arena* arena,
    const StartMissionRequest& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  StartMissionRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.mission.StartMissionRequest)
}









::google::protobuf::Metadata StartMissionRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_mission_2fmission_2eproto_getter, &descriptor_table_mission_2fmission_2eproto_once,
      file_level_metadata_mission_2fmission_2eproto[12]);
}
// ===================================================================

class StartMissionResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<StartMissionResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(StartMissionResponse, _impl_._has_bits_);
  static const ::mavsdk::rpc::mission::MissionResult& mission_result(const StartMissionResponse* msg);
  static void set_has_mission_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::mission::MissionResult& StartMissionResponse::_Internal::mission_result(const StartMissionResponse* msg) {
  return *msg->_impl_.mission_result_;
}
StartMissionResponse::StartMissionResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.mission.StartMissionResponse)
}
inline PROTOBUF_NDEBUG_INLINE StartMissionResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

StartMissionResponse::StartMissionResponse(
    ::google::protobuf::Arena* arena,
    const StartMissionResponse& from)
    : ::google::protobuf::Message(arena) {
  StartMissionResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.mission_result_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::mission::MissionResult>(arena, *from._impl_.mission_result_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.mission.StartMissionResponse)
}
inline PROTOBUF_NDEBUG_INLINE StartMissionResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void StartMissionResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.mission_result_ = {};
}
StartMissionResponse::~StartMissionResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.mission.StartMissionResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void StartMissionResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.mission_result_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void StartMissionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.mission.StartMissionResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.mission_result_ != nullptr);
    _impl_.mission_result_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* StartMissionResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> StartMissionResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(StartMissionResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_StartMissionResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.mission.MissionResult mission_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(StartMissionResponse, _impl_.mission_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.mission.MissionResult mission_result = 1;
    {PROTOBUF_FIELD_OFFSET(StartMissionResponse, _impl_.mission_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::mission::MissionResult>()},
  }}, {{
  }},
};

::uint8_t* StartMissionResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.mission.StartMissionResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.mission.MissionResult mission_result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::mission_result(this),
        _Internal::mission_result(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.mission.StartMissionResponse)
  return target;
}

::size_t StartMissionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.mission.StartMissionResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.mission.MissionResult mission_result = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.mission_result_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData StartMissionResponse::_class_data_ = {
    StartMissionResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* StartMissionResponse::GetClassData() const {
  return &_class_data_;
}

void StartMissionResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<StartMissionResponse*>(&to_msg);
  auto& from = static_cast<const StartMissionResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.mission.StartMissionResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_mission_result()->::mavsdk::rpc::mission::MissionResult::MergeFrom(
        from._internal_mission_result());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void StartMissionResponse::CopyFrom(const StartMissionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.mission.StartMissionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool StartMissionResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* StartMissionResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void StartMissionResponse::InternalSwap(StartMissionResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.mission_result_, other->_impl_.mission_result_);
}

::google::protobuf::Metadata StartMissionResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_mission_2fmission_2eproto_getter, &descriptor_table_mission_2fmission_2eproto_once,
      file_level_metadata_mission_2fmission_2eproto[13]);
}
// ===================================================================

class PauseMissionRequest::_Internal {
 public:
};

PauseMissionRequest::PauseMissionRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.mission.PauseMissionRequest)
}
PauseMissionRequest::PauseMissionRequest(
    ::google::protobuf::Arena* arena,
    const PauseMissionRequest& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  PauseMissionRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.mission.PauseMissionRequest)
}









::google::protobuf::Metadata PauseMissionRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_mission_2fmission_2eproto_getter, &descriptor_table_mission_2fmission_2eproto_once,
      file_level_metadata_mission_2fmission_2eproto[14]);
}
// ===================================================================

class PauseMissionResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<PauseMissionResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(PauseMissionResponse, _impl_._has_bits_);
  static const ::mavsdk::rpc::mission::MissionResult& mission_result(const PauseMissionResponse* msg);
  static void set_has_mission_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::mission::MissionResult& PauseMissionResponse::_Internal::mission_result(const PauseMissionResponse* msg) {
  return *msg->_impl_.mission_result_;
}
PauseMissionResponse::PauseMissionResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.mission.PauseMissionResponse)
}
inline PROTOBUF_NDEBUG_INLINE PauseMissionResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

PauseMissionResponse::PauseMissionResponse(
    ::google::protobuf::Arena* arena,
    const PauseMissionResponse& from)
    : ::google::protobuf::Message(arena) {
  PauseMissionResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.mission_result_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::mission::MissionResult>(arena, *from._impl_.mission_result_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.mission.PauseMissionResponse)
}
inline PROTOBUF_NDEBUG_INLINE PauseMissionResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void PauseMissionResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.mission_result_ = {};
}
PauseMissionResponse::~PauseMissionResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.mission.PauseMissionResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PauseMissionResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.mission_result_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void PauseMissionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.mission.PauseMissionResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.mission_result_ != nullptr);
    _impl_.mission_result_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* PauseMissionResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> PauseMissionResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PauseMissionResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_PauseMissionResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.mission.MissionResult mission_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(PauseMissionResponse, _impl_.mission_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.mission.MissionResult mission_result = 1;
    {PROTOBUF_FIELD_OFFSET(PauseMissionResponse, _impl_.mission_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::mission::MissionResult>()},
  }}, {{
  }},
};

::uint8_t* PauseMissionResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.mission.PauseMissionResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.mission.MissionResult mission_result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::mission_result(this),
        _Internal::mission_result(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.mission.PauseMissionResponse)
  return target;
}

::size_t PauseMissionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.mission.PauseMissionResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.mission.MissionResult mission_result = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.mission_result_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData PauseMissionResponse::_class_data_ = {
    PauseMissionResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* PauseMissionResponse::GetClassData() const {
  return &_class_data_;
}

void PauseMissionResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<PauseMissionResponse*>(&to_msg);
  auto& from = static_cast<const PauseMissionResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.mission.PauseMissionResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_mission_result()->::mavsdk::rpc::mission::MissionResult::MergeFrom(
        from._internal_mission_result());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PauseMissionResponse::CopyFrom(const PauseMissionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.mission.PauseMissionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PauseMissionResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* PauseMissionResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void PauseMissionResponse::InternalSwap(PauseMissionResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.mission_result_, other->_impl_.mission_result_);
}

::google::protobuf::Metadata PauseMissionResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_mission_2fmission_2eproto_getter, &descriptor_table_mission_2fmission_2eproto_once,
      file_level_metadata_mission_2fmission_2eproto[15]);
}
// ===================================================================

class ClearMissionRequest::_Internal {
 public:
};

ClearMissionRequest::ClearMissionRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.mission.ClearMissionRequest)
}
ClearMissionRequest::ClearMissionRequest(
    ::google::protobuf::Arena* arena,
    const ClearMissionRequest& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  ClearMissionRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.mission.ClearMissionRequest)
}









::google::protobuf::Metadata ClearMissionRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_mission_2fmission_2eproto_getter, &descriptor_table_mission_2fmission_2eproto_once,
      file_level_metadata_mission_2fmission_2eproto[16]);
}
// ===================================================================

class ClearMissionResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<ClearMissionResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ClearMissionResponse, _impl_._has_bits_);
  static const ::mavsdk::rpc::mission::MissionResult& mission_result(const ClearMissionResponse* msg);
  static void set_has_mission_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::mission::MissionResult& ClearMissionResponse::_Internal::mission_result(const ClearMissionResponse* msg) {
  return *msg->_impl_.mission_result_;
}
ClearMissionResponse::ClearMissionResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.mission.ClearMissionResponse)
}
inline PROTOBUF_NDEBUG_INLINE ClearMissionResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

ClearMissionResponse::ClearMissionResponse(
    ::google::protobuf::Arena* arena,
    const ClearMissionResponse& from)
    : ::google::protobuf::Message(arena) {
  ClearMissionResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.mission_result_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::mission::MissionResult>(arena, *from._impl_.mission_result_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.mission.ClearMissionResponse)
}
inline PROTOBUF_NDEBUG_INLINE ClearMissionResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ClearMissionResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.mission_result_ = {};
}
ClearMissionResponse::~ClearMissionResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.mission.ClearMissionResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ClearMissionResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.mission_result_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ClearMissionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.mission.ClearMissionResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.mission_result_ != nullptr);
    _impl_.mission_result_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ClearMissionResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> ClearMissionResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ClearMissionResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ClearMissionResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.mission.MissionResult mission_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ClearMissionResponse, _impl_.mission_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.mission.MissionResult mission_result = 1;
    {PROTOBUF_FIELD_OFFSET(ClearMissionResponse, _impl_.mission_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::mission::MissionResult>()},
  }}, {{
  }},
};

::uint8_t* ClearMissionResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.mission.ClearMissionResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.mission.MissionResult mission_result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::mission_result(this),
        _Internal::mission_result(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.mission.ClearMissionResponse)
  return target;
}

::size_t ClearMissionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.mission.ClearMissionResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.mission.MissionResult mission_result = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.mission_result_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ClearMissionResponse::_class_data_ = {
    ClearMissionResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ClearMissionResponse::GetClassData() const {
  return &_class_data_;
}

void ClearMissionResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ClearMissionResponse*>(&to_msg);
  auto& from = static_cast<const ClearMissionResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.mission.ClearMissionResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_mission_result()->::mavsdk::rpc::mission::MissionResult::MergeFrom(
        from._internal_mission_result());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ClearMissionResponse::CopyFrom(const ClearMissionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.mission.ClearMissionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ClearMissionResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ClearMissionResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ClearMissionResponse::InternalSwap(ClearMissionResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.mission_result_, other->_impl_.mission_result_);
}

::google::protobuf::Metadata ClearMissionResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_mission_2fmission_2eproto_getter, &descriptor_table_mission_2fmission_2eproto_once,
      file_level_metadata_mission_2fmission_2eproto[17]);
}
// ===================================================================

class SetCurrentMissionItemRequest::_Internal {
 public:
};

SetCurrentMissionItemRequest::SetCurrentMissionItemRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.mission.SetCurrentMissionItemRequest)
}
SetCurrentMissionItemRequest::SetCurrentMissionItemRequest(
    ::google::protobuf::Arena* arena, const SetCurrentMissionItemRequest& from)
    : SetCurrentMissionItemRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE SetCurrentMissionItemRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetCurrentMissionItemRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.index_ = {};
}
SetCurrentMissionItemRequest::~SetCurrentMissionItemRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.mission.SetCurrentMissionItemRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SetCurrentMissionItemRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SetCurrentMissionItemRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.mission.SetCurrentMissionItemRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.index_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SetCurrentMissionItemRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> SetCurrentMissionItemRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_SetCurrentMissionItemRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // int32 index = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SetCurrentMissionItemRequest, _impl_.index_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(SetCurrentMissionItemRequest, _impl_.index_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 index = 1;
    {PROTOBUF_FIELD_OFFSET(SetCurrentMissionItemRequest, _impl_.index_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* SetCurrentMissionItemRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.mission.SetCurrentMissionItemRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 index = 1;
  if (this->_internal_index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_index(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.mission.SetCurrentMissionItemRequest)
  return target;
}

::size_t SetCurrentMissionItemRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.mission.SetCurrentMissionItemRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 index = 1;
  if (this->_internal_index() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_index());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SetCurrentMissionItemRequest::_class_data_ = {
    SetCurrentMissionItemRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SetCurrentMissionItemRequest::GetClassData() const {
  return &_class_data_;
}

void SetCurrentMissionItemRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SetCurrentMissionItemRequest*>(&to_msg);
  auto& from = static_cast<const SetCurrentMissionItemRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.mission.SetCurrentMissionItemRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_index() != 0) {
    _this->_internal_set_index(from._internal_index());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetCurrentMissionItemRequest::CopyFrom(const SetCurrentMissionItemRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.mission.SetCurrentMissionItemRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SetCurrentMissionItemRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SetCurrentMissionItemRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SetCurrentMissionItemRequest::InternalSwap(SetCurrentMissionItemRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.index_, other->_impl_.index_);
}

::google::protobuf::Metadata SetCurrentMissionItemRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_mission_2fmission_2eproto_getter, &descriptor_table_mission_2fmission_2eproto_once,
      file_level_metadata_mission_2fmission_2eproto[18]);
}
// ===================================================================

class SetCurrentMissionItemResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<SetCurrentMissionItemResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SetCurrentMissionItemResponse, _impl_._has_bits_);
  static const ::mavsdk::rpc::mission::MissionResult& mission_result(const SetCurrentMissionItemResponse* msg);
  static void set_has_mission_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::mission::MissionResult& SetCurrentMissionItemResponse::_Internal::mission_result(const SetCurrentMissionItemResponse* msg) {
  return *msg->_impl_.mission_result_;
}
SetCurrentMissionItemResponse::SetCurrentMissionItemResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.mission.SetCurrentMissionItemResponse)
}
inline PROTOBUF_NDEBUG_INLINE SetCurrentMissionItemResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SetCurrentMissionItemResponse::SetCurrentMissionItemResponse(
    ::google::protobuf::Arena* arena,
    const SetCurrentMissionItemResponse& from)
    : ::google::protobuf::Message(arena) {
  SetCurrentMissionItemResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.mission_result_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::mission::MissionResult>(arena, *from._impl_.mission_result_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.mission.SetCurrentMissionItemResponse)
}
inline PROTOBUF_NDEBUG_INLINE SetCurrentMissionItemResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetCurrentMissionItemResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.mission_result_ = {};
}
SetCurrentMissionItemResponse::~SetCurrentMissionItemResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.mission.SetCurrentMissionItemResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SetCurrentMissionItemResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.mission_result_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SetCurrentMissionItemResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.mission.SetCurrentMissionItemResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.mission_result_ != nullptr);
    _impl_.mission_result_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SetCurrentMissionItemResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> SetCurrentMissionItemResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SetCurrentMissionItemResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SetCurrentMissionItemResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.mission.MissionResult mission_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SetCurrentMissionItemResponse, _impl_.mission_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.mission.MissionResult mission_result = 1;
    {PROTOBUF_FIELD_OFFSET(SetCurrentMissionItemResponse, _impl_.mission_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::mission::MissionResult>()},
  }}, {{
  }},
};

::uint8_t* SetCurrentMissionItemResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.mission.SetCurrentMissionItemResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.mission.MissionResult mission_result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::mission_result(this),
        _Internal::mission_result(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.mission.SetCurrentMissionItemResponse)
  return target;
}

::size_t SetCurrentMissionItemResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.mission.SetCurrentMissionItemResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.mission.MissionResult mission_result = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.mission_result_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SetCurrentMissionItemResponse::_class_data_ = {
    SetCurrentMissionItemResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SetCurrentMissionItemResponse::GetClassData() const {
  return &_class_data_;
}

void SetCurrentMissionItemResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SetCurrentMissionItemResponse*>(&to_msg);
  auto& from = static_cast<const SetCurrentMissionItemResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.mission.SetCurrentMissionItemResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_mission_result()->::mavsdk::rpc::mission::MissionResult::MergeFrom(
        from._internal_mission_result());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetCurrentMissionItemResponse::CopyFrom(const SetCurrentMissionItemResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.mission.SetCurrentMissionItemResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SetCurrentMissionItemResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SetCurrentMissionItemResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SetCurrentMissionItemResponse::InternalSwap(SetCurrentMissionItemResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.mission_result_, other->_impl_.mission_result_);
}

::google::protobuf::Metadata SetCurrentMissionItemResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_mission_2fmission_2eproto_getter, &descriptor_table_mission_2fmission_2eproto_once,
      file_level_metadata_mission_2fmission_2eproto[19]);
}
// ===================================================================

class IsMissionFinishedRequest::_Internal {
 public:
};

IsMissionFinishedRequest::IsMissionFinishedRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.mission.IsMissionFinishedRequest)
}
IsMissionFinishedRequest::IsMissionFinishedRequest(
    ::google::protobuf::Arena* arena,
    const IsMissionFinishedRequest& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  IsMissionFinishedRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.mission.IsMissionFinishedRequest)
}









::google::protobuf::Metadata IsMissionFinishedRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_mission_2fmission_2eproto_getter, &descriptor_table_mission_2fmission_2eproto_once,
      file_level_metadata_mission_2fmission_2eproto[20]);
}
// ===================================================================

class IsMissionFinishedResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<IsMissionFinishedResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(IsMissionFinishedResponse, _impl_._has_bits_);
  static const ::mavsdk::rpc::mission::MissionResult& mission_result(const IsMissionFinishedResponse* msg);
  static void set_has_mission_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::mission::MissionResult& IsMissionFinishedResponse::_Internal::mission_result(const IsMissionFinishedResponse* msg) {
  return *msg->_impl_.mission_result_;
}
IsMissionFinishedResponse::IsMissionFinishedResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.mission.IsMissionFinishedResponse)
}
inline PROTOBUF_NDEBUG_INLINE IsMissionFinishedResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

IsMissionFinishedResponse::IsMissionFinishedResponse(
    ::google::protobuf::Arena* arena,
    const IsMissionFinishedResponse& from)
    : ::google::protobuf::Message(arena) {
  IsMissionFinishedResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.mission_result_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::mission::MissionResult>(arena, *from._impl_.mission_result_)
                : nullptr;
  _impl_.is_finished_ = from._impl_.is_finished_;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.mission.IsMissionFinishedResponse)
}
inline PROTOBUF_NDEBUG_INLINE IsMissionFinishedResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void IsMissionFinishedResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, mission_result_),
           0,
           offsetof(Impl_, is_finished_) -
               offsetof(Impl_, mission_result_) +
               sizeof(Impl_::is_finished_));
}
IsMissionFinishedResponse::~IsMissionFinishedResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.mission.IsMissionFinishedResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void IsMissionFinishedResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.mission_result_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void IsMissionFinishedResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.mission.IsMissionFinishedResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.mission_result_ != nullptr);
    _impl_.mission_result_->Clear();
  }
  _impl_.is_finished_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* IsMissionFinishedResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> IsMissionFinishedResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(IsMissionFinishedResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_IsMissionFinishedResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // bool is_finished = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(IsMissionFinishedResponse, _impl_.is_finished_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(IsMissionFinishedResponse, _impl_.is_finished_)}},
    // .mavsdk.rpc.mission.MissionResult mission_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(IsMissionFinishedResponse, _impl_.mission_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.mission.MissionResult mission_result = 1;
    {PROTOBUF_FIELD_OFFSET(IsMissionFinishedResponse, _impl_.mission_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // bool is_finished = 2;
    {PROTOBUF_FIELD_OFFSET(IsMissionFinishedResponse, _impl_.is_finished_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::mission::MissionResult>()},
  }}, {{
  }},
};

::uint8_t* IsMissionFinishedResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.mission.IsMissionFinishedResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.mission.MissionResult mission_result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::mission_result(this),
        _Internal::mission_result(this).GetCachedSize(), target, stream);
  }

  // bool is_finished = 2;
  if (this->_internal_is_finished() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        2, this->_internal_is_finished(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.mission.IsMissionFinishedResponse)
  return target;
}

::size_t IsMissionFinishedResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.mission.IsMissionFinishedResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.mission.MissionResult mission_result = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.mission_result_);
  }

  // bool is_finished = 2;
  if (this->_internal_is_finished() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData IsMissionFinishedResponse::_class_data_ = {
    IsMissionFinishedResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* IsMissionFinishedResponse::GetClassData() const {
  return &_class_data_;
}

void IsMissionFinishedResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<IsMissionFinishedResponse*>(&to_msg);
  auto& from = static_cast<const IsMissionFinishedResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.mission.IsMissionFinishedResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_mission_result()->::mavsdk::rpc::mission::MissionResult::MergeFrom(
        from._internal_mission_result());
  }
  if (from._internal_is_finished() != 0) {
    _this->_internal_set_is_finished(from._internal_is_finished());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void IsMissionFinishedResponse::CopyFrom(const IsMissionFinishedResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.mission.IsMissionFinishedResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool IsMissionFinishedResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* IsMissionFinishedResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void IsMissionFinishedResponse::InternalSwap(IsMissionFinishedResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(IsMissionFinishedResponse, _impl_.is_finished_)
      + sizeof(IsMissionFinishedResponse::_impl_.is_finished_)
      - PROTOBUF_FIELD_OFFSET(IsMissionFinishedResponse, _impl_.mission_result_)>(
          reinterpret_cast<char*>(&_impl_.mission_result_),
          reinterpret_cast<char*>(&other->_impl_.mission_result_));
}

::google::protobuf::Metadata IsMissionFinishedResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_mission_2fmission_2eproto_getter, &descriptor_table_mission_2fmission_2eproto_once,
      file_level_metadata_mission_2fmission_2eproto[21]);
}
// ===================================================================

class SubscribeMissionProgressRequest::_Internal {
 public:
};

SubscribeMissionProgressRequest::SubscribeMissionProgressRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.mission.SubscribeMissionProgressRequest)
}
SubscribeMissionProgressRequest::SubscribeMissionProgressRequest(
    ::google::protobuf::Arena* arena,
    const SubscribeMissionProgressRequest& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  SubscribeMissionProgressRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.mission.SubscribeMissionProgressRequest)
}









::google::protobuf::Metadata SubscribeMissionProgressRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_mission_2fmission_2eproto_getter, &descriptor_table_mission_2fmission_2eproto_once,
      file_level_metadata_mission_2fmission_2eproto[22]);
}
// ===================================================================

class MissionProgressResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<MissionProgressResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(MissionProgressResponse, _impl_._has_bits_);
  static const ::mavsdk::rpc::mission::MissionProgress& mission_progress(const MissionProgressResponse* msg);
  static void set_has_mission_progress(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::mission::MissionProgress& MissionProgressResponse::_Internal::mission_progress(const MissionProgressResponse* msg) {
  return *msg->_impl_.mission_progress_;
}
MissionProgressResponse::MissionProgressResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.mission.MissionProgressResponse)
}
inline PROTOBUF_NDEBUG_INLINE MissionProgressResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

MissionProgressResponse::MissionProgressResponse(
    ::google::protobuf::Arena* arena,
    const MissionProgressResponse& from)
    : ::google::protobuf::Message(arena) {
  MissionProgressResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.mission_progress_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::mission::MissionProgress>(arena, *from._impl_.mission_progress_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.mission.MissionProgressResponse)
}
inline PROTOBUF_NDEBUG_INLINE MissionProgressResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void MissionProgressResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.mission_progress_ = {};
}
MissionProgressResponse::~MissionProgressResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.mission.MissionProgressResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void MissionProgressResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.mission_progress_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void MissionProgressResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.mission.MissionProgressResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.mission_progress_ != nullptr);
    _impl_.mission_progress_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* MissionProgressResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> MissionProgressResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(MissionProgressResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_MissionProgressResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.mission.MissionProgress mission_progress = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(MissionProgressResponse, _impl_.mission_progress_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.mission.MissionProgress mission_progress = 1;
    {PROTOBUF_FIELD_OFFSET(MissionProgressResponse, _impl_.mission_progress_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::mission::MissionProgress>()},
  }}, {{
  }},
};

::uint8_t* MissionProgressResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.mission.MissionProgressResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.mission.MissionProgress mission_progress = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::mission_progress(this),
        _Internal::mission_progress(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.mission.MissionProgressResponse)
  return target;
}

::size_t MissionProgressResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.mission.MissionProgressResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.mission.MissionProgress mission_progress = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.mission_progress_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData MissionProgressResponse::_class_data_ = {
    MissionProgressResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* MissionProgressResponse::GetClassData() const {
  return &_class_data_;
}

void MissionProgressResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<MissionProgressResponse*>(&to_msg);
  auto& from = static_cast<const MissionProgressResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.mission.MissionProgressResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_mission_progress()->::mavsdk::rpc::mission::MissionProgress::MergeFrom(
        from._internal_mission_progress());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MissionProgressResponse::CopyFrom(const MissionProgressResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.mission.MissionProgressResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool MissionProgressResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* MissionProgressResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void MissionProgressResponse::InternalSwap(MissionProgressResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.mission_progress_, other->_impl_.mission_progress_);
}

::google::protobuf::Metadata MissionProgressResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_mission_2fmission_2eproto_getter, &descriptor_table_mission_2fmission_2eproto_once,
      file_level_metadata_mission_2fmission_2eproto[23]);
}
// ===================================================================

class GetReturnToLaunchAfterMissionRequest::_Internal {
 public:
};

GetReturnToLaunchAfterMissionRequest::GetReturnToLaunchAfterMissionRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.mission.GetReturnToLaunchAfterMissionRequest)
}
GetReturnToLaunchAfterMissionRequest::GetReturnToLaunchAfterMissionRequest(
    ::google::protobuf::Arena* arena,
    const GetReturnToLaunchAfterMissionRequest& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  GetReturnToLaunchAfterMissionRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.mission.GetReturnToLaunchAfterMissionRequest)
}









::google::protobuf::Metadata GetReturnToLaunchAfterMissionRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_mission_2fmission_2eproto_getter, &descriptor_table_mission_2fmission_2eproto_once,
      file_level_metadata_mission_2fmission_2eproto[24]);
}
// ===================================================================

class GetReturnToLaunchAfterMissionResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<GetReturnToLaunchAfterMissionResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(GetReturnToLaunchAfterMissionResponse, _impl_._has_bits_);
  static const ::mavsdk::rpc::mission::MissionResult& mission_result(const GetReturnToLaunchAfterMissionResponse* msg);
  static void set_has_mission_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::mission::MissionResult& GetReturnToLaunchAfterMissionResponse::_Internal::mission_result(const GetReturnToLaunchAfterMissionResponse* msg) {
  return *msg->_impl_.mission_result_;
}
GetReturnToLaunchAfterMissionResponse::GetReturnToLaunchAfterMissionResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.mission.GetReturnToLaunchAfterMissionResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetReturnToLaunchAfterMissionResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

GetReturnToLaunchAfterMissionResponse::GetReturnToLaunchAfterMissionResponse(
    ::google::protobuf::Arena* arena,
    const GetReturnToLaunchAfterMissionResponse& from)
    : ::google::protobuf::Message(arena) {
  GetReturnToLaunchAfterMissionResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.mission_result_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::mission::MissionResult>(arena, *from._impl_.mission_result_)
                : nullptr;
  _impl_.enable_ = from._impl_.enable_;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.mission.GetReturnToLaunchAfterMissionResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetReturnToLaunchAfterMissionResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void GetReturnToLaunchAfterMissionResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, mission_result_),
           0,
           offsetof(Impl_, enable_) -
               offsetof(Impl_, mission_result_) +
               sizeof(Impl_::enable_));
}
GetReturnToLaunchAfterMissionResponse::~GetReturnToLaunchAfterMissionResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.mission.GetReturnToLaunchAfterMissionResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GetReturnToLaunchAfterMissionResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.mission_result_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void GetReturnToLaunchAfterMissionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.mission.GetReturnToLaunchAfterMissionResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.mission_result_ != nullptr);
    _impl_.mission_result_->Clear();
  }
  _impl_.enable_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GetReturnToLaunchAfterMissionResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> GetReturnToLaunchAfterMissionResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetReturnToLaunchAfterMissionResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_GetReturnToLaunchAfterMissionResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // bool enable = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(GetReturnToLaunchAfterMissionResponse, _impl_.enable_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(GetReturnToLaunchAfterMissionResponse, _impl_.enable_)}},
    // .mavsdk.rpc.mission.MissionResult mission_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GetReturnToLaunchAfterMissionResponse, _impl_.mission_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.mission.MissionResult mission_result = 1;
    {PROTOBUF_FIELD_OFFSET(GetReturnToLaunchAfterMissionResponse, _impl_.mission_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // bool enable = 2;
    {PROTOBUF_FIELD_OFFSET(GetReturnToLaunchAfterMissionResponse, _impl_.enable_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::mission::MissionResult>()},
  }}, {{
  }},
};

::uint8_t* GetReturnToLaunchAfterMissionResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.mission.GetReturnToLaunchAfterMissionResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.mission.MissionResult mission_result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::mission_result(this),
        _Internal::mission_result(this).GetCachedSize(), target, stream);
  }

  // bool enable = 2;
  if (this->_internal_enable() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        2, this->_internal_enable(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.mission.GetReturnToLaunchAfterMissionResponse)
  return target;
}

::size_t GetReturnToLaunchAfterMissionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.mission.GetReturnToLaunchAfterMissionResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.mission.MissionResult mission_result = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.mission_result_);
  }

  // bool enable = 2;
  if (this->_internal_enable() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData GetReturnToLaunchAfterMissionResponse::_class_data_ = {
    GetReturnToLaunchAfterMissionResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* GetReturnToLaunchAfterMissionResponse::GetClassData() const {
  return &_class_data_;
}

void GetReturnToLaunchAfterMissionResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<GetReturnToLaunchAfterMissionResponse*>(&to_msg);
  auto& from = static_cast<const GetReturnToLaunchAfterMissionResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.mission.GetReturnToLaunchAfterMissionResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_mission_result()->::mavsdk::rpc::mission::MissionResult::MergeFrom(
        from._internal_mission_result());
  }
  if (from._internal_enable() != 0) {
    _this->_internal_set_enable(from._internal_enable());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetReturnToLaunchAfterMissionResponse::CopyFrom(const GetReturnToLaunchAfterMissionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.mission.GetReturnToLaunchAfterMissionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GetReturnToLaunchAfterMissionResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* GetReturnToLaunchAfterMissionResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void GetReturnToLaunchAfterMissionResponse::InternalSwap(GetReturnToLaunchAfterMissionResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetReturnToLaunchAfterMissionResponse, _impl_.enable_)
      + sizeof(GetReturnToLaunchAfterMissionResponse::_impl_.enable_)
      - PROTOBUF_FIELD_OFFSET(GetReturnToLaunchAfterMissionResponse, _impl_.mission_result_)>(
          reinterpret_cast<char*>(&_impl_.mission_result_),
          reinterpret_cast<char*>(&other->_impl_.mission_result_));
}

::google::protobuf::Metadata GetReturnToLaunchAfterMissionResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_mission_2fmission_2eproto_getter, &descriptor_table_mission_2fmission_2eproto_once,
      file_level_metadata_mission_2fmission_2eproto[25]);
}
// ===================================================================

class SetReturnToLaunchAfterMissionRequest::_Internal {
 public:
};

SetReturnToLaunchAfterMissionRequest::SetReturnToLaunchAfterMissionRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.mission.SetReturnToLaunchAfterMissionRequest)
}
SetReturnToLaunchAfterMissionRequest::SetReturnToLaunchAfterMissionRequest(
    ::google::protobuf::Arena* arena, const SetReturnToLaunchAfterMissionRequest& from)
    : SetReturnToLaunchAfterMissionRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE SetReturnToLaunchAfterMissionRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetReturnToLaunchAfterMissionRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.enable_ = {};
}
SetReturnToLaunchAfterMissionRequest::~SetReturnToLaunchAfterMissionRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.mission.SetReturnToLaunchAfterMissionRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SetReturnToLaunchAfterMissionRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SetReturnToLaunchAfterMissionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.mission.SetReturnToLaunchAfterMissionRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.enable_ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SetReturnToLaunchAfterMissionRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> SetReturnToLaunchAfterMissionRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_SetReturnToLaunchAfterMissionRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // bool enable = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(SetReturnToLaunchAfterMissionRequest, _impl_.enable_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(SetReturnToLaunchAfterMissionRequest, _impl_.enable_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool enable = 1;
    {PROTOBUF_FIELD_OFFSET(SetReturnToLaunchAfterMissionRequest, _impl_.enable_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* SetReturnToLaunchAfterMissionRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.mission.SetReturnToLaunchAfterMissionRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bool enable = 1;
  if (this->_internal_enable() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        1, this->_internal_enable(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.mission.SetReturnToLaunchAfterMissionRequest)
  return target;
}

::size_t SetReturnToLaunchAfterMissionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.mission.SetReturnToLaunchAfterMissionRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool enable = 1;
  if (this->_internal_enable() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SetReturnToLaunchAfterMissionRequest::_class_data_ = {
    SetReturnToLaunchAfterMissionRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SetReturnToLaunchAfterMissionRequest::GetClassData() const {
  return &_class_data_;
}

void SetReturnToLaunchAfterMissionRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SetReturnToLaunchAfterMissionRequest*>(&to_msg);
  auto& from = static_cast<const SetReturnToLaunchAfterMissionRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.mission.SetReturnToLaunchAfterMissionRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_enable() != 0) {
    _this->_internal_set_enable(from._internal_enable());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetReturnToLaunchAfterMissionRequest::CopyFrom(const SetReturnToLaunchAfterMissionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.mission.SetReturnToLaunchAfterMissionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SetReturnToLaunchAfterMissionRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SetReturnToLaunchAfterMissionRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SetReturnToLaunchAfterMissionRequest::InternalSwap(SetReturnToLaunchAfterMissionRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.enable_, other->_impl_.enable_);
}

::google::protobuf::Metadata SetReturnToLaunchAfterMissionRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_mission_2fmission_2eproto_getter, &descriptor_table_mission_2fmission_2eproto_once,
      file_level_metadata_mission_2fmission_2eproto[26]);
}
// ===================================================================

class SetReturnToLaunchAfterMissionResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<SetReturnToLaunchAfterMissionResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SetReturnToLaunchAfterMissionResponse, _impl_._has_bits_);
  static const ::mavsdk::rpc::mission::MissionResult& mission_result(const SetReturnToLaunchAfterMissionResponse* msg);
  static void set_has_mission_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::mission::MissionResult& SetReturnToLaunchAfterMissionResponse::_Internal::mission_result(const SetReturnToLaunchAfterMissionResponse* msg) {
  return *msg->_impl_.mission_result_;
}
SetReturnToLaunchAfterMissionResponse::SetReturnToLaunchAfterMissionResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.mission.SetReturnToLaunchAfterMissionResponse)
}
inline PROTOBUF_NDEBUG_INLINE SetReturnToLaunchAfterMissionResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SetReturnToLaunchAfterMissionResponse::SetReturnToLaunchAfterMissionResponse(
    ::google::protobuf::Arena* arena,
    const SetReturnToLaunchAfterMissionResponse& from)
    : ::google::protobuf::Message(arena) {
  SetReturnToLaunchAfterMissionResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.mission_result_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::mission::MissionResult>(arena, *from._impl_.mission_result_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.mission.SetReturnToLaunchAfterMissionResponse)
}
inline PROTOBUF_NDEBUG_INLINE SetReturnToLaunchAfterMissionResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetReturnToLaunchAfterMissionResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.mission_result_ = {};
}
SetReturnToLaunchAfterMissionResponse::~SetReturnToLaunchAfterMissionResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.mission.SetReturnToLaunchAfterMissionResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SetReturnToLaunchAfterMissionResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.mission_result_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SetReturnToLaunchAfterMissionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.mission.SetReturnToLaunchAfterMissionResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.mission_result_ != nullptr);
    _impl_.mission_result_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SetReturnToLaunchAfterMissionResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> SetReturnToLaunchAfterMissionResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SetReturnToLaunchAfterMissionResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SetReturnToLaunchAfterMissionResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.mission.MissionResult mission_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SetReturnToLaunchAfterMissionResponse, _impl_.mission_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.mission.MissionResult mission_result = 1;
    {PROTOBUF_FIELD_OFFSET(SetReturnToLaunchAfterMissionResponse, _impl_.mission_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::mission::MissionResult>()},
  }}, {{
  }},
};

::uint8_t* SetReturnToLaunchAfterMissionResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.mission.SetReturnToLaunchAfterMissionResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.mission.MissionResult mission_result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::mission_result(this),
        _Internal::mission_result(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.mission.SetReturnToLaunchAfterMissionResponse)
  return target;
}

::size_t SetReturnToLaunchAfterMissionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.mission.SetReturnToLaunchAfterMissionResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.mission.MissionResult mission_result = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.mission_result_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SetReturnToLaunchAfterMissionResponse::_class_data_ = {
    SetReturnToLaunchAfterMissionResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SetReturnToLaunchAfterMissionResponse::GetClassData() const {
  return &_class_data_;
}

void SetReturnToLaunchAfterMissionResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SetReturnToLaunchAfterMissionResponse*>(&to_msg);
  auto& from = static_cast<const SetReturnToLaunchAfterMissionResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.mission.SetReturnToLaunchAfterMissionResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_mission_result()->::mavsdk::rpc::mission::MissionResult::MergeFrom(
        from._internal_mission_result());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetReturnToLaunchAfterMissionResponse::CopyFrom(const SetReturnToLaunchAfterMissionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.mission.SetReturnToLaunchAfterMissionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SetReturnToLaunchAfterMissionResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SetReturnToLaunchAfterMissionResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SetReturnToLaunchAfterMissionResponse::InternalSwap(SetReturnToLaunchAfterMissionResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.mission_result_, other->_impl_.mission_result_);
}

::google::protobuf::Metadata SetReturnToLaunchAfterMissionResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_mission_2fmission_2eproto_getter, &descriptor_table_mission_2fmission_2eproto_once,
      file_level_metadata_mission_2fmission_2eproto[27]);
}
// ===================================================================

class MissionItem::_Internal {
 public:
};

MissionItem::MissionItem(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.mission.MissionItem)
}
MissionItem::MissionItem(
    ::google::protobuf::Arena* arena, const MissionItem& from)
    : MissionItem(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE MissionItem::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void MissionItem::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, latitude_deg_),
           0,
           offsetof(Impl_, vehicle_action_) -
               offsetof(Impl_, latitude_deg_) +
               sizeof(Impl_::vehicle_action_));
}
MissionItem::~MissionItem() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.mission.MissionItem)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void MissionItem::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void MissionItem::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.mission.MissionItem)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.latitude_deg_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.vehicle_action_) -
      reinterpret_cast<char*>(&_impl_.latitude_deg_)) + sizeof(_impl_.vehicle_action_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* MissionItem::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 14, 0, 0, 2> MissionItem::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    14, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294950912,  // skipmap
    offsetof(decltype(_table_), field_entries),
    14,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_MissionItem_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // double latitude_deg = 1 [(.mavsdk.options.default_value) = "NaN", (.mavsdk.options.epsilon) = 1e-07];
    {::_pbi::TcParser::FastF64S1,
     {9, 63, 0, PROTOBUF_FIELD_OFFSET(MissionItem, _impl_.latitude_deg_)}},
    // double longitude_deg = 2 [(.mavsdk.options.default_value) = "NaN", (.mavsdk.options.epsilon) = 1e-07];
    {::_pbi::TcParser::FastF64S1,
     {17, 63, 0, PROTOBUF_FIELD_OFFSET(MissionItem, _impl_.longitude_deg_)}},
    // float relative_altitude_m = 3 [(.mavsdk.options.default_value) = "NaN"];
    {::_pbi::TcParser::FastF32S1,
     {29, 63, 0, PROTOBUF_FIELD_OFFSET(MissionItem, _impl_.relative_altitude_m_)}},
    // float speed_m_s = 4 [(.mavsdk.options.default_value) = "NaN"];
    {::_pbi::TcParser::FastF32S1,
     {37, 63, 0, PROTOBUF_FIELD_OFFSET(MissionItem, _impl_.speed_m_s_)}},
    // bool is_fly_through = 5 [(.mavsdk.options.default_value) = "false"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(MissionItem, _impl_.is_fly_through_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(MissionItem, _impl_.is_fly_through_)}},
    // float gimbal_pitch_deg = 6 [(.mavsdk.options.default_value) = "NaN", (.mavsdk.options.epsilon) = 0.0001];
    {::_pbi::TcParser::FastF32S1,
     {53, 63, 0, PROTOBUF_FIELD_OFFSET(MissionItem, _impl_.gimbal_pitch_deg_)}},
    // float gimbal_yaw_deg = 7 [(.mavsdk.options.default_value) = "NaN", (.mavsdk.options.epsilon) = 0.0001];
    {::_pbi::TcParser::FastF32S1,
     {61, 63, 0, PROTOBUF_FIELD_OFFSET(MissionItem, _impl_.gimbal_yaw_deg_)}},
    // .mavsdk.rpc.mission.MissionItem.CameraAction camera_action = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MissionItem, _impl_.camera_action_), 63>(),
     {64, 63, 0, PROTOBUF_FIELD_OFFSET(MissionItem, _impl_.camera_action_)}},
    // float loiter_time_s = 9 [(.mavsdk.options.default_value) = "NaN"];
    {::_pbi::TcParser::FastF32S1,
     {77, 63, 0, PROTOBUF_FIELD_OFFSET(MissionItem, _impl_.loiter_time_s_)}},
    // double camera_photo_interval_s = 10 [(.mavsdk.options.default_value) = "1.0"];
    {::_pbi::TcParser::FastF64S1,
     {81, 63, 0, PROTOBUF_FIELD_OFFSET(MissionItem, _impl_.camera_photo_interval_s_)}},
    // float acceptance_radius_m = 11 [(.mavsdk.options.default_value) = "NaN"];
    {::_pbi::TcParser::FastF32S1,
     {93, 63, 0, PROTOBUF_FIELD_OFFSET(MissionItem, _impl_.acceptance_radius_m_)}},
    // float yaw_deg = 12 [(.mavsdk.options.default_value) = "NaN"];
    {::_pbi::TcParser::FastF32S1,
     {101, 63, 0, PROTOBUF_FIELD_OFFSET(MissionItem, _impl_.yaw_deg_)}},
    // float camera_photo_distance_m = 13 [(.mavsdk.options.default_value) = "NAN"];
    {::_pbi::TcParser::FastF32S1,
     {109, 63, 0, PROTOBUF_FIELD_OFFSET(MissionItem, _impl_.camera_photo_distance_m_)}},
    // .mavsdk.rpc.mission.MissionItem.VehicleAction vehicle_action = 14;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MissionItem, _impl_.vehicle_action_), 63>(),
     {112, 63, 0, PROTOBUF_FIELD_OFFSET(MissionItem, _impl_.vehicle_action_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // double latitude_deg = 1 [(.mavsdk.options.default_value) = "NaN", (.mavsdk.options.epsilon) = 1e-07];
    {PROTOBUF_FIELD_OFFSET(MissionItem, _impl_.latitude_deg_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double longitude_deg = 2 [(.mavsdk.options.default_value) = "NaN", (.mavsdk.options.epsilon) = 1e-07];
    {PROTOBUF_FIELD_OFFSET(MissionItem, _impl_.longitude_deg_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // float relative_altitude_m = 3 [(.mavsdk.options.default_value) = "NaN"];
    {PROTOBUF_FIELD_OFFSET(MissionItem, _impl_.relative_altitude_m_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float speed_m_s = 4 [(.mavsdk.options.default_value) = "NaN"];
    {PROTOBUF_FIELD_OFFSET(MissionItem, _impl_.speed_m_s_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // bool is_fly_through = 5 [(.mavsdk.options.default_value) = "false"];
    {PROTOBUF_FIELD_OFFSET(MissionItem, _impl_.is_fly_through_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // float gimbal_pitch_deg = 6 [(.mavsdk.options.default_value) = "NaN", (.mavsdk.options.epsilon) = 0.0001];
    {PROTOBUF_FIELD_OFFSET(MissionItem, _impl_.gimbal_pitch_deg_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float gimbal_yaw_deg = 7 [(.mavsdk.options.default_value) = "NaN", (.mavsdk.options.epsilon) = 0.0001];
    {PROTOBUF_FIELD_OFFSET(MissionItem, _impl_.gimbal_yaw_deg_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // .mavsdk.rpc.mission.MissionItem.CameraAction camera_action = 8;
    {PROTOBUF_FIELD_OFFSET(MissionItem, _impl_.camera_action_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // float loiter_time_s = 9 [(.mavsdk.options.default_value) = "NaN"];
    {PROTOBUF_FIELD_OFFSET(MissionItem, _impl_.loiter_time_s_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // double camera_photo_interval_s = 10 [(.mavsdk.options.default_value) = "1.0"];
    {PROTOBUF_FIELD_OFFSET(MissionItem, _impl_.camera_photo_interval_s_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // float acceptance_radius_m = 11 [(.mavsdk.options.default_value) = "NaN"];
    {PROTOBUF_FIELD_OFFSET(MissionItem, _impl_.acceptance_radius_m_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float yaw_deg = 12 [(.mavsdk.options.default_value) = "NaN"];
    {PROTOBUF_FIELD_OFFSET(MissionItem, _impl_.yaw_deg_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float camera_photo_distance_m = 13 [(.mavsdk.options.default_value) = "NAN"];
    {PROTOBUF_FIELD_OFFSET(MissionItem, _impl_.camera_photo_distance_m_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // .mavsdk.rpc.mission.MissionItem.VehicleAction vehicle_action = 14;
    {PROTOBUF_FIELD_OFFSET(MissionItem, _impl_.vehicle_action_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* MissionItem::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.mission.MissionItem)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // double latitude_deg = 1 [(.mavsdk.options.default_value) = "NaN", (.mavsdk.options.epsilon) = 1e-07];
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_latitude_deg = this->_internal_latitude_deg();
  ::uint64_t raw_latitude_deg;
  memcpy(&raw_latitude_deg, &tmp_latitude_deg, sizeof(tmp_latitude_deg));
  if (raw_latitude_deg != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        1, this->_internal_latitude_deg(), target);
  }

  // double longitude_deg = 2 [(.mavsdk.options.default_value) = "NaN", (.mavsdk.options.epsilon) = 1e-07];
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_longitude_deg = this->_internal_longitude_deg();
  ::uint64_t raw_longitude_deg;
  memcpy(&raw_longitude_deg, &tmp_longitude_deg, sizeof(tmp_longitude_deg));
  if (raw_longitude_deg != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        2, this->_internal_longitude_deg(), target);
  }

  // float relative_altitude_m = 3 [(.mavsdk.options.default_value) = "NaN"];
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_relative_altitude_m = this->_internal_relative_altitude_m();
  ::uint32_t raw_relative_altitude_m;
  memcpy(&raw_relative_altitude_m, &tmp_relative_altitude_m, sizeof(tmp_relative_altitude_m));
  if (raw_relative_altitude_m != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        3, this->_internal_relative_altitude_m(), target);
  }

  // float speed_m_s = 4 [(.mavsdk.options.default_value) = "NaN"];
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_speed_m_s = this->_internal_speed_m_s();
  ::uint32_t raw_speed_m_s;
  memcpy(&raw_speed_m_s, &tmp_speed_m_s, sizeof(tmp_speed_m_s));
  if (raw_speed_m_s != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        4, this->_internal_speed_m_s(), target);
  }

  // bool is_fly_through = 5 [(.mavsdk.options.default_value) = "false"];
  if (this->_internal_is_fly_through() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        5, this->_internal_is_fly_through(), target);
  }

  // float gimbal_pitch_deg = 6 [(.mavsdk.options.default_value) = "NaN", (.mavsdk.options.epsilon) = 0.0001];
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_gimbal_pitch_deg = this->_internal_gimbal_pitch_deg();
  ::uint32_t raw_gimbal_pitch_deg;
  memcpy(&raw_gimbal_pitch_deg, &tmp_gimbal_pitch_deg, sizeof(tmp_gimbal_pitch_deg));
  if (raw_gimbal_pitch_deg != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        6, this->_internal_gimbal_pitch_deg(), target);
  }

  // float gimbal_yaw_deg = 7 [(.mavsdk.options.default_value) = "NaN", (.mavsdk.options.epsilon) = 0.0001];
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_gimbal_yaw_deg = this->_internal_gimbal_yaw_deg();
  ::uint32_t raw_gimbal_yaw_deg;
  memcpy(&raw_gimbal_yaw_deg, &tmp_gimbal_yaw_deg, sizeof(tmp_gimbal_yaw_deg));
  if (raw_gimbal_yaw_deg != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        7, this->_internal_gimbal_yaw_deg(), target);
  }

  // .mavsdk.rpc.mission.MissionItem.CameraAction camera_action = 8;
  if (this->_internal_camera_action() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        8, this->_internal_camera_action(), target);
  }

  // float loiter_time_s = 9 [(.mavsdk.options.default_value) = "NaN"];
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_loiter_time_s = this->_internal_loiter_time_s();
  ::uint32_t raw_loiter_time_s;
  memcpy(&raw_loiter_time_s, &tmp_loiter_time_s, sizeof(tmp_loiter_time_s));
  if (raw_loiter_time_s != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        9, this->_internal_loiter_time_s(), target);
  }

  // double camera_photo_interval_s = 10 [(.mavsdk.options.default_value) = "1.0"];
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_camera_photo_interval_s = this->_internal_camera_photo_interval_s();
  ::uint64_t raw_camera_photo_interval_s;
  memcpy(&raw_camera_photo_interval_s, &tmp_camera_photo_interval_s, sizeof(tmp_camera_photo_interval_s));
  if (raw_camera_photo_interval_s != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        10, this->_internal_camera_photo_interval_s(), target);
  }

  // float acceptance_radius_m = 11 [(.mavsdk.options.default_value) = "NaN"];
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_acceptance_radius_m = this->_internal_acceptance_radius_m();
  ::uint32_t raw_acceptance_radius_m;
  memcpy(&raw_acceptance_radius_m, &tmp_acceptance_radius_m, sizeof(tmp_acceptance_radius_m));
  if (raw_acceptance_radius_m != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        11, this->_internal_acceptance_radius_m(), target);
  }

  // float yaw_deg = 12 [(.mavsdk.options.default_value) = "NaN"];
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_yaw_deg = this->_internal_yaw_deg();
  ::uint32_t raw_yaw_deg;
  memcpy(&raw_yaw_deg, &tmp_yaw_deg, sizeof(tmp_yaw_deg));
  if (raw_yaw_deg != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        12, this->_internal_yaw_deg(), target);
  }

  // float camera_photo_distance_m = 13 [(.mavsdk.options.default_value) = "NAN"];
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_camera_photo_distance_m = this->_internal_camera_photo_distance_m();
  ::uint32_t raw_camera_photo_distance_m;
  memcpy(&raw_camera_photo_distance_m, &tmp_camera_photo_distance_m, sizeof(tmp_camera_photo_distance_m));
  if (raw_camera_photo_distance_m != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        13, this->_internal_camera_photo_distance_m(), target);
  }

  // .mavsdk.rpc.mission.MissionItem.VehicleAction vehicle_action = 14;
  if (this->_internal_vehicle_action() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        14, this->_internal_vehicle_action(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.mission.MissionItem)
  return target;
}

::size_t MissionItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.mission.MissionItem)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // double latitude_deg = 1 [(.mavsdk.options.default_value) = "NaN", (.mavsdk.options.epsilon) = 1e-07];
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_latitude_deg = this->_internal_latitude_deg();
  ::uint64_t raw_latitude_deg;
  memcpy(&raw_latitude_deg, &tmp_latitude_deg, sizeof(tmp_latitude_deg));
  if (raw_latitude_deg != 0) {
    total_size += 9;
  }

  // double longitude_deg = 2 [(.mavsdk.options.default_value) = "NaN", (.mavsdk.options.epsilon) = 1e-07];
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_longitude_deg = this->_internal_longitude_deg();
  ::uint64_t raw_longitude_deg;
  memcpy(&raw_longitude_deg, &tmp_longitude_deg, sizeof(tmp_longitude_deg));
  if (raw_longitude_deg != 0) {
    total_size += 9;
  }

  // float relative_altitude_m = 3 [(.mavsdk.options.default_value) = "NaN"];
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_relative_altitude_m = this->_internal_relative_altitude_m();
  ::uint32_t raw_relative_altitude_m;
  memcpy(&raw_relative_altitude_m, &tmp_relative_altitude_m, sizeof(tmp_relative_altitude_m));
  if (raw_relative_altitude_m != 0) {
    total_size += 5;
  }

  // float speed_m_s = 4 [(.mavsdk.options.default_value) = "NaN"];
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_speed_m_s = this->_internal_speed_m_s();
  ::uint32_t raw_speed_m_s;
  memcpy(&raw_speed_m_s, &tmp_speed_m_s, sizeof(tmp_speed_m_s));
  if (raw_speed_m_s != 0) {
    total_size += 5;
  }

  // bool is_fly_through = 5 [(.mavsdk.options.default_value) = "false"];
  if (this->_internal_is_fly_through() != 0) {
    total_size += 2;
  }

  // float gimbal_pitch_deg = 6 [(.mavsdk.options.default_value) = "NaN", (.mavsdk.options.epsilon) = 0.0001];
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_gimbal_pitch_deg = this->_internal_gimbal_pitch_deg();
  ::uint32_t raw_gimbal_pitch_deg;
  memcpy(&raw_gimbal_pitch_deg, &tmp_gimbal_pitch_deg, sizeof(tmp_gimbal_pitch_deg));
  if (raw_gimbal_pitch_deg != 0) {
    total_size += 5;
  }

  // float gimbal_yaw_deg = 7 [(.mavsdk.options.default_value) = "NaN", (.mavsdk.options.epsilon) = 0.0001];
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_gimbal_yaw_deg = this->_internal_gimbal_yaw_deg();
  ::uint32_t raw_gimbal_yaw_deg;
  memcpy(&raw_gimbal_yaw_deg, &tmp_gimbal_yaw_deg, sizeof(tmp_gimbal_yaw_deg));
  if (raw_gimbal_yaw_deg != 0) {
    total_size += 5;
  }

  // .mavsdk.rpc.mission.MissionItem.CameraAction camera_action = 8;
  if (this->_internal_camera_action() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_camera_action());
  }

  // double camera_photo_interval_s = 10 [(.mavsdk.options.default_value) = "1.0"];
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_camera_photo_interval_s = this->_internal_camera_photo_interval_s();
  ::uint64_t raw_camera_photo_interval_s;
  memcpy(&raw_camera_photo_interval_s, &tmp_camera_photo_interval_s, sizeof(tmp_camera_photo_interval_s));
  if (raw_camera_photo_interval_s != 0) {
    total_size += 9;
  }

  // float loiter_time_s = 9 [(.mavsdk.options.default_value) = "NaN"];
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_loiter_time_s = this->_internal_loiter_time_s();
  ::uint32_t raw_loiter_time_s;
  memcpy(&raw_loiter_time_s, &tmp_loiter_time_s, sizeof(tmp_loiter_time_s));
  if (raw_loiter_time_s != 0) {
    total_size += 5;
  }

  // float acceptance_radius_m = 11 [(.mavsdk.options.default_value) = "NaN"];
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_acceptance_radius_m = this->_internal_acceptance_radius_m();
  ::uint32_t raw_acceptance_radius_m;
  memcpy(&raw_acceptance_radius_m, &tmp_acceptance_radius_m, sizeof(tmp_acceptance_radius_m));
  if (raw_acceptance_radius_m != 0) {
    total_size += 5;
  }

  // float yaw_deg = 12 [(.mavsdk.options.default_value) = "NaN"];
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_yaw_deg = this->_internal_yaw_deg();
  ::uint32_t raw_yaw_deg;
  memcpy(&raw_yaw_deg, &tmp_yaw_deg, sizeof(tmp_yaw_deg));
  if (raw_yaw_deg != 0) {
    total_size += 5;
  }

  // float camera_photo_distance_m = 13 [(.mavsdk.options.default_value) = "NAN"];
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_camera_photo_distance_m = this->_internal_camera_photo_distance_m();
  ::uint32_t raw_camera_photo_distance_m;
  memcpy(&raw_camera_photo_distance_m, &tmp_camera_photo_distance_m, sizeof(tmp_camera_photo_distance_m));
  if (raw_camera_photo_distance_m != 0) {
    total_size += 5;
  }

  // .mavsdk.rpc.mission.MissionItem.VehicleAction vehicle_action = 14;
  if (this->_internal_vehicle_action() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_vehicle_action());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData MissionItem::_class_data_ = {
    MissionItem::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* MissionItem::GetClassData() const {
  return &_class_data_;
}

void MissionItem::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<MissionItem*>(&to_msg);
  auto& from = static_cast<const MissionItem&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.mission.MissionItem)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_latitude_deg = from._internal_latitude_deg();
  ::uint64_t raw_latitude_deg;
  memcpy(&raw_latitude_deg, &tmp_latitude_deg, sizeof(tmp_latitude_deg));
  if (raw_latitude_deg != 0) {
    _this->_internal_set_latitude_deg(from._internal_latitude_deg());
  }
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_longitude_deg = from._internal_longitude_deg();
  ::uint64_t raw_longitude_deg;
  memcpy(&raw_longitude_deg, &tmp_longitude_deg, sizeof(tmp_longitude_deg));
  if (raw_longitude_deg != 0) {
    _this->_internal_set_longitude_deg(from._internal_longitude_deg());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_relative_altitude_m = from._internal_relative_altitude_m();
  ::uint32_t raw_relative_altitude_m;
  memcpy(&raw_relative_altitude_m, &tmp_relative_altitude_m, sizeof(tmp_relative_altitude_m));
  if (raw_relative_altitude_m != 0) {
    _this->_internal_set_relative_altitude_m(from._internal_relative_altitude_m());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_speed_m_s = from._internal_speed_m_s();
  ::uint32_t raw_speed_m_s;
  memcpy(&raw_speed_m_s, &tmp_speed_m_s, sizeof(tmp_speed_m_s));
  if (raw_speed_m_s != 0) {
    _this->_internal_set_speed_m_s(from._internal_speed_m_s());
  }
  if (from._internal_is_fly_through() != 0) {
    _this->_internal_set_is_fly_through(from._internal_is_fly_through());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_gimbal_pitch_deg = from._internal_gimbal_pitch_deg();
  ::uint32_t raw_gimbal_pitch_deg;
  memcpy(&raw_gimbal_pitch_deg, &tmp_gimbal_pitch_deg, sizeof(tmp_gimbal_pitch_deg));
  if (raw_gimbal_pitch_deg != 0) {
    _this->_internal_set_gimbal_pitch_deg(from._internal_gimbal_pitch_deg());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_gimbal_yaw_deg = from._internal_gimbal_yaw_deg();
  ::uint32_t raw_gimbal_yaw_deg;
  memcpy(&raw_gimbal_yaw_deg, &tmp_gimbal_yaw_deg, sizeof(tmp_gimbal_yaw_deg));
  if (raw_gimbal_yaw_deg != 0) {
    _this->_internal_set_gimbal_yaw_deg(from._internal_gimbal_yaw_deg());
  }
  if (from._internal_camera_action() != 0) {
    _this->_internal_set_camera_action(from._internal_camera_action());
  }
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_camera_photo_interval_s = from._internal_camera_photo_interval_s();
  ::uint64_t raw_camera_photo_interval_s;
  memcpy(&raw_camera_photo_interval_s, &tmp_camera_photo_interval_s, sizeof(tmp_camera_photo_interval_s));
  if (raw_camera_photo_interval_s != 0) {
    _this->_internal_set_camera_photo_interval_s(from._internal_camera_photo_interval_s());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_loiter_time_s = from._internal_loiter_time_s();
  ::uint32_t raw_loiter_time_s;
  memcpy(&raw_loiter_time_s, &tmp_loiter_time_s, sizeof(tmp_loiter_time_s));
  if (raw_loiter_time_s != 0) {
    _this->_internal_set_loiter_time_s(from._internal_loiter_time_s());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_acceptance_radius_m = from._internal_acceptance_radius_m();
  ::uint32_t raw_acceptance_radius_m;
  memcpy(&raw_acceptance_radius_m, &tmp_acceptance_radius_m, sizeof(tmp_acceptance_radius_m));
  if (raw_acceptance_radius_m != 0) {
    _this->_internal_set_acceptance_radius_m(from._internal_acceptance_radius_m());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_yaw_deg = from._internal_yaw_deg();
  ::uint32_t raw_yaw_deg;
  memcpy(&raw_yaw_deg, &tmp_yaw_deg, sizeof(tmp_yaw_deg));
  if (raw_yaw_deg != 0) {
    _this->_internal_set_yaw_deg(from._internal_yaw_deg());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_camera_photo_distance_m = from._internal_camera_photo_distance_m();
  ::uint32_t raw_camera_photo_distance_m;
  memcpy(&raw_camera_photo_distance_m, &tmp_camera_photo_distance_m, sizeof(tmp_camera_photo_distance_m));
  if (raw_camera_photo_distance_m != 0) {
    _this->_internal_set_camera_photo_distance_m(from._internal_camera_photo_distance_m());
  }
  if (from._internal_vehicle_action() != 0) {
    _this->_internal_set_vehicle_action(from._internal_vehicle_action());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MissionItem::CopyFrom(const MissionItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.mission.MissionItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool MissionItem::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* MissionItem::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void MissionItem::InternalSwap(MissionItem* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MissionItem, _impl_.vehicle_action_)
      + sizeof(MissionItem::_impl_.vehicle_action_)
      - PROTOBUF_FIELD_OFFSET(MissionItem, _impl_.latitude_deg_)>(
          reinterpret_cast<char*>(&_impl_.latitude_deg_),
          reinterpret_cast<char*>(&other->_impl_.latitude_deg_));
}

::google::protobuf::Metadata MissionItem::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_mission_2fmission_2eproto_getter, &descriptor_table_mission_2fmission_2eproto_once,
      file_level_metadata_mission_2fmission_2eproto[28]);
}
// ===================================================================

class MissionPlan::_Internal {
 public:
};

MissionPlan::MissionPlan(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.mission.MissionPlan)
}
inline PROTOBUF_NDEBUG_INLINE MissionPlan::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : mission_items_{visibility, arena, from.mission_items_},
        _cached_size_{0} {}

MissionPlan::MissionPlan(
    ::google::protobuf::Arena* arena,
    const MissionPlan& from)
    : ::google::protobuf::Message(arena) {
  MissionPlan* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.mission.MissionPlan)
}
inline PROTOBUF_NDEBUG_INLINE MissionPlan::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : mission_items_{visibility, arena},
        _cached_size_{0} {}

inline void MissionPlan::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
MissionPlan::~MissionPlan() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.mission.MissionPlan)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void MissionPlan::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void MissionPlan::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.mission.MissionPlan)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.mission_items_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* MissionPlan::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> MissionPlan::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_MissionPlan_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .mavsdk.rpc.mission.MissionItem mission_items = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(MissionPlan, _impl_.mission_items_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .mavsdk.rpc.mission.MissionItem mission_items = 1;
    {PROTOBUF_FIELD_OFFSET(MissionPlan, _impl_.mission_items_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::mission::MissionItem>()},
  }}, {{
  }},
};

::uint8_t* MissionPlan::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.mission.MissionPlan)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .mavsdk.rpc.mission.MissionItem mission_items = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_mission_items_size()); i < n; i++) {
    const auto& repfield = this->_internal_mission_items().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.mission.MissionPlan)
  return target;
}

::size_t MissionPlan::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.mission.MissionPlan)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .mavsdk.rpc.mission.MissionItem mission_items = 1;
  total_size += 1UL * this->_internal_mission_items_size();
  for (const auto& msg : this->_internal_mission_items()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData MissionPlan::_class_data_ = {
    MissionPlan::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* MissionPlan::GetClassData() const {
  return &_class_data_;
}

void MissionPlan::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<MissionPlan*>(&to_msg);
  auto& from = static_cast<const MissionPlan&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.mission.MissionPlan)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_mission_items()->MergeFrom(
      from._internal_mission_items());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MissionPlan::CopyFrom(const MissionPlan& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.mission.MissionPlan)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool MissionPlan::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* MissionPlan::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void MissionPlan::InternalSwap(MissionPlan* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.mission_items_.InternalSwap(&other->_impl_.mission_items_);
}

::google::protobuf::Metadata MissionPlan::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_mission_2fmission_2eproto_getter, &descriptor_table_mission_2fmission_2eproto_once,
      file_level_metadata_mission_2fmission_2eproto[29]);
}
// ===================================================================

class MissionProgress::_Internal {
 public:
};

MissionProgress::MissionProgress(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.mission.MissionProgress)
}
MissionProgress::MissionProgress(
    ::google::protobuf::Arena* arena, const MissionProgress& from)
    : MissionProgress(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE MissionProgress::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void MissionProgress::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, current_),
           0,
           offsetof(Impl_, total_) -
               offsetof(Impl_, current_) +
               sizeof(Impl_::total_));
}
MissionProgress::~MissionProgress() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.mission.MissionProgress)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void MissionProgress::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void MissionProgress::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.mission.MissionProgress)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.current_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.total_) -
      reinterpret_cast<char*>(&_impl_.current_)) + sizeof(_impl_.total_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* MissionProgress::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> MissionProgress::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_MissionProgress_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // int32 total = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MissionProgress, _impl_.total_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(MissionProgress, _impl_.total_)}},
    // int32 current = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MissionProgress, _impl_.current_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(MissionProgress, _impl_.current_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 current = 1;
    {PROTOBUF_FIELD_OFFSET(MissionProgress, _impl_.current_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 total = 2;
    {PROTOBUF_FIELD_OFFSET(MissionProgress, _impl_.total_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* MissionProgress::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.mission.MissionProgress)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 current = 1;
  if (this->_internal_current() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_current(), target);
  }

  // int32 total = 2;
  if (this->_internal_total() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_total(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.mission.MissionProgress)
  return target;
}

::size_t MissionProgress::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.mission.MissionProgress)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 current = 1;
  if (this->_internal_current() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_current());
  }

  // int32 total = 2;
  if (this->_internal_total() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_total());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData MissionProgress::_class_data_ = {
    MissionProgress::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* MissionProgress::GetClassData() const {
  return &_class_data_;
}

void MissionProgress::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<MissionProgress*>(&to_msg);
  auto& from = static_cast<const MissionProgress&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.mission.MissionProgress)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_current() != 0) {
    _this->_internal_set_current(from._internal_current());
  }
  if (from._internal_total() != 0) {
    _this->_internal_set_total(from._internal_total());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MissionProgress::CopyFrom(const MissionProgress& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.mission.MissionProgress)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool MissionProgress::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* MissionProgress::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void MissionProgress::InternalSwap(MissionProgress* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MissionProgress, _impl_.total_)
      + sizeof(MissionProgress::_impl_.total_)
      - PROTOBUF_FIELD_OFFSET(MissionProgress, _impl_.current_)>(
          reinterpret_cast<char*>(&_impl_.current_),
          reinterpret_cast<char*>(&other->_impl_.current_));
}

::google::protobuf::Metadata MissionProgress::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_mission_2fmission_2eproto_getter, &descriptor_table_mission_2fmission_2eproto_once,
      file_level_metadata_mission_2fmission_2eproto[30]);
}
// ===================================================================

class MissionResult::_Internal {
 public:
};

MissionResult::MissionResult(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.mission.MissionResult)
}
inline PROTOBUF_NDEBUG_INLINE MissionResult::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : result_str_(arena, from.result_str_),
        _cached_size_{0} {}

MissionResult::MissionResult(
    ::google::protobuf::Arena* arena,
    const MissionResult& from)
    : ::google::protobuf::Message(arena) {
  MissionResult* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.result_ = from._impl_.result_;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.mission.MissionResult)
}
inline PROTOBUF_NDEBUG_INLINE MissionResult::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : result_str_(arena),
        _cached_size_{0} {}

inline void MissionResult::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.result_ = {};
}
MissionResult::~MissionResult() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.mission.MissionResult)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void MissionResult::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.result_str_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void MissionResult::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.mission.MissionResult)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.result_str_.ClearToEmpty();
  _impl_.result_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* MissionResult::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 51, 2> MissionResult::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_MissionResult_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string result_str = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(MissionResult, _impl_.result_str_)}},
    // .mavsdk.rpc.mission.MissionResult.Result result = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MissionResult, _impl_.result_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(MissionResult, _impl_.result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.mission.MissionResult.Result result = 1;
    {PROTOBUF_FIELD_OFFSET(MissionResult, _impl_.result_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string result_str = 2;
    {PROTOBUF_FIELD_OFFSET(MissionResult, _impl_.result_str_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\40\0\12\0\0\0\0\0"
    "mavsdk.rpc.mission.MissionResult"
    "result_str"
  }},
};

::uint8_t* MissionResult::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.mission.MissionResult)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .mavsdk.rpc.mission.MissionResult.Result result = 1;
  if (this->_internal_result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_result(), target);
  }

  // string result_str = 2;
  if (!this->_internal_result_str().empty()) {
    const std::string& _s = this->_internal_result_str();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mavsdk.rpc.mission.MissionResult.result_str");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.mission.MissionResult)
  return target;
}

::size_t MissionResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.mission.MissionResult)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string result_str = 2;
  if (!this->_internal_result_str().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_result_str());
  }

  // .mavsdk.rpc.mission.MissionResult.Result result = 1;
  if (this->_internal_result() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_result());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData MissionResult::_class_data_ = {
    MissionResult::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* MissionResult::GetClassData() const {
  return &_class_data_;
}

void MissionResult::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<MissionResult*>(&to_msg);
  auto& from = static_cast<const MissionResult&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.mission.MissionResult)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_result_str().empty()) {
    _this->_internal_set_result_str(from._internal_result_str());
  }
  if (from._internal_result() != 0) {
    _this->_internal_set_result(from._internal_result());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MissionResult::CopyFrom(const MissionResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.mission.MissionResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool MissionResult::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* MissionResult::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void MissionResult::InternalSwap(MissionResult* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.result_str_, &other->_impl_.result_str_, arena);
  swap(_impl_.result_, other->_impl_.result_);
}

::google::protobuf::Metadata MissionResult::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_mission_2fmission_2eproto_getter, &descriptor_table_mission_2fmission_2eproto_once,
      file_level_metadata_mission_2fmission_2eproto[31]);
}
// ===================================================================

class ProgressData::_Internal {
 public:
};

ProgressData::ProgressData(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.mission.ProgressData)
}
ProgressData::ProgressData(
    ::google::protobuf::Arena* arena, const ProgressData& from)
    : ProgressData(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE ProgressData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ProgressData::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.progress_ = {};
}
ProgressData::~ProgressData() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.mission.ProgressData)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ProgressData::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ProgressData::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.mission.ProgressData)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.progress_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ProgressData::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> ProgressData::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_ProgressData_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // float progress = 1 [(.mavsdk.options.default_value) = "NaN"];
    {::_pbi::TcParser::FastF32S1,
     {13, 63, 0, PROTOBUF_FIELD_OFFSET(ProgressData, _impl_.progress_)}},
  }}, {{
    65535, 65535
  }}, {{
    // float progress = 1 [(.mavsdk.options.default_value) = "NaN"];
    {PROTOBUF_FIELD_OFFSET(ProgressData, _impl_.progress_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* ProgressData::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.mission.ProgressData)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // float progress = 1 [(.mavsdk.options.default_value) = "NaN"];
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_progress = this->_internal_progress();
  ::uint32_t raw_progress;
  memcpy(&raw_progress, &tmp_progress, sizeof(tmp_progress));
  if (raw_progress != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        1, this->_internal_progress(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.mission.ProgressData)
  return target;
}

::size_t ProgressData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.mission.ProgressData)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // float progress = 1 [(.mavsdk.options.default_value) = "NaN"];
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_progress = this->_internal_progress();
  ::uint32_t raw_progress;
  memcpy(&raw_progress, &tmp_progress, sizeof(tmp_progress));
  if (raw_progress != 0) {
    total_size += 5;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ProgressData::_class_data_ = {
    ProgressData::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ProgressData::GetClassData() const {
  return &_class_data_;
}

void ProgressData::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ProgressData*>(&to_msg);
  auto& from = static_cast<const ProgressData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.mission.ProgressData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_progress = from._internal_progress();
  ::uint32_t raw_progress;
  memcpy(&raw_progress, &tmp_progress, sizeof(tmp_progress));
  if (raw_progress != 0) {
    _this->_internal_set_progress(from._internal_progress());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ProgressData::CopyFrom(const ProgressData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.mission.ProgressData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ProgressData::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ProgressData::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ProgressData::InternalSwap(ProgressData* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.progress_, other->_impl_.progress_);
}

::google::protobuf::Metadata ProgressData::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_mission_2fmission_2eproto_getter, &descriptor_table_mission_2fmission_2eproto_once,
      file_level_metadata_mission_2fmission_2eproto[32]);
}
// ===================================================================

class ProgressDataOrMission::_Internal {
 public:
  using HasBits = decltype(std::declval<ProgressDataOrMission>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ProgressDataOrMission, _impl_._has_bits_);
  static const ::mavsdk::rpc::mission::MissionPlan& mission_plan(const ProgressDataOrMission* msg);
  static void set_has_mission_plan(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::mission::MissionPlan& ProgressDataOrMission::_Internal::mission_plan(const ProgressDataOrMission* msg) {
  return *msg->_impl_.mission_plan_;
}
ProgressDataOrMission::ProgressDataOrMission(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.mission.ProgressDataOrMission)
}
inline PROTOBUF_NDEBUG_INLINE ProgressDataOrMission::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

ProgressDataOrMission::ProgressDataOrMission(
    ::google::protobuf::Arena* arena,
    const ProgressDataOrMission& from)
    : ::google::protobuf::Message(arena) {
  ProgressDataOrMission* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.mission_plan_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::mission::MissionPlan>(arena, *from._impl_.mission_plan_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, progress_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, progress_),
           offsetof(Impl_, has_mission_) -
               offsetof(Impl_, progress_) +
               sizeof(Impl_::has_mission_));

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.mission.ProgressDataOrMission)
}
inline PROTOBUF_NDEBUG_INLINE ProgressDataOrMission::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ProgressDataOrMission::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, mission_plan_),
           0,
           offsetof(Impl_, has_mission_) -
               offsetof(Impl_, mission_plan_) +
               sizeof(Impl_::has_mission_));
}
ProgressDataOrMission::~ProgressDataOrMission() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.mission.ProgressDataOrMission)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ProgressDataOrMission::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.mission_plan_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ProgressDataOrMission::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.mission.ProgressDataOrMission)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.mission_plan_ != nullptr);
    _impl_.mission_plan_->Clear();
  }
  ::memset(&_impl_.progress_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.has_mission_) -
      reinterpret_cast<char*>(&_impl_.progress_)) + sizeof(_impl_.has_mission_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ProgressDataOrMission::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 0, 2> ProgressDataOrMission::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ProgressDataOrMission, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ProgressDataOrMission_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.mission.MissionPlan mission_plan = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 0, 0, PROTOBUF_FIELD_OFFSET(ProgressDataOrMission, _impl_.mission_plan_)}},
    // bool has_progress = 1 [(.mavsdk.options.default_value) = "false"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ProgressDataOrMission, _impl_.has_progress_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(ProgressDataOrMission, _impl_.has_progress_)}},
    // float progress = 2 [(.mavsdk.options.default_value) = "NaN"];
    {::_pbi::TcParser::FastF32S1,
     {21, 63, 0, PROTOBUF_FIELD_OFFSET(ProgressDataOrMission, _impl_.progress_)}},
    // bool has_mission = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ProgressDataOrMission, _impl_.has_mission_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(ProgressDataOrMission, _impl_.has_mission_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool has_progress = 1 [(.mavsdk.options.default_value) = "false"];
    {PROTOBUF_FIELD_OFFSET(ProgressDataOrMission, _impl_.has_progress_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // float progress = 2 [(.mavsdk.options.default_value) = "NaN"];
    {PROTOBUF_FIELD_OFFSET(ProgressDataOrMission, _impl_.progress_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // bool has_mission = 3;
    {PROTOBUF_FIELD_OFFSET(ProgressDataOrMission, _impl_.has_mission_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // .mavsdk.rpc.mission.MissionPlan mission_plan = 4;
    {PROTOBUF_FIELD_OFFSET(ProgressDataOrMission, _impl_.mission_plan_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::mission::MissionPlan>()},
  }}, {{
  }},
};

::uint8_t* ProgressDataOrMission::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.mission.ProgressDataOrMission)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bool has_progress = 1 [(.mavsdk.options.default_value) = "false"];
  if (this->_internal_has_progress() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        1, this->_internal_has_progress(), target);
  }

  // float progress = 2 [(.mavsdk.options.default_value) = "NaN"];
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_progress = this->_internal_progress();
  ::uint32_t raw_progress;
  memcpy(&raw_progress, &tmp_progress, sizeof(tmp_progress));
  if (raw_progress != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        2, this->_internal_progress(), target);
  }

  // bool has_mission = 3;
  if (this->_internal_has_mission() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        3, this->_internal_has_mission(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.mission.MissionPlan mission_plan = 4;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, _Internal::mission_plan(this),
        _Internal::mission_plan(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.mission.ProgressDataOrMission)
  return target;
}

::size_t ProgressDataOrMission::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.mission.ProgressDataOrMission)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.mission.MissionPlan mission_plan = 4;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.mission_plan_);
  }

  // float progress = 2 [(.mavsdk.options.default_value) = "NaN"];
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_progress = this->_internal_progress();
  ::uint32_t raw_progress;
  memcpy(&raw_progress, &tmp_progress, sizeof(tmp_progress));
  if (raw_progress != 0) {
    total_size += 5;
  }

  // bool has_progress = 1 [(.mavsdk.options.default_value) = "false"];
  if (this->_internal_has_progress() != 0) {
    total_size += 2;
  }

  // bool has_mission = 3;
  if (this->_internal_has_mission() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ProgressDataOrMission::_class_data_ = {
    ProgressDataOrMission::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ProgressDataOrMission::GetClassData() const {
  return &_class_data_;
}

void ProgressDataOrMission::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ProgressDataOrMission*>(&to_msg);
  auto& from = static_cast<const ProgressDataOrMission&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.mission.ProgressDataOrMission)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_mission_plan()->::mavsdk::rpc::mission::MissionPlan::MergeFrom(
        from._internal_mission_plan());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_progress = from._internal_progress();
  ::uint32_t raw_progress;
  memcpy(&raw_progress, &tmp_progress, sizeof(tmp_progress));
  if (raw_progress != 0) {
    _this->_internal_set_progress(from._internal_progress());
  }
  if (from._internal_has_progress() != 0) {
    _this->_internal_set_has_progress(from._internal_has_progress());
  }
  if (from._internal_has_mission() != 0) {
    _this->_internal_set_has_mission(from._internal_has_mission());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ProgressDataOrMission::CopyFrom(const ProgressDataOrMission& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.mission.ProgressDataOrMission)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ProgressDataOrMission::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ProgressDataOrMission::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ProgressDataOrMission::InternalSwap(ProgressDataOrMission* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ProgressDataOrMission, _impl_.has_mission_)
      + sizeof(ProgressDataOrMission::_impl_.has_mission_)
      - PROTOBUF_FIELD_OFFSET(ProgressDataOrMission, _impl_.mission_plan_)>(
          reinterpret_cast<char*>(&_impl_.mission_plan_),
          reinterpret_cast<char*>(&other->_impl_.mission_plan_));
}

::google::protobuf::Metadata ProgressDataOrMission::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_mission_2fmission_2eproto_getter, &descriptor_table_mission_2fmission_2eproto_once,
      file_level_metadata_mission_2fmission_2eproto[33]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace mission
}  // namespace rpc
}  // namespace mavsdk
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"

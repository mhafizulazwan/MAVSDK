// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ftp_server/ftp_server.proto
// Protobuf C++ Version: 4.25.1

#ifndef GOOGLE_PROTOBUF_INCLUDED_ftp_5fserver_2fftp_5fserver_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_ftp_5fserver_2fftp_5fserver_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4025000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4025001 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
#include "mavsdk_options.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_ftp_5fserver_2fftp_5fserver_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_ftp_5fserver_2fftp_5fserver_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_ftp_5fserver_2fftp_5fserver_2eproto;
namespace mavsdk {
namespace rpc {
namespace ftp_server {
class FtpServerResult;
struct FtpServerResultDefaultTypeInternal;
extern FtpServerResultDefaultTypeInternal _FtpServerResult_default_instance_;
class SetRootDirRequest;
struct SetRootDirRequestDefaultTypeInternal;
extern SetRootDirRequestDefaultTypeInternal _SetRootDirRequest_default_instance_;
class SetRootDirResponse;
struct SetRootDirResponseDefaultTypeInternal;
extern SetRootDirResponseDefaultTypeInternal _SetRootDirResponse_default_instance_;
}  // namespace ftp_server
}  // namespace rpc
}  // namespace mavsdk
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace mavsdk {
namespace rpc {
namespace ftp_server {
enum FtpServerResult_Result : int {
  FtpServerResult_Result_RESULT_UNKNOWN = 0,
  FtpServerResult_Result_RESULT_SUCCESS = 1,
  FtpServerResult_Result_RESULT_DOES_NOT_EXIST = 2,
  FtpServerResult_Result_RESULT_BUSY = 3,
  FtpServerResult_Result_FtpServerResult_Result_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  FtpServerResult_Result_FtpServerResult_Result_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool FtpServerResult_Result_IsValid(int value);
extern const uint32_t FtpServerResult_Result_internal_data_[];
constexpr FtpServerResult_Result FtpServerResult_Result_Result_MIN = static_cast<FtpServerResult_Result>(0);
constexpr FtpServerResult_Result FtpServerResult_Result_Result_MAX = static_cast<FtpServerResult_Result>(3);
constexpr int FtpServerResult_Result_Result_ARRAYSIZE = 3 + 1;
const ::google::protobuf::EnumDescriptor*
FtpServerResult_Result_descriptor();
template <typename T>
const std::string& FtpServerResult_Result_Name(T value) {
  static_assert(std::is_same<T, FtpServerResult_Result>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to Result_Name().");
  return FtpServerResult_Result_Name(static_cast<FtpServerResult_Result>(value));
}
template <>
inline const std::string& FtpServerResult_Result_Name(FtpServerResult_Result value) {
  return ::google::protobuf::internal::NameOfDenseEnum<FtpServerResult_Result_descriptor,
                                                 0, 3>(
      static_cast<int>(value));
}
inline bool FtpServerResult_Result_Parse(absl::string_view name, FtpServerResult_Result* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FtpServerResult_Result>(
      FtpServerResult_Result_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class SetRootDirRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.ftp_server.SetRootDirRequest) */ {
 public:
  inline SetRootDirRequest() : SetRootDirRequest(nullptr) {}
  ~SetRootDirRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SetRootDirRequest(::google::protobuf::internal::ConstantInitialized);

  inline SetRootDirRequest(const SetRootDirRequest& from)
      : SetRootDirRequest(nullptr, from) {}
  SetRootDirRequest(SetRootDirRequest&& from) noexcept
    : SetRootDirRequest() {
    *this = ::std::move(from);
  }

  inline SetRootDirRequest& operator=(const SetRootDirRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetRootDirRequest& operator=(SetRootDirRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetRootDirRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetRootDirRequest* internal_default_instance() {
    return reinterpret_cast<const SetRootDirRequest*>(
               &_SetRootDirRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(SetRootDirRequest& a, SetRootDirRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(SetRootDirRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetRootDirRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetRootDirRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetRootDirRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetRootDirRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SetRootDirRequest& from) {
    SetRootDirRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SetRootDirRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "mavsdk.rpc.ftp_server.SetRootDirRequest";
  }
  protected:
  explicit SetRootDirRequest(::google::protobuf::Arena* arena);
  SetRootDirRequest(::google::protobuf::Arena* arena, const SetRootDirRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPathFieldNumber = 1,
  };
  // string path = 1;
  void clear_path() ;
  const std::string& path() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_path(Arg_&& arg, Args_... args);
  std::string* mutable_path();
  PROTOBUF_NODISCARD std::string* release_path();
  void set_allocated_path(std::string* value);

  private:
  const std::string& _internal_path() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_path(
      const std::string& value);
  std::string* _internal_mutable_path();

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.ftp_server.SetRootDirRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      52, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr path_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ftp_5fserver_2fftp_5fserver_2eproto;
};// -------------------------------------------------------------------

class FtpServerResult final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.ftp_server.FtpServerResult) */ {
 public:
  inline FtpServerResult() : FtpServerResult(nullptr) {}
  ~FtpServerResult() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR FtpServerResult(::google::protobuf::internal::ConstantInitialized);

  inline FtpServerResult(const FtpServerResult& from)
      : FtpServerResult(nullptr, from) {}
  FtpServerResult(FtpServerResult&& from) noexcept
    : FtpServerResult() {
    *this = ::std::move(from);
  }

  inline FtpServerResult& operator=(const FtpServerResult& from) {
    CopyFrom(from);
    return *this;
  }
  inline FtpServerResult& operator=(FtpServerResult&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FtpServerResult& default_instance() {
    return *internal_default_instance();
  }
  static inline const FtpServerResult* internal_default_instance() {
    return reinterpret_cast<const FtpServerResult*>(
               &_FtpServerResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(FtpServerResult& a, FtpServerResult& b) {
    a.Swap(&b);
  }
  inline void Swap(FtpServerResult* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FtpServerResult* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FtpServerResult* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<FtpServerResult>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FtpServerResult& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const FtpServerResult& from) {
    FtpServerResult::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(FtpServerResult* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "mavsdk.rpc.ftp_server.FtpServerResult";
  }
  protected:
  explicit FtpServerResult(::google::protobuf::Arena* arena);
  FtpServerResult(::google::protobuf::Arena* arena, const FtpServerResult& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  using Result = FtpServerResult_Result;
  static constexpr Result RESULT_UNKNOWN = FtpServerResult_Result_RESULT_UNKNOWN;
  static constexpr Result RESULT_SUCCESS = FtpServerResult_Result_RESULT_SUCCESS;
  static constexpr Result RESULT_DOES_NOT_EXIST = FtpServerResult_Result_RESULT_DOES_NOT_EXIST;
  static constexpr Result RESULT_BUSY = FtpServerResult_Result_RESULT_BUSY;
  static inline bool Result_IsValid(int value) {
    return FtpServerResult_Result_IsValid(value);
  }
  static constexpr Result Result_MIN = FtpServerResult_Result_Result_MIN;
  static constexpr Result Result_MAX = FtpServerResult_Result_Result_MAX;
  static constexpr int Result_ARRAYSIZE = FtpServerResult_Result_Result_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* Result_descriptor() {
    return FtpServerResult_Result_descriptor();
  }
  template <typename T>
  static inline const std::string& Result_Name(T value) {
    return FtpServerResult_Result_Name(value);
  }
  static inline bool Result_Parse(absl::string_view name, Result* value) {
    return FtpServerResult_Result_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kResultStrFieldNumber = 2,
    kResultFieldNumber = 1,
  };
  // string result_str = 2;
  void clear_result_str() ;
  const std::string& result_str() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_result_str(Arg_&& arg, Args_... args);
  std::string* mutable_result_str();
  PROTOBUF_NODISCARD std::string* release_result_str();
  void set_allocated_result_str(std::string* value);

  private:
  const std::string& _internal_result_str() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_result_str(
      const std::string& value);
  std::string* _internal_mutable_result_str();

  public:
  // .mavsdk.rpc.ftp_server.FtpServerResult.Result result = 1;
  void clear_result() ;
  ::mavsdk::rpc::ftp_server::FtpServerResult_Result result() const;
  void set_result(::mavsdk::rpc::ftp_server::FtpServerResult_Result value);

  private:
  ::mavsdk::rpc::ftp_server::FtpServerResult_Result _internal_result() const;
  void _internal_set_result(::mavsdk::rpc::ftp_server::FtpServerResult_Result value);

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.ftp_server.FtpServerResult)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      56, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr result_str_;
    int result_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ftp_5fserver_2fftp_5fserver_2eproto;
};// -------------------------------------------------------------------

class SetRootDirResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.ftp_server.SetRootDirResponse) */ {
 public:
  inline SetRootDirResponse() : SetRootDirResponse(nullptr) {}
  ~SetRootDirResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SetRootDirResponse(::google::protobuf::internal::ConstantInitialized);

  inline SetRootDirResponse(const SetRootDirResponse& from)
      : SetRootDirResponse(nullptr, from) {}
  SetRootDirResponse(SetRootDirResponse&& from) noexcept
    : SetRootDirResponse() {
    *this = ::std::move(from);
  }

  inline SetRootDirResponse& operator=(const SetRootDirResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetRootDirResponse& operator=(SetRootDirResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetRootDirResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetRootDirResponse* internal_default_instance() {
    return reinterpret_cast<const SetRootDirResponse*>(
               &_SetRootDirResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(SetRootDirResponse& a, SetRootDirResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(SetRootDirResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetRootDirResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetRootDirResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetRootDirResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetRootDirResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SetRootDirResponse& from) {
    SetRootDirResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SetRootDirResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "mavsdk.rpc.ftp_server.SetRootDirResponse";
  }
  protected:
  explicit SetRootDirResponse(::google::protobuf::Arena* arena);
  SetRootDirResponse(::google::protobuf::Arena* arena, const SetRootDirResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFtpServerResultFieldNumber = 1,
  };
  // .mavsdk.rpc.ftp_server.FtpServerResult ftp_server_result = 1;
  bool has_ftp_server_result() const;
  void clear_ftp_server_result() ;
  const ::mavsdk::rpc::ftp_server::FtpServerResult& ftp_server_result() const;
  PROTOBUF_NODISCARD ::mavsdk::rpc::ftp_server::FtpServerResult* release_ftp_server_result();
  ::mavsdk::rpc::ftp_server::FtpServerResult* mutable_ftp_server_result();
  void set_allocated_ftp_server_result(::mavsdk::rpc::ftp_server::FtpServerResult* value);
  void unsafe_arena_set_allocated_ftp_server_result(::mavsdk::rpc::ftp_server::FtpServerResult* value);
  ::mavsdk::rpc::ftp_server::FtpServerResult* unsafe_arena_release_ftp_server_result();

  private:
  const ::mavsdk::rpc::ftp_server::FtpServerResult& _internal_ftp_server_result() const;
  ::mavsdk::rpc::ftp_server::FtpServerResult* _internal_mutable_ftp_server_result();

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.ftp_server.SetRootDirResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::mavsdk::rpc::ftp_server::FtpServerResult* ftp_server_result_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ftp_5fserver_2fftp_5fserver_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// SetRootDirRequest

// string path = 1;
inline void SetRootDirRequest::clear_path() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.path_.ClearToEmpty();
}
inline const std::string& SetRootDirRequest::path() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.ftp_server.SetRootDirRequest.path)
  return _internal_path();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SetRootDirRequest::set_path(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.path_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:mavsdk.rpc.ftp_server.SetRootDirRequest.path)
}
inline std::string* SetRootDirRequest::mutable_path() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_path();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.ftp_server.SetRootDirRequest.path)
  return _s;
}
inline const std::string& SetRootDirRequest::_internal_path() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.path_.Get();
}
inline void SetRootDirRequest::_internal_set_path(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.path_.Set(value, GetArena());
}
inline std::string* SetRootDirRequest::_internal_mutable_path() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.path_.Mutable( GetArena());
}
inline std::string* SetRootDirRequest::release_path() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:mavsdk.rpc.ftp_server.SetRootDirRequest.path)
  return _impl_.path_.Release();
}
inline void SetRootDirRequest::set_allocated_path(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.path_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.path_.IsDefault()) {
          _impl_.path_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.ftp_server.SetRootDirRequest.path)
}

// -------------------------------------------------------------------

// SetRootDirResponse

// .mavsdk.rpc.ftp_server.FtpServerResult ftp_server_result = 1;
inline bool SetRootDirResponse::has_ftp_server_result() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.ftp_server_result_ != nullptr);
  return value;
}
inline void SetRootDirResponse::clear_ftp_server_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.ftp_server_result_ != nullptr) _impl_.ftp_server_result_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::mavsdk::rpc::ftp_server::FtpServerResult& SetRootDirResponse::_internal_ftp_server_result() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::mavsdk::rpc::ftp_server::FtpServerResult* p = _impl_.ftp_server_result_;
  return p != nullptr ? *p : reinterpret_cast<const ::mavsdk::rpc::ftp_server::FtpServerResult&>(::mavsdk::rpc::ftp_server::_FtpServerResult_default_instance_);
}
inline const ::mavsdk::rpc::ftp_server::FtpServerResult& SetRootDirResponse::ftp_server_result() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.ftp_server.SetRootDirResponse.ftp_server_result)
  return _internal_ftp_server_result();
}
inline void SetRootDirResponse::unsafe_arena_set_allocated_ftp_server_result(::mavsdk::rpc::ftp_server::FtpServerResult* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.ftp_server_result_);
  }
  _impl_.ftp_server_result_ = reinterpret_cast<::mavsdk::rpc::ftp_server::FtpServerResult*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:mavsdk.rpc.ftp_server.SetRootDirResponse.ftp_server_result)
}
inline ::mavsdk::rpc::ftp_server::FtpServerResult* SetRootDirResponse::release_ftp_server_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::ftp_server::FtpServerResult* released = _impl_.ftp_server_result_;
  _impl_.ftp_server_result_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::mavsdk::rpc::ftp_server::FtpServerResult* SetRootDirResponse::unsafe_arena_release_ftp_server_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:mavsdk.rpc.ftp_server.SetRootDirResponse.ftp_server_result)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::ftp_server::FtpServerResult* temp = _impl_.ftp_server_result_;
  _impl_.ftp_server_result_ = nullptr;
  return temp;
}
inline ::mavsdk::rpc::ftp_server::FtpServerResult* SetRootDirResponse::_internal_mutable_ftp_server_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.ftp_server_result_ == nullptr) {
    auto* p = CreateMaybeMessage<::mavsdk::rpc::ftp_server::FtpServerResult>(GetArena());
    _impl_.ftp_server_result_ = reinterpret_cast<::mavsdk::rpc::ftp_server::FtpServerResult*>(p);
  }
  return _impl_.ftp_server_result_;
}
inline ::mavsdk::rpc::ftp_server::FtpServerResult* SetRootDirResponse::mutable_ftp_server_result() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::mavsdk::rpc::ftp_server::FtpServerResult* _msg = _internal_mutable_ftp_server_result();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.ftp_server.SetRootDirResponse.ftp_server_result)
  return _msg;
}
inline void SetRootDirResponse::set_allocated_ftp_server_result(::mavsdk::rpc::ftp_server::FtpServerResult* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::mavsdk::rpc::ftp_server::FtpServerResult*>(_impl_.ftp_server_result_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::mavsdk::rpc::ftp_server::FtpServerResult*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.ftp_server_result_ = reinterpret_cast<::mavsdk::rpc::ftp_server::FtpServerResult*>(value);
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.ftp_server.SetRootDirResponse.ftp_server_result)
}

// -------------------------------------------------------------------

// FtpServerResult

// .mavsdk.rpc.ftp_server.FtpServerResult.Result result = 1;
inline void FtpServerResult::clear_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.result_ = 0;
}
inline ::mavsdk::rpc::ftp_server::FtpServerResult_Result FtpServerResult::result() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.ftp_server.FtpServerResult.result)
  return _internal_result();
}
inline void FtpServerResult::set_result(::mavsdk::rpc::ftp_server::FtpServerResult_Result value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.ftp_server.FtpServerResult.result)
}
inline ::mavsdk::rpc::ftp_server::FtpServerResult_Result FtpServerResult::_internal_result() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::mavsdk::rpc::ftp_server::FtpServerResult_Result>(_impl_.result_);
}
inline void FtpServerResult::_internal_set_result(::mavsdk::rpc::ftp_server::FtpServerResult_Result value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.result_ = value;
}

// string result_str = 2;
inline void FtpServerResult::clear_result_str() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.result_str_.ClearToEmpty();
}
inline const std::string& FtpServerResult::result_str() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.ftp_server.FtpServerResult.result_str)
  return _internal_result_str();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void FtpServerResult::set_result_str(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.result_str_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:mavsdk.rpc.ftp_server.FtpServerResult.result_str)
}
inline std::string* FtpServerResult::mutable_result_str() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_result_str();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.ftp_server.FtpServerResult.result_str)
  return _s;
}
inline const std::string& FtpServerResult::_internal_result_str() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.result_str_.Get();
}
inline void FtpServerResult::_internal_set_result_str(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.result_str_.Set(value, GetArena());
}
inline std::string* FtpServerResult::_internal_mutable_result_str() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.result_str_.Mutable( GetArena());
}
inline std::string* FtpServerResult::release_result_str() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:mavsdk.rpc.ftp_server.FtpServerResult.result_str)
  return _impl_.result_str_.Release();
}
inline void FtpServerResult::set_allocated_result_str(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.result_str_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.result_str_.IsDefault()) {
          _impl_.result_str_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.ftp_server.FtpServerResult.result_str)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace ftp_server
}  // namespace rpc
}  // namespace mavsdk


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::mavsdk::rpc::ftp_server::FtpServerResult_Result> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::mavsdk::rpc::ftp_server::FtpServerResult_Result>() {
  return ::mavsdk::rpc::ftp_server::FtpServerResult_Result_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_ftp_5fserver_2fftp_5fserver_2eproto_2epb_2eh

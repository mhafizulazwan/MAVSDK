// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: action_server/action_server.proto

#include "action_server/action_server.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace mavsdk {
namespace rpc {
namespace action_server {
      template <typename>
PROTOBUF_CONSTEXPR SubscribeTerminateRequest::SubscribeTerminateRequest(::_pbi::ConstantInitialized) {}
struct SubscribeTerminateRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscribeTerminateRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscribeTerminateRequestDefaultTypeInternal() {}
  union {
    SubscribeTerminateRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscribeTerminateRequestDefaultTypeInternal _SubscribeTerminateRequest_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR SubscribeTakeoffRequest::SubscribeTakeoffRequest(::_pbi::ConstantInitialized) {}
struct SubscribeTakeoffRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscribeTakeoffRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscribeTakeoffRequestDefaultTypeInternal() {}
  union {
    SubscribeTakeoffRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscribeTakeoffRequestDefaultTypeInternal _SubscribeTakeoffRequest_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR SubscribeShutdownRequest::SubscribeShutdownRequest(::_pbi::ConstantInitialized) {}
struct SubscribeShutdownRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscribeShutdownRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscribeShutdownRequestDefaultTypeInternal() {}
  union {
    SubscribeShutdownRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscribeShutdownRequestDefaultTypeInternal _SubscribeShutdownRequest_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR SubscribeRebootRequest::SubscribeRebootRequest(::_pbi::ConstantInitialized) {}
struct SubscribeRebootRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscribeRebootRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscribeRebootRequestDefaultTypeInternal() {}
  union {
    SubscribeRebootRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscribeRebootRequestDefaultTypeInternal _SubscribeRebootRequest_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR SubscribeLandRequest::SubscribeLandRequest(::_pbi::ConstantInitialized) {}
struct SubscribeLandRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscribeLandRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscribeLandRequestDefaultTypeInternal() {}
  union {
    SubscribeLandRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscribeLandRequestDefaultTypeInternal _SubscribeLandRequest_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR SubscribeFlightModeChangeRequest::SubscribeFlightModeChangeRequest(::_pbi::ConstantInitialized) {}
struct SubscribeFlightModeChangeRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscribeFlightModeChangeRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscribeFlightModeChangeRequestDefaultTypeInternal() {}
  union {
    SubscribeFlightModeChangeRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscribeFlightModeChangeRequestDefaultTypeInternal _SubscribeFlightModeChangeRequest_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR SubscribeArmDisarmRequest::SubscribeArmDisarmRequest(::_pbi::ConstantInitialized) {}
struct SubscribeArmDisarmRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscribeArmDisarmRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscribeArmDisarmRequestDefaultTypeInternal() {}
  union {
    SubscribeArmDisarmRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscribeArmDisarmRequestDefaultTypeInternal _SubscribeArmDisarmRequest_default_instance_;

inline constexpr SetDisarmableRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : disarmable_{false},
        force_disarmable_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SetDisarmableRequest::SetDisarmableRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SetDisarmableRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetDisarmableRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetDisarmableRequestDefaultTypeInternal() {}
  union {
    SetDisarmableRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetDisarmableRequestDefaultTypeInternal _SetDisarmableRequest_default_instance_;

inline constexpr SetArmableRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : armable_{false},
        force_armable_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SetArmableRequest::SetArmableRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SetArmableRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetArmableRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetArmableRequestDefaultTypeInternal() {}
  union {
    SetArmableRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetArmableRequestDefaultTypeInternal _SetArmableRequest_default_instance_;

inline constexpr SetAllowTakeoffRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : allow_takeoff_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SetAllowTakeoffRequest::SetAllowTakeoffRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SetAllowTakeoffRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetAllowTakeoffRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetAllowTakeoffRequestDefaultTypeInternal() {}
  union {
    SetAllowTakeoffRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetAllowTakeoffRequestDefaultTypeInternal _SetAllowTakeoffRequest_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR GetAllowableFlightModesRequest::GetAllowableFlightModesRequest(::_pbi::ConstantInitialized) {}
struct GetAllowableFlightModesRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetAllowableFlightModesRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetAllowableFlightModesRequestDefaultTypeInternal() {}
  union {
    GetAllowableFlightModesRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetAllowableFlightModesRequestDefaultTypeInternal _GetAllowableFlightModesRequest_default_instance_;

inline constexpr ArmDisarm::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : arm_{false},
        force_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ArmDisarm::ArmDisarm(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ArmDisarmDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ArmDisarmDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ArmDisarmDefaultTypeInternal() {}
  union {
    ArmDisarm _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ArmDisarmDefaultTypeInternal _ArmDisarm_default_instance_;

inline constexpr AllowableFlightModes::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : can_auto_mode_{false},
        can_guided_mode_{false},
        can_stabilize_mode_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR AllowableFlightModes::AllowableFlightModes(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct AllowableFlightModesDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AllowableFlightModesDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AllowableFlightModesDefaultTypeInternal() {}
  union {
    AllowableFlightModes _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AllowableFlightModesDefaultTypeInternal _AllowableFlightModes_default_instance_;

inline constexpr ActionServerResult::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : result_str_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        result_{static_cast< ::mavsdk::rpc::action_server::ActionServerResult_Result >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ActionServerResult::ActionServerResult(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ActionServerResultDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ActionServerResultDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ActionServerResultDefaultTypeInternal() {}
  union {
    ActionServerResult _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ActionServerResultDefaultTypeInternal _ActionServerResult_default_instance_;

inline constexpr TerminateResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        action_server_result_{nullptr},
        terminate_{false} {}

template <typename>
PROTOBUF_CONSTEXPR TerminateResponse::TerminateResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct TerminateResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TerminateResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TerminateResponseDefaultTypeInternal() {}
  union {
    TerminateResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TerminateResponseDefaultTypeInternal _TerminateResponse_default_instance_;

inline constexpr TakeoffResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        action_server_result_{nullptr},
        takeoff_{false} {}

template <typename>
PROTOBUF_CONSTEXPR TakeoffResponse::TakeoffResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct TakeoffResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TakeoffResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TakeoffResponseDefaultTypeInternal() {}
  union {
    TakeoffResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TakeoffResponseDefaultTypeInternal _TakeoffResponse_default_instance_;

inline constexpr ShutdownResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        action_server_result_{nullptr},
        shutdown_{false} {}

template <typename>
PROTOBUF_CONSTEXPR ShutdownResponse::ShutdownResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ShutdownResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ShutdownResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ShutdownResponseDefaultTypeInternal() {}
  union {
    ShutdownResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ShutdownResponseDefaultTypeInternal _ShutdownResponse_default_instance_;

inline constexpr SetDisarmableResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        action_server_result_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR SetDisarmableResponse::SetDisarmableResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SetDisarmableResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetDisarmableResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetDisarmableResponseDefaultTypeInternal() {}
  union {
    SetDisarmableResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetDisarmableResponseDefaultTypeInternal _SetDisarmableResponse_default_instance_;

inline constexpr SetArmableResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        action_server_result_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR SetArmableResponse::SetArmableResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SetArmableResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetArmableResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetArmableResponseDefaultTypeInternal() {}
  union {
    SetArmableResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetArmableResponseDefaultTypeInternal _SetArmableResponse_default_instance_;

inline constexpr SetAllowableFlightModesResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        action_server_result_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR SetAllowableFlightModesResponse::SetAllowableFlightModesResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SetAllowableFlightModesResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetAllowableFlightModesResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetAllowableFlightModesResponseDefaultTypeInternal() {}
  union {
    SetAllowableFlightModesResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetAllowableFlightModesResponseDefaultTypeInternal _SetAllowableFlightModesResponse_default_instance_;

inline constexpr SetAllowableFlightModesRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        flight_modes_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR SetAllowableFlightModesRequest::SetAllowableFlightModesRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SetAllowableFlightModesRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetAllowableFlightModesRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetAllowableFlightModesRequestDefaultTypeInternal() {}
  union {
    SetAllowableFlightModesRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetAllowableFlightModesRequestDefaultTypeInternal _SetAllowableFlightModesRequest_default_instance_;

inline constexpr SetAllowTakeoffResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        action_server_result_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR SetAllowTakeoffResponse::SetAllowTakeoffResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SetAllowTakeoffResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetAllowTakeoffResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetAllowTakeoffResponseDefaultTypeInternal() {}
  union {
    SetAllowTakeoffResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetAllowTakeoffResponseDefaultTypeInternal _SetAllowTakeoffResponse_default_instance_;

inline constexpr RebootResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        action_server_result_{nullptr},
        reboot_{false} {}

template <typename>
PROTOBUF_CONSTEXPR RebootResponse::RebootResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RebootResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RebootResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RebootResponseDefaultTypeInternal() {}
  union {
    RebootResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RebootResponseDefaultTypeInternal _RebootResponse_default_instance_;

inline constexpr LandResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        action_server_result_{nullptr},
        land_{false} {}

template <typename>
PROTOBUF_CONSTEXPR LandResponse::LandResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct LandResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LandResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LandResponseDefaultTypeInternal() {}
  union {
    LandResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LandResponseDefaultTypeInternal _LandResponse_default_instance_;

inline constexpr GetAllowableFlightModesResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        flight_modes_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR GetAllowableFlightModesResponse::GetAllowableFlightModesResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GetAllowableFlightModesResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetAllowableFlightModesResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetAllowableFlightModesResponseDefaultTypeInternal() {}
  union {
    GetAllowableFlightModesResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetAllowableFlightModesResponseDefaultTypeInternal _GetAllowableFlightModesResponse_default_instance_;

inline constexpr FlightModeChangeResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        action_server_result_{nullptr},
        flight_mode_{static_cast< ::mavsdk::rpc::action_server::FlightMode >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR FlightModeChangeResponse::FlightModeChangeResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct FlightModeChangeResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FlightModeChangeResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FlightModeChangeResponseDefaultTypeInternal() {}
  union {
    FlightModeChangeResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FlightModeChangeResponseDefaultTypeInternal _FlightModeChangeResponse_default_instance_;

inline constexpr ArmDisarmResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        action_server_result_{nullptr},
        arm_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR ArmDisarmResponse::ArmDisarmResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ArmDisarmResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ArmDisarmResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ArmDisarmResponseDefaultTypeInternal() {}
  union {
    ArmDisarmResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ArmDisarmResponseDefaultTypeInternal _ArmDisarmResponse_default_instance_;
}  // namespace action_server
}  // namespace rpc
}  // namespace mavsdk
static ::_pb::Metadata file_level_metadata_action_5fserver_2faction_5fserver_2eproto[27];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_action_5fserver_2faction_5fserver_2eproto[2];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_action_5fserver_2faction_5fserver_2eproto = nullptr;
const ::uint32_t TableStruct_action_5fserver_2faction_5fserver_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::action_server::SetAllowTakeoffRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::action_server::SetAllowTakeoffRequest, _impl_.allow_takeoff_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::action_server::SetArmableRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::action_server::SetArmableRequest, _impl_.armable_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::action_server::SetArmableRequest, _impl_.force_armable_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::action_server::SetDisarmableRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::action_server::SetDisarmableRequest, _impl_.disarmable_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::action_server::SetDisarmableRequest, _impl_.force_disarmable_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::action_server::SetAllowableFlightModesRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::action_server::SetAllowableFlightModesRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::action_server::SetAllowableFlightModesRequest, _impl_.flight_modes_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::action_server::GetAllowableFlightModesRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::action_server::SubscribeArmDisarmRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::action_server::SubscribeFlightModeChangeRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::action_server::SubscribeTakeoffRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::action_server::SubscribeLandRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::action_server::SubscribeRebootRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::action_server::SubscribeShutdownRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::action_server::SubscribeTerminateRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::action_server::ArmDisarmResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::action_server::ArmDisarmResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::action_server::ArmDisarmResponse, _impl_.action_server_result_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::action_server::ArmDisarmResponse, _impl_.arm_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::action_server::FlightModeChangeResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::action_server::FlightModeChangeResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::action_server::FlightModeChangeResponse, _impl_.action_server_result_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::action_server::FlightModeChangeResponse, _impl_.flight_mode_),
    0,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::action_server::TakeoffResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::action_server::TakeoffResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::action_server::TakeoffResponse, _impl_.action_server_result_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::action_server::TakeoffResponse, _impl_.takeoff_),
    0,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::action_server::LandResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::action_server::LandResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::action_server::LandResponse, _impl_.action_server_result_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::action_server::LandResponse, _impl_.land_),
    0,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::action_server::RebootResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::action_server::RebootResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::action_server::RebootResponse, _impl_.action_server_result_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::action_server::RebootResponse, _impl_.reboot_),
    0,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::action_server::ShutdownResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::action_server::ShutdownResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::action_server::ShutdownResponse, _impl_.action_server_result_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::action_server::ShutdownResponse, _impl_.shutdown_),
    0,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::action_server::TerminateResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::action_server::TerminateResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::action_server::TerminateResponse, _impl_.action_server_result_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::action_server::TerminateResponse, _impl_.terminate_),
    0,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::action_server::SetArmableResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::action_server::SetArmableResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::action_server::SetArmableResponse, _impl_.action_server_result_),
    0,
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::action_server::SetDisarmableResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::action_server::SetDisarmableResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::action_server::SetDisarmableResponse, _impl_.action_server_result_),
    0,
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::action_server::SetAllowableFlightModesResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::action_server::SetAllowableFlightModesResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::action_server::SetAllowableFlightModesResponse, _impl_.action_server_result_),
    0,
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::action_server::SetAllowTakeoffResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::action_server::SetAllowTakeoffResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::action_server::SetAllowTakeoffResponse, _impl_.action_server_result_),
    0,
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::action_server::GetAllowableFlightModesResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::action_server::GetAllowableFlightModesResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::action_server::GetAllowableFlightModesResponse, _impl_.flight_modes_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::action_server::AllowableFlightModes, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::action_server::AllowableFlightModes, _impl_.can_auto_mode_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::action_server::AllowableFlightModes, _impl_.can_guided_mode_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::action_server::AllowableFlightModes, _impl_.can_stabilize_mode_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::action_server::ArmDisarm, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::action_server::ArmDisarm, _impl_.arm_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::action_server::ArmDisarm, _impl_.force_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::action_server::ActionServerResult, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::action_server::ActionServerResult, _impl_.result_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::action_server::ActionServerResult, _impl_.result_str_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::mavsdk::rpc::action_server::SetAllowTakeoffRequest)},
        {9, -1, -1, sizeof(::mavsdk::rpc::action_server::SetArmableRequest)},
        {19, -1, -1, sizeof(::mavsdk::rpc::action_server::SetDisarmableRequest)},
        {29, 38, -1, sizeof(::mavsdk::rpc::action_server::SetAllowableFlightModesRequest)},
        {39, -1, -1, sizeof(::mavsdk::rpc::action_server::GetAllowableFlightModesRequest)},
        {47, -1, -1, sizeof(::mavsdk::rpc::action_server::SubscribeArmDisarmRequest)},
        {55, -1, -1, sizeof(::mavsdk::rpc::action_server::SubscribeFlightModeChangeRequest)},
        {63, -1, -1, sizeof(::mavsdk::rpc::action_server::SubscribeTakeoffRequest)},
        {71, -1, -1, sizeof(::mavsdk::rpc::action_server::SubscribeLandRequest)},
        {79, -1, -1, sizeof(::mavsdk::rpc::action_server::SubscribeRebootRequest)},
        {87, -1, -1, sizeof(::mavsdk::rpc::action_server::SubscribeShutdownRequest)},
        {95, -1, -1, sizeof(::mavsdk::rpc::action_server::SubscribeTerminateRequest)},
        {103, 113, -1, sizeof(::mavsdk::rpc::action_server::ArmDisarmResponse)},
        {115, 125, -1, sizeof(::mavsdk::rpc::action_server::FlightModeChangeResponse)},
        {127, 137, -1, sizeof(::mavsdk::rpc::action_server::TakeoffResponse)},
        {139, 149, -1, sizeof(::mavsdk::rpc::action_server::LandResponse)},
        {151, 161, -1, sizeof(::mavsdk::rpc::action_server::RebootResponse)},
        {163, 173, -1, sizeof(::mavsdk::rpc::action_server::ShutdownResponse)},
        {175, 185, -1, sizeof(::mavsdk::rpc::action_server::TerminateResponse)},
        {187, 196, -1, sizeof(::mavsdk::rpc::action_server::SetArmableResponse)},
        {197, 206, -1, sizeof(::mavsdk::rpc::action_server::SetDisarmableResponse)},
        {207, 216, -1, sizeof(::mavsdk::rpc::action_server::SetAllowableFlightModesResponse)},
        {217, 226, -1, sizeof(::mavsdk::rpc::action_server::SetAllowTakeoffResponse)},
        {227, 236, -1, sizeof(::mavsdk::rpc::action_server::GetAllowableFlightModesResponse)},
        {237, -1, -1, sizeof(::mavsdk::rpc::action_server::AllowableFlightModes)},
        {248, -1, -1, sizeof(::mavsdk::rpc::action_server::ArmDisarm)},
        {258, -1, -1, sizeof(::mavsdk::rpc::action_server::ActionServerResult)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::mavsdk::rpc::action_server::_SetAllowTakeoffRequest_default_instance_._instance,
    &::mavsdk::rpc::action_server::_SetArmableRequest_default_instance_._instance,
    &::mavsdk::rpc::action_server::_SetDisarmableRequest_default_instance_._instance,
    &::mavsdk::rpc::action_server::_SetAllowableFlightModesRequest_default_instance_._instance,
    &::mavsdk::rpc::action_server::_GetAllowableFlightModesRequest_default_instance_._instance,
    &::mavsdk::rpc::action_server::_SubscribeArmDisarmRequest_default_instance_._instance,
    &::mavsdk::rpc::action_server::_SubscribeFlightModeChangeRequest_default_instance_._instance,
    &::mavsdk::rpc::action_server::_SubscribeTakeoffRequest_default_instance_._instance,
    &::mavsdk::rpc::action_server::_SubscribeLandRequest_default_instance_._instance,
    &::mavsdk::rpc::action_server::_SubscribeRebootRequest_default_instance_._instance,
    &::mavsdk::rpc::action_server::_SubscribeShutdownRequest_default_instance_._instance,
    &::mavsdk::rpc::action_server::_SubscribeTerminateRequest_default_instance_._instance,
    &::mavsdk::rpc::action_server::_ArmDisarmResponse_default_instance_._instance,
    &::mavsdk::rpc::action_server::_FlightModeChangeResponse_default_instance_._instance,
    &::mavsdk::rpc::action_server::_TakeoffResponse_default_instance_._instance,
    &::mavsdk::rpc::action_server::_LandResponse_default_instance_._instance,
    &::mavsdk::rpc::action_server::_RebootResponse_default_instance_._instance,
    &::mavsdk::rpc::action_server::_ShutdownResponse_default_instance_._instance,
    &::mavsdk::rpc::action_server::_TerminateResponse_default_instance_._instance,
    &::mavsdk::rpc::action_server::_SetArmableResponse_default_instance_._instance,
    &::mavsdk::rpc::action_server::_SetDisarmableResponse_default_instance_._instance,
    &::mavsdk::rpc::action_server::_SetAllowableFlightModesResponse_default_instance_._instance,
    &::mavsdk::rpc::action_server::_SetAllowTakeoffResponse_default_instance_._instance,
    &::mavsdk::rpc::action_server::_GetAllowableFlightModesResponse_default_instance_._instance,
    &::mavsdk::rpc::action_server::_AllowableFlightModes_default_instance_._instance,
    &::mavsdk::rpc::action_server::_ArmDisarm_default_instance_._instance,
    &::mavsdk::rpc::action_server::_ActionServerResult_default_instance_._instance,
};
const char descriptor_table_protodef_action_5fserver_2faction_5fserver_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n!action_server/action_server.proto\022\030mav"
    "sdk.rpc.action_server\032\024mavsdk_options.pr"
    "oto\"/\n\026SetAllowTakeoffRequest\022\025\n\rallow_t"
    "akeoff\030\001 \001(\010\";\n\021SetArmableRequest\022\017\n\007arm"
    "able\030\001 \001(\010\022\025\n\rforce_armable\030\002 \001(\010\"D\n\024Set"
    "DisarmableRequest\022\022\n\ndisarmable\030\001 \001(\010\022\030\n"
    "\020force_disarmable\030\002 \001(\010\"f\n\036SetAllowableF"
    "lightModesRequest\022D\n\014flight_modes\030\001 \001(\0132"
    "..mavsdk.rpc.action_server.AllowableFlig"
    "htModes\" \n\036GetAllowableFlightModesReques"
    "t\"\033\n\031SubscribeArmDisarmRequest\"\"\n Subscr"
    "ibeFlightModeChangeRequest\"\031\n\027SubscribeT"
    "akeoffRequest\"\026\n\024SubscribeLandRequest\"\030\n"
    "\026SubscribeRebootRequest\"\032\n\030SubscribeShut"
    "downRequest\"\033\n\031SubscribeTerminateRequest"
    "\"\221\001\n\021ArmDisarmResponse\022J\n\024action_server_"
    "result\030\001 \001(\0132,.mavsdk.rpc.action_server."
    "ActionServerResult\0220\n\003arm\030\002 \001(\0132#.mavsdk"
    ".rpc.action_server.ArmDisarm\"\241\001\n\030FlightM"
    "odeChangeResponse\022J\n\024action_server_resul"
    "t\030\001 \001(\0132,.mavsdk.rpc.action_server.Actio"
    "nServerResult\0229\n\013flight_mode\030\002 \001(\0162$.mav"
    "sdk.rpc.action_server.FlightMode\"n\n\017Take"
    "offResponse\022J\n\024action_server_result\030\001 \001("
    "\0132,.mavsdk.rpc.action_server.ActionServe"
    "rResult\022\017\n\007takeoff\030\002 \001(\010\"h\n\014LandResponse"
    "\022J\n\024action_server_result\030\001 \001(\0132,.mavsdk."
    "rpc.action_server.ActionServerResult\022\014\n\004"
    "land\030\002 \001(\010\"l\n\016RebootResponse\022J\n\024action_s"
    "erver_result\030\001 \001(\0132,.mavsdk.rpc.action_s"
    "erver.ActionServerResult\022\016\n\006reboot\030\002 \001(\010"
    "\"p\n\020ShutdownResponse\022J\n\024action_server_re"
    "sult\030\001 \001(\0132,.mavsdk.rpc.action_server.Ac"
    "tionServerResult\022\020\n\010shutdown\030\002 \001(\010\"r\n\021Te"
    "rminateResponse\022J\n\024action_server_result\030"
    "\001 \001(\0132,.mavsdk.rpc.action_server.ActionS"
    "erverResult\022\021\n\tterminate\030\002 \001(\010\"`\n\022SetArm"
    "ableResponse\022J\n\024action_server_result\030\001 \001"
    "(\0132,.mavsdk.rpc.action_server.ActionServ"
    "erResult\"c\n\025SetDisarmableResponse\022J\n\024act"
    "ion_server_result\030\001 \001(\0132,.mavsdk.rpc.act"
    "ion_server.ActionServerResult\"m\n\037SetAllo"
    "wableFlightModesResponse\022J\n\024action_serve"
    "r_result\030\001 \001(\0132,.mavsdk.rpc.action_serve"
    "r.ActionServerResult\"e\n\027SetAllowTakeoffR"
    "esponse\022J\n\024action_server_result\030\001 \001(\0132,."
    "mavsdk.rpc.action_server.ActionServerRes"
    "ult\"g\n\037GetAllowableFlightModesResponse\022D"
    "\n\014flight_modes\030\001 \001(\0132..mavsdk.rpc.action"
    "_server.AllowableFlightModes\"b\n\024Allowabl"
    "eFlightModes\022\025\n\rcan_auto_mode\030\001 \001(\010\022\027\n\017c"
    "an_guided_mode\030\002 \001(\010\022\032\n\022can_stabilize_mo"
    "de\030\003 \001(\010\"\'\n\tArmDisarm\022\013\n\003arm\030\001 \001(\010\022\r\n\005fo"
    "rce\030\002 \001(\010\"\351\003\n\022ActionServerResult\022C\n\006resu"
    "lt\030\001 \001(\01623.mavsdk.rpc.action_server.Acti"
    "onServerResult.Result\022\022\n\nresult_str\030\002 \001("
    "\t\"\371\002\n\006Result\022\022\n\016RESULT_UNKNOWN\020\000\022\022\n\016RESU"
    "LT_SUCCESS\020\001\022\024\n\020RESULT_NO_SYSTEM\020\002\022\033\n\027RE"
    "SULT_CONNECTION_ERROR\020\003\022\017\n\013RESULT_BUSY\020\004"
    "\022\031\n\025RESULT_COMMAND_DENIED\020\005\022.\n*RESULT_CO"
    "MMAND_DENIED_LANDED_STATE_UNKNOWN\020\006\022$\n R"
    "ESULT_COMMAND_DENIED_NOT_LANDED\020\007\022\022\n\016RES"
    "ULT_TIMEOUT\020\010\022*\n&RESULT_VTOL_TRANSITION_"
    "SUPPORT_UNKNOWN\020\t\022%\n!RESULT_NO_VTOL_TRAN"
    "SITION_SUPPORT\020\n\022\032\n\026RESULT_PARAMETER_ERR"
    "OR\020\013\022\017\n\013RESULT_NEXT\020\014*\353\002\n\nFlightMode\022\027\n\023"
    "FLIGHT_MODE_UNKNOWN\020\000\022\025\n\021FLIGHT_MODE_REA"
    "DY\020\001\022\027\n\023FLIGHT_MODE_TAKEOFF\020\002\022\024\n\020FLIGHT_"
    "MODE_HOLD\020\003\022\027\n\023FLIGHT_MODE_MISSION\020\004\022 \n\034"
    "FLIGHT_MODE_RETURN_TO_LAUNCH\020\005\022\024\n\020FLIGHT"
    "_MODE_LAND\020\006\022\030\n\024FLIGHT_MODE_OFFBOARD\020\007\022\031"
    "\n\025FLIGHT_MODE_FOLLOW_ME\020\010\022\026\n\022FLIGHT_MODE"
    "_MANUAL\020\t\022\026\n\022FLIGHT_MODE_ALTCTL\020\n\022\026\n\022FLI"
    "GHT_MODE_POSCTL\020\013\022\024\n\020FLIGHT_MODE_ACRO\020\014\022"
    "\032\n\026FLIGHT_MODE_STABILIZED\020\r2\235\014\n\023ActionSe"
    "rverService\022~\n\022SubscribeArmDisarm\0223.mavs"
    "dk.rpc.action_server.SubscribeArmDisarmR"
    "equest\032+.mavsdk.rpc.action_server.ArmDis"
    "armResponse\"\004\200\265\030\0000\001\022\223\001\n\031SubscribeFlightM"
    "odeChange\022:.mavsdk.rpc.action_server.Sub"
    "scribeFlightModeChangeRequest\0322.mavsdk.r"
    "pc.action_server.FlightModeChangeRespons"
    "e\"\004\200\265\030\0000\001\022x\n\020SubscribeTakeoff\0221.mavsdk.r"
    "pc.action_server.SubscribeTakeoffRequest"
    "\032).mavsdk.rpc.action_server.TakeoffRespo"
    "nse\"\004\200\265\030\0000\001\022o\n\rSubscribeLand\022..mavsdk.rp"
    "c.action_server.SubscribeLandRequest\032&.m"
    "avsdk.rpc.action_server.LandResponse\"\004\200\265"
    "\030\0000\001\022u\n\017SubscribeReboot\0220.mavsdk.rpc.act"
    "ion_server.SubscribeRebootRequest\032(.mavs"
    "dk.rpc.action_server.RebootResponse\"\004\200\265\030"
    "\0000\001\022{\n\021SubscribeShutdown\0222.mavsdk.rpc.ac"
    "tion_server.SubscribeShutdownRequest\032*.m"
    "avsdk.rpc.action_server.ShutdownResponse"
    "\"\004\200\265\030\0000\001\022~\n\022SubscribeTerminate\0223.mavsdk."
    "rpc.action_server.SubscribeTerminateRequ"
    "est\032+.mavsdk.rpc.action_server.Terminate"
    "Response\"\004\200\265\030\0000\001\022|\n\017SetAllowTakeoff\0220.ma"
    "vsdk.rpc.action_server.SetAllowTakeoffRe"
    "quest\0321.mavsdk.rpc.action_server.SetAllo"
    "wTakeoffResponse\"\004\200\265\030\001\022m\n\nSetArmable\022+.m"
    "avsdk.rpc.action_server.SetArmableReques"
    "t\032,.mavsdk.rpc.action_server.SetArmableR"
    "esponse\"\004\200\265\030\001\022v\n\rSetDisarmable\022..mavsdk."
    "rpc.action_server.SetDisarmableRequest\032/"
    ".mavsdk.rpc.action_server.SetDisarmableR"
    "esponse\"\004\200\265\030\001\022\224\001\n\027SetAllowableFlightMode"
    "s\0228.mavsdk.rpc.action_server.SetAllowabl"
    "eFlightModesRequest\0329.mavsdk.rpc.action_"
    "server.SetAllowableFlightModesResponse\"\004"
    "\200\265\030\001\022\224\001\n\027GetAllowableFlightModes\0228.mavsd"
    "k.rpc.action_server.GetAllowableFlightMo"
    "desRequest\0329.mavsdk.rpc.action_server.Ge"
    "tAllowableFlightModesResponse\"\004\200\265\030\001B,\n\027i"
    "o.mavsdk.action_serverB\021ActionServerProt"
    "ob\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_action_5fserver_2faction_5fserver_2eproto_deps[1] =
    {
        &::descriptor_table_mavsdk_5foptions_2eproto,
};
static ::absl::once_flag descriptor_table_action_5fserver_2faction_5fserver_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_action_5fserver_2faction_5fserver_2eproto = {
    false,
    false,
    4609,
    descriptor_table_protodef_action_5fserver_2faction_5fserver_2eproto,
    "action_server/action_server.proto",
    &descriptor_table_action_5fserver_2faction_5fserver_2eproto_once,
    descriptor_table_action_5fserver_2faction_5fserver_2eproto_deps,
    1,
    27,
    schemas,
    file_default_instances,
    TableStruct_action_5fserver_2faction_5fserver_2eproto::offsets,
    file_level_metadata_action_5fserver_2faction_5fserver_2eproto,
    file_level_enum_descriptors_action_5fserver_2faction_5fserver_2eproto,
    file_level_service_descriptors_action_5fserver_2faction_5fserver_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_action_5fserver_2faction_5fserver_2eproto_getter() {
  return &descriptor_table_action_5fserver_2faction_5fserver_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_action_5fserver_2faction_5fserver_2eproto(&descriptor_table_action_5fserver_2faction_5fserver_2eproto);
namespace mavsdk {
namespace rpc {
namespace action_server {
const ::google::protobuf::EnumDescriptor* ActionServerResult_Result_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_action_5fserver_2faction_5fserver_2eproto);
  return file_level_enum_descriptors_action_5fserver_2faction_5fserver_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t ActionServerResult_Result_internal_data_[] = {
    851968u, 0u, };
bool ActionServerResult_Result_IsValid(int value) {
  return 0 <= value && value <= 12;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr ActionServerResult_Result ActionServerResult::RESULT_UNKNOWN;
constexpr ActionServerResult_Result ActionServerResult::RESULT_SUCCESS;
constexpr ActionServerResult_Result ActionServerResult::RESULT_NO_SYSTEM;
constexpr ActionServerResult_Result ActionServerResult::RESULT_CONNECTION_ERROR;
constexpr ActionServerResult_Result ActionServerResult::RESULT_BUSY;
constexpr ActionServerResult_Result ActionServerResult::RESULT_COMMAND_DENIED;
constexpr ActionServerResult_Result ActionServerResult::RESULT_COMMAND_DENIED_LANDED_STATE_UNKNOWN;
constexpr ActionServerResult_Result ActionServerResult::RESULT_COMMAND_DENIED_NOT_LANDED;
constexpr ActionServerResult_Result ActionServerResult::RESULT_TIMEOUT;
constexpr ActionServerResult_Result ActionServerResult::RESULT_VTOL_TRANSITION_SUPPORT_UNKNOWN;
constexpr ActionServerResult_Result ActionServerResult::RESULT_NO_VTOL_TRANSITION_SUPPORT;
constexpr ActionServerResult_Result ActionServerResult::RESULT_PARAMETER_ERROR;
constexpr ActionServerResult_Result ActionServerResult::RESULT_NEXT;
constexpr ActionServerResult_Result ActionServerResult::Result_MIN;
constexpr ActionServerResult_Result ActionServerResult::Result_MAX;
constexpr int ActionServerResult::Result_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* FlightMode_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_action_5fserver_2faction_5fserver_2eproto);
  return file_level_enum_descriptors_action_5fserver_2faction_5fserver_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t FlightMode_internal_data_[] = {
    917504u, 0u, };
bool FlightMode_IsValid(int value) {
  return 0 <= value && value <= 13;
}
// ===================================================================

class SetAllowTakeoffRequest::_Internal {
 public:
};

SetAllowTakeoffRequest::SetAllowTakeoffRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.action_server.SetAllowTakeoffRequest)
}
SetAllowTakeoffRequest::SetAllowTakeoffRequest(
    ::google::protobuf::Arena* arena, const SetAllowTakeoffRequest& from)
    : SetAllowTakeoffRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE SetAllowTakeoffRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetAllowTakeoffRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.allow_takeoff_ = {};
}
SetAllowTakeoffRequest::~SetAllowTakeoffRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.action_server.SetAllowTakeoffRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SetAllowTakeoffRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SetAllowTakeoffRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.action_server.SetAllowTakeoffRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.allow_takeoff_ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SetAllowTakeoffRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> SetAllowTakeoffRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_SetAllowTakeoffRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // bool allow_takeoff = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(SetAllowTakeoffRequest, _impl_.allow_takeoff_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(SetAllowTakeoffRequest, _impl_.allow_takeoff_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool allow_takeoff = 1;
    {PROTOBUF_FIELD_OFFSET(SetAllowTakeoffRequest, _impl_.allow_takeoff_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* SetAllowTakeoffRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.action_server.SetAllowTakeoffRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bool allow_takeoff = 1;
  if (this->_internal_allow_takeoff() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        1, this->_internal_allow_takeoff(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.action_server.SetAllowTakeoffRequest)
  return target;
}

::size_t SetAllowTakeoffRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.action_server.SetAllowTakeoffRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool allow_takeoff = 1;
  if (this->_internal_allow_takeoff() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SetAllowTakeoffRequest::_class_data_ = {
    SetAllowTakeoffRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SetAllowTakeoffRequest::GetClassData() const {
  return &_class_data_;
}

void SetAllowTakeoffRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SetAllowTakeoffRequest*>(&to_msg);
  auto& from = static_cast<const SetAllowTakeoffRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.action_server.SetAllowTakeoffRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_allow_takeoff() != 0) {
    _this->_internal_set_allow_takeoff(from._internal_allow_takeoff());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetAllowTakeoffRequest::CopyFrom(const SetAllowTakeoffRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.action_server.SetAllowTakeoffRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SetAllowTakeoffRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SetAllowTakeoffRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SetAllowTakeoffRequest::InternalSwap(SetAllowTakeoffRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.allow_takeoff_, other->_impl_.allow_takeoff_);
}

::google::protobuf::Metadata SetAllowTakeoffRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_action_5fserver_2faction_5fserver_2eproto_getter, &descriptor_table_action_5fserver_2faction_5fserver_2eproto_once,
      file_level_metadata_action_5fserver_2faction_5fserver_2eproto[0]);
}
// ===================================================================

class SetArmableRequest::_Internal {
 public:
};

SetArmableRequest::SetArmableRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.action_server.SetArmableRequest)
}
SetArmableRequest::SetArmableRequest(
    ::google::protobuf::Arena* arena, const SetArmableRequest& from)
    : SetArmableRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE SetArmableRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetArmableRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, armable_),
           0,
           offsetof(Impl_, force_armable_) -
               offsetof(Impl_, armable_) +
               sizeof(Impl_::force_armable_));
}
SetArmableRequest::~SetArmableRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.action_server.SetArmableRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SetArmableRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SetArmableRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.action_server.SetArmableRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.armable_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.force_armable_) -
      reinterpret_cast<char*>(&_impl_.armable_)) + sizeof(_impl_.force_armable_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SetArmableRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> SetArmableRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_SetArmableRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // bool force_armable = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(SetArmableRequest, _impl_.force_armable_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(SetArmableRequest, _impl_.force_armable_)}},
    // bool armable = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(SetArmableRequest, _impl_.armable_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(SetArmableRequest, _impl_.armable_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool armable = 1;
    {PROTOBUF_FIELD_OFFSET(SetArmableRequest, _impl_.armable_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bool force_armable = 2;
    {PROTOBUF_FIELD_OFFSET(SetArmableRequest, _impl_.force_armable_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* SetArmableRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.action_server.SetArmableRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bool armable = 1;
  if (this->_internal_armable() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        1, this->_internal_armable(), target);
  }

  // bool force_armable = 2;
  if (this->_internal_force_armable() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        2, this->_internal_force_armable(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.action_server.SetArmableRequest)
  return target;
}

::size_t SetArmableRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.action_server.SetArmableRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool armable = 1;
  if (this->_internal_armable() != 0) {
    total_size += 2;
  }

  // bool force_armable = 2;
  if (this->_internal_force_armable() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SetArmableRequest::_class_data_ = {
    SetArmableRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SetArmableRequest::GetClassData() const {
  return &_class_data_;
}

void SetArmableRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SetArmableRequest*>(&to_msg);
  auto& from = static_cast<const SetArmableRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.action_server.SetArmableRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_armable() != 0) {
    _this->_internal_set_armable(from._internal_armable());
  }
  if (from._internal_force_armable() != 0) {
    _this->_internal_set_force_armable(from._internal_force_armable());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetArmableRequest::CopyFrom(const SetArmableRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.action_server.SetArmableRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SetArmableRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SetArmableRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SetArmableRequest::InternalSwap(SetArmableRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SetArmableRequest, _impl_.force_armable_)
      + sizeof(SetArmableRequest::_impl_.force_armable_)
      - PROTOBUF_FIELD_OFFSET(SetArmableRequest, _impl_.armable_)>(
          reinterpret_cast<char*>(&_impl_.armable_),
          reinterpret_cast<char*>(&other->_impl_.armable_));
}

::google::protobuf::Metadata SetArmableRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_action_5fserver_2faction_5fserver_2eproto_getter, &descriptor_table_action_5fserver_2faction_5fserver_2eproto_once,
      file_level_metadata_action_5fserver_2faction_5fserver_2eproto[1]);
}
// ===================================================================

class SetDisarmableRequest::_Internal {
 public:
};

SetDisarmableRequest::SetDisarmableRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.action_server.SetDisarmableRequest)
}
SetDisarmableRequest::SetDisarmableRequest(
    ::google::protobuf::Arena* arena, const SetDisarmableRequest& from)
    : SetDisarmableRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE SetDisarmableRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetDisarmableRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, disarmable_),
           0,
           offsetof(Impl_, force_disarmable_) -
               offsetof(Impl_, disarmable_) +
               sizeof(Impl_::force_disarmable_));
}
SetDisarmableRequest::~SetDisarmableRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.action_server.SetDisarmableRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SetDisarmableRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SetDisarmableRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.action_server.SetDisarmableRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.disarmable_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.force_disarmable_) -
      reinterpret_cast<char*>(&_impl_.disarmable_)) + sizeof(_impl_.force_disarmable_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SetDisarmableRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> SetDisarmableRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_SetDisarmableRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // bool force_disarmable = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(SetDisarmableRequest, _impl_.force_disarmable_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(SetDisarmableRequest, _impl_.force_disarmable_)}},
    // bool disarmable = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(SetDisarmableRequest, _impl_.disarmable_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(SetDisarmableRequest, _impl_.disarmable_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool disarmable = 1;
    {PROTOBUF_FIELD_OFFSET(SetDisarmableRequest, _impl_.disarmable_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bool force_disarmable = 2;
    {PROTOBUF_FIELD_OFFSET(SetDisarmableRequest, _impl_.force_disarmable_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* SetDisarmableRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.action_server.SetDisarmableRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bool disarmable = 1;
  if (this->_internal_disarmable() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        1, this->_internal_disarmable(), target);
  }

  // bool force_disarmable = 2;
  if (this->_internal_force_disarmable() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        2, this->_internal_force_disarmable(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.action_server.SetDisarmableRequest)
  return target;
}

::size_t SetDisarmableRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.action_server.SetDisarmableRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool disarmable = 1;
  if (this->_internal_disarmable() != 0) {
    total_size += 2;
  }

  // bool force_disarmable = 2;
  if (this->_internal_force_disarmable() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SetDisarmableRequest::_class_data_ = {
    SetDisarmableRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SetDisarmableRequest::GetClassData() const {
  return &_class_data_;
}

void SetDisarmableRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SetDisarmableRequest*>(&to_msg);
  auto& from = static_cast<const SetDisarmableRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.action_server.SetDisarmableRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_disarmable() != 0) {
    _this->_internal_set_disarmable(from._internal_disarmable());
  }
  if (from._internal_force_disarmable() != 0) {
    _this->_internal_set_force_disarmable(from._internal_force_disarmable());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetDisarmableRequest::CopyFrom(const SetDisarmableRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.action_server.SetDisarmableRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SetDisarmableRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SetDisarmableRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SetDisarmableRequest::InternalSwap(SetDisarmableRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SetDisarmableRequest, _impl_.force_disarmable_)
      + sizeof(SetDisarmableRequest::_impl_.force_disarmable_)
      - PROTOBUF_FIELD_OFFSET(SetDisarmableRequest, _impl_.disarmable_)>(
          reinterpret_cast<char*>(&_impl_.disarmable_),
          reinterpret_cast<char*>(&other->_impl_.disarmable_));
}

::google::protobuf::Metadata SetDisarmableRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_action_5fserver_2faction_5fserver_2eproto_getter, &descriptor_table_action_5fserver_2faction_5fserver_2eproto_once,
      file_level_metadata_action_5fserver_2faction_5fserver_2eproto[2]);
}
// ===================================================================

class SetAllowableFlightModesRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<SetAllowableFlightModesRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SetAllowableFlightModesRequest, _impl_._has_bits_);
  static const ::mavsdk::rpc::action_server::AllowableFlightModes& flight_modes(const SetAllowableFlightModesRequest* msg);
  static void set_has_flight_modes(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::action_server::AllowableFlightModes& SetAllowableFlightModesRequest::_Internal::flight_modes(const SetAllowableFlightModesRequest* msg) {
  return *msg->_impl_.flight_modes_;
}
SetAllowableFlightModesRequest::SetAllowableFlightModesRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.action_server.SetAllowableFlightModesRequest)
}
inline PROTOBUF_NDEBUG_INLINE SetAllowableFlightModesRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SetAllowableFlightModesRequest::SetAllowableFlightModesRequest(
    ::google::protobuf::Arena* arena,
    const SetAllowableFlightModesRequest& from)
    : ::google::protobuf::Message(arena) {
  SetAllowableFlightModesRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.flight_modes_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::action_server::AllowableFlightModes>(arena, *from._impl_.flight_modes_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.action_server.SetAllowableFlightModesRequest)
}
inline PROTOBUF_NDEBUG_INLINE SetAllowableFlightModesRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetAllowableFlightModesRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.flight_modes_ = {};
}
SetAllowableFlightModesRequest::~SetAllowableFlightModesRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.action_server.SetAllowableFlightModesRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SetAllowableFlightModesRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.flight_modes_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SetAllowableFlightModesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.action_server.SetAllowableFlightModesRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.flight_modes_ != nullptr);
    _impl_.flight_modes_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SetAllowableFlightModesRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> SetAllowableFlightModesRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SetAllowableFlightModesRequest, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SetAllowableFlightModesRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.action_server.AllowableFlightModes flight_modes = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SetAllowableFlightModesRequest, _impl_.flight_modes_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.action_server.AllowableFlightModes flight_modes = 1;
    {PROTOBUF_FIELD_OFFSET(SetAllowableFlightModesRequest, _impl_.flight_modes_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::action_server::AllowableFlightModes>()},
  }}, {{
  }},
};

::uint8_t* SetAllowableFlightModesRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.action_server.SetAllowableFlightModesRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.action_server.AllowableFlightModes flight_modes = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::flight_modes(this),
        _Internal::flight_modes(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.action_server.SetAllowableFlightModesRequest)
  return target;
}

::size_t SetAllowableFlightModesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.action_server.SetAllowableFlightModesRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.action_server.AllowableFlightModes flight_modes = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.flight_modes_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SetAllowableFlightModesRequest::_class_data_ = {
    SetAllowableFlightModesRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SetAllowableFlightModesRequest::GetClassData() const {
  return &_class_data_;
}

void SetAllowableFlightModesRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SetAllowableFlightModesRequest*>(&to_msg);
  auto& from = static_cast<const SetAllowableFlightModesRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.action_server.SetAllowableFlightModesRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_flight_modes()->::mavsdk::rpc::action_server::AllowableFlightModes::MergeFrom(
        from._internal_flight_modes());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetAllowableFlightModesRequest::CopyFrom(const SetAllowableFlightModesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.action_server.SetAllowableFlightModesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SetAllowableFlightModesRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SetAllowableFlightModesRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SetAllowableFlightModesRequest::InternalSwap(SetAllowableFlightModesRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.flight_modes_, other->_impl_.flight_modes_);
}

::google::protobuf::Metadata SetAllowableFlightModesRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_action_5fserver_2faction_5fserver_2eproto_getter, &descriptor_table_action_5fserver_2faction_5fserver_2eproto_once,
      file_level_metadata_action_5fserver_2faction_5fserver_2eproto[3]);
}
// ===================================================================

class GetAllowableFlightModesRequest::_Internal {
 public:
};

GetAllowableFlightModesRequest::GetAllowableFlightModesRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.action_server.GetAllowableFlightModesRequest)
}
GetAllowableFlightModesRequest::GetAllowableFlightModesRequest(
    ::google::protobuf::Arena* arena,
    const GetAllowableFlightModesRequest& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  GetAllowableFlightModesRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.action_server.GetAllowableFlightModesRequest)
}









::google::protobuf::Metadata GetAllowableFlightModesRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_action_5fserver_2faction_5fserver_2eproto_getter, &descriptor_table_action_5fserver_2faction_5fserver_2eproto_once,
      file_level_metadata_action_5fserver_2faction_5fserver_2eproto[4]);
}
// ===================================================================

class SubscribeArmDisarmRequest::_Internal {
 public:
};

SubscribeArmDisarmRequest::SubscribeArmDisarmRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.action_server.SubscribeArmDisarmRequest)
}
SubscribeArmDisarmRequest::SubscribeArmDisarmRequest(
    ::google::protobuf::Arena* arena,
    const SubscribeArmDisarmRequest& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  SubscribeArmDisarmRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.action_server.SubscribeArmDisarmRequest)
}









::google::protobuf::Metadata SubscribeArmDisarmRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_action_5fserver_2faction_5fserver_2eproto_getter, &descriptor_table_action_5fserver_2faction_5fserver_2eproto_once,
      file_level_metadata_action_5fserver_2faction_5fserver_2eproto[5]);
}
// ===================================================================

class SubscribeFlightModeChangeRequest::_Internal {
 public:
};

SubscribeFlightModeChangeRequest::SubscribeFlightModeChangeRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.action_server.SubscribeFlightModeChangeRequest)
}
SubscribeFlightModeChangeRequest::SubscribeFlightModeChangeRequest(
    ::google::protobuf::Arena* arena,
    const SubscribeFlightModeChangeRequest& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  SubscribeFlightModeChangeRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.action_server.SubscribeFlightModeChangeRequest)
}









::google::protobuf::Metadata SubscribeFlightModeChangeRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_action_5fserver_2faction_5fserver_2eproto_getter, &descriptor_table_action_5fserver_2faction_5fserver_2eproto_once,
      file_level_metadata_action_5fserver_2faction_5fserver_2eproto[6]);
}
// ===================================================================

class SubscribeTakeoffRequest::_Internal {
 public:
};

SubscribeTakeoffRequest::SubscribeTakeoffRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.action_server.SubscribeTakeoffRequest)
}
SubscribeTakeoffRequest::SubscribeTakeoffRequest(
    ::google::protobuf::Arena* arena,
    const SubscribeTakeoffRequest& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  SubscribeTakeoffRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.action_server.SubscribeTakeoffRequest)
}









::google::protobuf::Metadata SubscribeTakeoffRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_action_5fserver_2faction_5fserver_2eproto_getter, &descriptor_table_action_5fserver_2faction_5fserver_2eproto_once,
      file_level_metadata_action_5fserver_2faction_5fserver_2eproto[7]);
}
// ===================================================================

class SubscribeLandRequest::_Internal {
 public:
};

SubscribeLandRequest::SubscribeLandRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.action_server.SubscribeLandRequest)
}
SubscribeLandRequest::SubscribeLandRequest(
    ::google::protobuf::Arena* arena,
    const SubscribeLandRequest& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  SubscribeLandRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.action_server.SubscribeLandRequest)
}









::google::protobuf::Metadata SubscribeLandRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_action_5fserver_2faction_5fserver_2eproto_getter, &descriptor_table_action_5fserver_2faction_5fserver_2eproto_once,
      file_level_metadata_action_5fserver_2faction_5fserver_2eproto[8]);
}
// ===================================================================

class SubscribeRebootRequest::_Internal {
 public:
};

SubscribeRebootRequest::SubscribeRebootRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.action_server.SubscribeRebootRequest)
}
SubscribeRebootRequest::SubscribeRebootRequest(
    ::google::protobuf::Arena* arena,
    const SubscribeRebootRequest& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  SubscribeRebootRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.action_server.SubscribeRebootRequest)
}









::google::protobuf::Metadata SubscribeRebootRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_action_5fserver_2faction_5fserver_2eproto_getter, &descriptor_table_action_5fserver_2faction_5fserver_2eproto_once,
      file_level_metadata_action_5fserver_2faction_5fserver_2eproto[9]);
}
// ===================================================================

class SubscribeShutdownRequest::_Internal {
 public:
};

SubscribeShutdownRequest::SubscribeShutdownRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.action_server.SubscribeShutdownRequest)
}
SubscribeShutdownRequest::SubscribeShutdownRequest(
    ::google::protobuf::Arena* arena,
    const SubscribeShutdownRequest& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  SubscribeShutdownRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.action_server.SubscribeShutdownRequest)
}









::google::protobuf::Metadata SubscribeShutdownRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_action_5fserver_2faction_5fserver_2eproto_getter, &descriptor_table_action_5fserver_2faction_5fserver_2eproto_once,
      file_level_metadata_action_5fserver_2faction_5fserver_2eproto[10]);
}
// ===================================================================

class SubscribeTerminateRequest::_Internal {
 public:
};

SubscribeTerminateRequest::SubscribeTerminateRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.action_server.SubscribeTerminateRequest)
}
SubscribeTerminateRequest::SubscribeTerminateRequest(
    ::google::protobuf::Arena* arena,
    const SubscribeTerminateRequest& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  SubscribeTerminateRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.action_server.SubscribeTerminateRequest)
}









::google::protobuf::Metadata SubscribeTerminateRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_action_5fserver_2faction_5fserver_2eproto_getter, &descriptor_table_action_5fserver_2faction_5fserver_2eproto_once,
      file_level_metadata_action_5fserver_2faction_5fserver_2eproto[11]);
}
// ===================================================================

class ArmDisarmResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<ArmDisarmResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ArmDisarmResponse, _impl_._has_bits_);
  static const ::mavsdk::rpc::action_server::ActionServerResult& action_server_result(const ArmDisarmResponse* msg);
  static void set_has_action_server_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::mavsdk::rpc::action_server::ArmDisarm& arm(const ArmDisarmResponse* msg);
  static void set_has_arm(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::mavsdk::rpc::action_server::ActionServerResult& ArmDisarmResponse::_Internal::action_server_result(const ArmDisarmResponse* msg) {
  return *msg->_impl_.action_server_result_;
}
const ::mavsdk::rpc::action_server::ArmDisarm& ArmDisarmResponse::_Internal::arm(const ArmDisarmResponse* msg) {
  return *msg->_impl_.arm_;
}
ArmDisarmResponse::ArmDisarmResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.action_server.ArmDisarmResponse)
}
inline PROTOBUF_NDEBUG_INLINE ArmDisarmResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

ArmDisarmResponse::ArmDisarmResponse(
    ::google::protobuf::Arena* arena,
    const ArmDisarmResponse& from)
    : ::google::protobuf::Message(arena) {
  ArmDisarmResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.action_server_result_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::action_server::ActionServerResult>(arena, *from._impl_.action_server_result_)
                : nullptr;
  _impl_.arm_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::mavsdk::rpc::action_server::ArmDisarm>(arena, *from._impl_.arm_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.action_server.ArmDisarmResponse)
}
inline PROTOBUF_NDEBUG_INLINE ArmDisarmResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ArmDisarmResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, action_server_result_),
           0,
           offsetof(Impl_, arm_) -
               offsetof(Impl_, action_server_result_) +
               sizeof(Impl_::arm_));
}
ArmDisarmResponse::~ArmDisarmResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.action_server.ArmDisarmResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ArmDisarmResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.action_server_result_;
  delete _impl_.arm_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ArmDisarmResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.action_server.ArmDisarmResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.action_server_result_ != nullptr);
      _impl_.action_server_result_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.arm_ != nullptr);
      _impl_.arm_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ArmDisarmResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> ArmDisarmResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ArmDisarmResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ArmDisarmResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.action_server.ArmDisarm arm = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(ArmDisarmResponse, _impl_.arm_)}},
    // .mavsdk.rpc.action_server.ActionServerResult action_server_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ArmDisarmResponse, _impl_.action_server_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.action_server.ActionServerResult action_server_result = 1;
    {PROTOBUF_FIELD_OFFSET(ArmDisarmResponse, _impl_.action_server_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .mavsdk.rpc.action_server.ArmDisarm arm = 2;
    {PROTOBUF_FIELD_OFFSET(ArmDisarmResponse, _impl_.arm_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::action_server::ActionServerResult>()},
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::action_server::ArmDisarm>()},
  }}, {{
  }},
};

::uint8_t* ArmDisarmResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.action_server.ArmDisarmResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.action_server.ActionServerResult action_server_result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::action_server_result(this),
        _Internal::action_server_result(this).GetCachedSize(), target, stream);
  }

  // .mavsdk.rpc.action_server.ArmDisarm arm = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::arm(this),
        _Internal::arm(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.action_server.ArmDisarmResponse)
  return target;
}

::size_t ArmDisarmResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.action_server.ArmDisarmResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .mavsdk.rpc.action_server.ActionServerResult action_server_result = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.action_server_result_);
    }

    // .mavsdk.rpc.action_server.ArmDisarm arm = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.arm_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ArmDisarmResponse::_class_data_ = {
    ArmDisarmResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ArmDisarmResponse::GetClassData() const {
  return &_class_data_;
}

void ArmDisarmResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ArmDisarmResponse*>(&to_msg);
  auto& from = static_cast<const ArmDisarmResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.action_server.ArmDisarmResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_action_server_result()->::mavsdk::rpc::action_server::ActionServerResult::MergeFrom(
          from._internal_action_server_result());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_arm()->::mavsdk::rpc::action_server::ArmDisarm::MergeFrom(
          from._internal_arm());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ArmDisarmResponse::CopyFrom(const ArmDisarmResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.action_server.ArmDisarmResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ArmDisarmResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ArmDisarmResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ArmDisarmResponse::InternalSwap(ArmDisarmResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ArmDisarmResponse, _impl_.arm_)
      + sizeof(ArmDisarmResponse::_impl_.arm_)
      - PROTOBUF_FIELD_OFFSET(ArmDisarmResponse, _impl_.action_server_result_)>(
          reinterpret_cast<char*>(&_impl_.action_server_result_),
          reinterpret_cast<char*>(&other->_impl_.action_server_result_));
}

::google::protobuf::Metadata ArmDisarmResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_action_5fserver_2faction_5fserver_2eproto_getter, &descriptor_table_action_5fserver_2faction_5fserver_2eproto_once,
      file_level_metadata_action_5fserver_2faction_5fserver_2eproto[12]);
}
// ===================================================================

class FlightModeChangeResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<FlightModeChangeResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(FlightModeChangeResponse, _impl_._has_bits_);
  static const ::mavsdk::rpc::action_server::ActionServerResult& action_server_result(const FlightModeChangeResponse* msg);
  static void set_has_action_server_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::action_server::ActionServerResult& FlightModeChangeResponse::_Internal::action_server_result(const FlightModeChangeResponse* msg) {
  return *msg->_impl_.action_server_result_;
}
FlightModeChangeResponse::FlightModeChangeResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.action_server.FlightModeChangeResponse)
}
inline PROTOBUF_NDEBUG_INLINE FlightModeChangeResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

FlightModeChangeResponse::FlightModeChangeResponse(
    ::google::protobuf::Arena* arena,
    const FlightModeChangeResponse& from)
    : ::google::protobuf::Message(arena) {
  FlightModeChangeResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.action_server_result_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::action_server::ActionServerResult>(arena, *from._impl_.action_server_result_)
                : nullptr;
  _impl_.flight_mode_ = from._impl_.flight_mode_;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.action_server.FlightModeChangeResponse)
}
inline PROTOBUF_NDEBUG_INLINE FlightModeChangeResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void FlightModeChangeResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, action_server_result_),
           0,
           offsetof(Impl_, flight_mode_) -
               offsetof(Impl_, action_server_result_) +
               sizeof(Impl_::flight_mode_));
}
FlightModeChangeResponse::~FlightModeChangeResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.action_server.FlightModeChangeResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void FlightModeChangeResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.action_server_result_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void FlightModeChangeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.action_server.FlightModeChangeResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.action_server_result_ != nullptr);
    _impl_.action_server_result_->Clear();
  }
  _impl_.flight_mode_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* FlightModeChangeResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> FlightModeChangeResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(FlightModeChangeResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_FlightModeChangeResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.action_server.FlightMode flight_mode = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(FlightModeChangeResponse, _impl_.flight_mode_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(FlightModeChangeResponse, _impl_.flight_mode_)}},
    // .mavsdk.rpc.action_server.ActionServerResult action_server_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(FlightModeChangeResponse, _impl_.action_server_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.action_server.ActionServerResult action_server_result = 1;
    {PROTOBUF_FIELD_OFFSET(FlightModeChangeResponse, _impl_.action_server_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .mavsdk.rpc.action_server.FlightMode flight_mode = 2;
    {PROTOBUF_FIELD_OFFSET(FlightModeChangeResponse, _impl_.flight_mode_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::action_server::ActionServerResult>()},
  }}, {{
  }},
};

::uint8_t* FlightModeChangeResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.action_server.FlightModeChangeResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.action_server.ActionServerResult action_server_result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::action_server_result(this),
        _Internal::action_server_result(this).GetCachedSize(), target, stream);
  }

  // .mavsdk.rpc.action_server.FlightMode flight_mode = 2;
  if (this->_internal_flight_mode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this->_internal_flight_mode(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.action_server.FlightModeChangeResponse)
  return target;
}

::size_t FlightModeChangeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.action_server.FlightModeChangeResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.action_server.ActionServerResult action_server_result = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.action_server_result_);
  }

  // .mavsdk.rpc.action_server.FlightMode flight_mode = 2;
  if (this->_internal_flight_mode() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_flight_mode());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData FlightModeChangeResponse::_class_data_ = {
    FlightModeChangeResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* FlightModeChangeResponse::GetClassData() const {
  return &_class_data_;
}

void FlightModeChangeResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<FlightModeChangeResponse*>(&to_msg);
  auto& from = static_cast<const FlightModeChangeResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.action_server.FlightModeChangeResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_action_server_result()->::mavsdk::rpc::action_server::ActionServerResult::MergeFrom(
        from._internal_action_server_result());
  }
  if (from._internal_flight_mode() != 0) {
    _this->_internal_set_flight_mode(from._internal_flight_mode());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void FlightModeChangeResponse::CopyFrom(const FlightModeChangeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.action_server.FlightModeChangeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool FlightModeChangeResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* FlightModeChangeResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void FlightModeChangeResponse::InternalSwap(FlightModeChangeResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FlightModeChangeResponse, _impl_.flight_mode_)
      + sizeof(FlightModeChangeResponse::_impl_.flight_mode_)
      - PROTOBUF_FIELD_OFFSET(FlightModeChangeResponse, _impl_.action_server_result_)>(
          reinterpret_cast<char*>(&_impl_.action_server_result_),
          reinterpret_cast<char*>(&other->_impl_.action_server_result_));
}

::google::protobuf::Metadata FlightModeChangeResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_action_5fserver_2faction_5fserver_2eproto_getter, &descriptor_table_action_5fserver_2faction_5fserver_2eproto_once,
      file_level_metadata_action_5fserver_2faction_5fserver_2eproto[13]);
}
// ===================================================================

class TakeoffResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<TakeoffResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TakeoffResponse, _impl_._has_bits_);
  static const ::mavsdk::rpc::action_server::ActionServerResult& action_server_result(const TakeoffResponse* msg);
  static void set_has_action_server_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::action_server::ActionServerResult& TakeoffResponse::_Internal::action_server_result(const TakeoffResponse* msg) {
  return *msg->_impl_.action_server_result_;
}
TakeoffResponse::TakeoffResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.action_server.TakeoffResponse)
}
inline PROTOBUF_NDEBUG_INLINE TakeoffResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

TakeoffResponse::TakeoffResponse(
    ::google::protobuf::Arena* arena,
    const TakeoffResponse& from)
    : ::google::protobuf::Message(arena) {
  TakeoffResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.action_server_result_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::action_server::ActionServerResult>(arena, *from._impl_.action_server_result_)
                : nullptr;
  _impl_.takeoff_ = from._impl_.takeoff_;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.action_server.TakeoffResponse)
}
inline PROTOBUF_NDEBUG_INLINE TakeoffResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void TakeoffResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, action_server_result_),
           0,
           offsetof(Impl_, takeoff_) -
               offsetof(Impl_, action_server_result_) +
               sizeof(Impl_::takeoff_));
}
TakeoffResponse::~TakeoffResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.action_server.TakeoffResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TakeoffResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.action_server_result_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void TakeoffResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.action_server.TakeoffResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.action_server_result_ != nullptr);
    _impl_.action_server_result_->Clear();
  }
  _impl_.takeoff_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TakeoffResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> TakeoffResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TakeoffResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_TakeoffResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // bool takeoff = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(TakeoffResponse, _impl_.takeoff_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(TakeoffResponse, _impl_.takeoff_)}},
    // .mavsdk.rpc.action_server.ActionServerResult action_server_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(TakeoffResponse, _impl_.action_server_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.action_server.ActionServerResult action_server_result = 1;
    {PROTOBUF_FIELD_OFFSET(TakeoffResponse, _impl_.action_server_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // bool takeoff = 2;
    {PROTOBUF_FIELD_OFFSET(TakeoffResponse, _impl_.takeoff_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::action_server::ActionServerResult>()},
  }}, {{
  }},
};

::uint8_t* TakeoffResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.action_server.TakeoffResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.action_server.ActionServerResult action_server_result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::action_server_result(this),
        _Internal::action_server_result(this).GetCachedSize(), target, stream);
  }

  // bool takeoff = 2;
  if (this->_internal_takeoff() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        2, this->_internal_takeoff(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.action_server.TakeoffResponse)
  return target;
}

::size_t TakeoffResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.action_server.TakeoffResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.action_server.ActionServerResult action_server_result = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.action_server_result_);
  }

  // bool takeoff = 2;
  if (this->_internal_takeoff() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TakeoffResponse::_class_data_ = {
    TakeoffResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* TakeoffResponse::GetClassData() const {
  return &_class_data_;
}

void TakeoffResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TakeoffResponse*>(&to_msg);
  auto& from = static_cast<const TakeoffResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.action_server.TakeoffResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_action_server_result()->::mavsdk::rpc::action_server::ActionServerResult::MergeFrom(
        from._internal_action_server_result());
  }
  if (from._internal_takeoff() != 0) {
    _this->_internal_set_takeoff(from._internal_takeoff());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TakeoffResponse::CopyFrom(const TakeoffResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.action_server.TakeoffResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TakeoffResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* TakeoffResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void TakeoffResponse::InternalSwap(TakeoffResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TakeoffResponse, _impl_.takeoff_)
      + sizeof(TakeoffResponse::_impl_.takeoff_)
      - PROTOBUF_FIELD_OFFSET(TakeoffResponse, _impl_.action_server_result_)>(
          reinterpret_cast<char*>(&_impl_.action_server_result_),
          reinterpret_cast<char*>(&other->_impl_.action_server_result_));
}

::google::protobuf::Metadata TakeoffResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_action_5fserver_2faction_5fserver_2eproto_getter, &descriptor_table_action_5fserver_2faction_5fserver_2eproto_once,
      file_level_metadata_action_5fserver_2faction_5fserver_2eproto[14]);
}
// ===================================================================

class LandResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<LandResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(LandResponse, _impl_._has_bits_);
  static const ::mavsdk::rpc::action_server::ActionServerResult& action_server_result(const LandResponse* msg);
  static void set_has_action_server_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::action_server::ActionServerResult& LandResponse::_Internal::action_server_result(const LandResponse* msg) {
  return *msg->_impl_.action_server_result_;
}
LandResponse::LandResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.action_server.LandResponse)
}
inline PROTOBUF_NDEBUG_INLINE LandResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

LandResponse::LandResponse(
    ::google::protobuf::Arena* arena,
    const LandResponse& from)
    : ::google::protobuf::Message(arena) {
  LandResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.action_server_result_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::action_server::ActionServerResult>(arena, *from._impl_.action_server_result_)
                : nullptr;
  _impl_.land_ = from._impl_.land_;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.action_server.LandResponse)
}
inline PROTOBUF_NDEBUG_INLINE LandResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void LandResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, action_server_result_),
           0,
           offsetof(Impl_, land_) -
               offsetof(Impl_, action_server_result_) +
               sizeof(Impl_::land_));
}
LandResponse::~LandResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.action_server.LandResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void LandResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.action_server_result_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void LandResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.action_server.LandResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.action_server_result_ != nullptr);
    _impl_.action_server_result_->Clear();
  }
  _impl_.land_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* LandResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> LandResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(LandResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_LandResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // bool land = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(LandResponse, _impl_.land_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(LandResponse, _impl_.land_)}},
    // .mavsdk.rpc.action_server.ActionServerResult action_server_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(LandResponse, _impl_.action_server_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.action_server.ActionServerResult action_server_result = 1;
    {PROTOBUF_FIELD_OFFSET(LandResponse, _impl_.action_server_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // bool land = 2;
    {PROTOBUF_FIELD_OFFSET(LandResponse, _impl_.land_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::action_server::ActionServerResult>()},
  }}, {{
  }},
};

::uint8_t* LandResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.action_server.LandResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.action_server.ActionServerResult action_server_result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::action_server_result(this),
        _Internal::action_server_result(this).GetCachedSize(), target, stream);
  }

  // bool land = 2;
  if (this->_internal_land() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        2, this->_internal_land(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.action_server.LandResponse)
  return target;
}

::size_t LandResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.action_server.LandResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.action_server.ActionServerResult action_server_result = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.action_server_result_);
  }

  // bool land = 2;
  if (this->_internal_land() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData LandResponse::_class_data_ = {
    LandResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* LandResponse::GetClassData() const {
  return &_class_data_;
}

void LandResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<LandResponse*>(&to_msg);
  auto& from = static_cast<const LandResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.action_server.LandResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_action_server_result()->::mavsdk::rpc::action_server::ActionServerResult::MergeFrom(
        from._internal_action_server_result());
  }
  if (from._internal_land() != 0) {
    _this->_internal_set_land(from._internal_land());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void LandResponse::CopyFrom(const LandResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.action_server.LandResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool LandResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* LandResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void LandResponse::InternalSwap(LandResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(LandResponse, _impl_.land_)
      + sizeof(LandResponse::_impl_.land_)
      - PROTOBUF_FIELD_OFFSET(LandResponse, _impl_.action_server_result_)>(
          reinterpret_cast<char*>(&_impl_.action_server_result_),
          reinterpret_cast<char*>(&other->_impl_.action_server_result_));
}

::google::protobuf::Metadata LandResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_action_5fserver_2faction_5fserver_2eproto_getter, &descriptor_table_action_5fserver_2faction_5fserver_2eproto_once,
      file_level_metadata_action_5fserver_2faction_5fserver_2eproto[15]);
}
// ===================================================================

class RebootResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<RebootResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(RebootResponse, _impl_._has_bits_);
  static const ::mavsdk::rpc::action_server::ActionServerResult& action_server_result(const RebootResponse* msg);
  static void set_has_action_server_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::action_server::ActionServerResult& RebootResponse::_Internal::action_server_result(const RebootResponse* msg) {
  return *msg->_impl_.action_server_result_;
}
RebootResponse::RebootResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.action_server.RebootResponse)
}
inline PROTOBUF_NDEBUG_INLINE RebootResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

RebootResponse::RebootResponse(
    ::google::protobuf::Arena* arena,
    const RebootResponse& from)
    : ::google::protobuf::Message(arena) {
  RebootResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.action_server_result_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::action_server::ActionServerResult>(arena, *from._impl_.action_server_result_)
                : nullptr;
  _impl_.reboot_ = from._impl_.reboot_;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.action_server.RebootResponse)
}
inline PROTOBUF_NDEBUG_INLINE RebootResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void RebootResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, action_server_result_),
           0,
           offsetof(Impl_, reboot_) -
               offsetof(Impl_, action_server_result_) +
               sizeof(Impl_::reboot_));
}
RebootResponse::~RebootResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.action_server.RebootResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RebootResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.action_server_result_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void RebootResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.action_server.RebootResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.action_server_result_ != nullptr);
    _impl_.action_server_result_->Clear();
  }
  _impl_.reboot_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RebootResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> RebootResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RebootResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_RebootResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // bool reboot = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(RebootResponse, _impl_.reboot_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(RebootResponse, _impl_.reboot_)}},
    // .mavsdk.rpc.action_server.ActionServerResult action_server_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RebootResponse, _impl_.action_server_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.action_server.ActionServerResult action_server_result = 1;
    {PROTOBUF_FIELD_OFFSET(RebootResponse, _impl_.action_server_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // bool reboot = 2;
    {PROTOBUF_FIELD_OFFSET(RebootResponse, _impl_.reboot_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::action_server::ActionServerResult>()},
  }}, {{
  }},
};

::uint8_t* RebootResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.action_server.RebootResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.action_server.ActionServerResult action_server_result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::action_server_result(this),
        _Internal::action_server_result(this).GetCachedSize(), target, stream);
  }

  // bool reboot = 2;
  if (this->_internal_reboot() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        2, this->_internal_reboot(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.action_server.RebootResponse)
  return target;
}

::size_t RebootResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.action_server.RebootResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.action_server.ActionServerResult action_server_result = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.action_server_result_);
  }

  // bool reboot = 2;
  if (this->_internal_reboot() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData RebootResponse::_class_data_ = {
    RebootResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* RebootResponse::GetClassData() const {
  return &_class_data_;
}

void RebootResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<RebootResponse*>(&to_msg);
  auto& from = static_cast<const RebootResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.action_server.RebootResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_action_server_result()->::mavsdk::rpc::action_server::ActionServerResult::MergeFrom(
        from._internal_action_server_result());
  }
  if (from._internal_reboot() != 0) {
    _this->_internal_set_reboot(from._internal_reboot());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RebootResponse::CopyFrom(const RebootResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.action_server.RebootResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RebootResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* RebootResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void RebootResponse::InternalSwap(RebootResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RebootResponse, _impl_.reboot_)
      + sizeof(RebootResponse::_impl_.reboot_)
      - PROTOBUF_FIELD_OFFSET(RebootResponse, _impl_.action_server_result_)>(
          reinterpret_cast<char*>(&_impl_.action_server_result_),
          reinterpret_cast<char*>(&other->_impl_.action_server_result_));
}

::google::protobuf::Metadata RebootResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_action_5fserver_2faction_5fserver_2eproto_getter, &descriptor_table_action_5fserver_2faction_5fserver_2eproto_once,
      file_level_metadata_action_5fserver_2faction_5fserver_2eproto[16]);
}
// ===================================================================

class ShutdownResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<ShutdownResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ShutdownResponse, _impl_._has_bits_);
  static const ::mavsdk::rpc::action_server::ActionServerResult& action_server_result(const ShutdownResponse* msg);
  static void set_has_action_server_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::action_server::ActionServerResult& ShutdownResponse::_Internal::action_server_result(const ShutdownResponse* msg) {
  return *msg->_impl_.action_server_result_;
}
ShutdownResponse::ShutdownResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.action_server.ShutdownResponse)
}
inline PROTOBUF_NDEBUG_INLINE ShutdownResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

ShutdownResponse::ShutdownResponse(
    ::google::protobuf::Arena* arena,
    const ShutdownResponse& from)
    : ::google::protobuf::Message(arena) {
  ShutdownResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.action_server_result_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::action_server::ActionServerResult>(arena, *from._impl_.action_server_result_)
                : nullptr;
  _impl_.shutdown_ = from._impl_.shutdown_;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.action_server.ShutdownResponse)
}
inline PROTOBUF_NDEBUG_INLINE ShutdownResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ShutdownResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, action_server_result_),
           0,
           offsetof(Impl_, shutdown_) -
               offsetof(Impl_, action_server_result_) +
               sizeof(Impl_::shutdown_));
}
ShutdownResponse::~ShutdownResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.action_server.ShutdownResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ShutdownResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.action_server_result_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ShutdownResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.action_server.ShutdownResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.action_server_result_ != nullptr);
    _impl_.action_server_result_->Clear();
  }
  _impl_.shutdown_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ShutdownResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> ShutdownResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ShutdownResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ShutdownResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // bool shutdown = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ShutdownResponse, _impl_.shutdown_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(ShutdownResponse, _impl_.shutdown_)}},
    // .mavsdk.rpc.action_server.ActionServerResult action_server_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ShutdownResponse, _impl_.action_server_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.action_server.ActionServerResult action_server_result = 1;
    {PROTOBUF_FIELD_OFFSET(ShutdownResponse, _impl_.action_server_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // bool shutdown = 2;
    {PROTOBUF_FIELD_OFFSET(ShutdownResponse, _impl_.shutdown_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::action_server::ActionServerResult>()},
  }}, {{
  }},
};

::uint8_t* ShutdownResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.action_server.ShutdownResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.action_server.ActionServerResult action_server_result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::action_server_result(this),
        _Internal::action_server_result(this).GetCachedSize(), target, stream);
  }

  // bool shutdown = 2;
  if (this->_internal_shutdown() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        2, this->_internal_shutdown(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.action_server.ShutdownResponse)
  return target;
}

::size_t ShutdownResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.action_server.ShutdownResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.action_server.ActionServerResult action_server_result = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.action_server_result_);
  }

  // bool shutdown = 2;
  if (this->_internal_shutdown() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ShutdownResponse::_class_data_ = {
    ShutdownResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ShutdownResponse::GetClassData() const {
  return &_class_data_;
}

void ShutdownResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ShutdownResponse*>(&to_msg);
  auto& from = static_cast<const ShutdownResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.action_server.ShutdownResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_action_server_result()->::mavsdk::rpc::action_server::ActionServerResult::MergeFrom(
        from._internal_action_server_result());
  }
  if (from._internal_shutdown() != 0) {
    _this->_internal_set_shutdown(from._internal_shutdown());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ShutdownResponse::CopyFrom(const ShutdownResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.action_server.ShutdownResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ShutdownResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ShutdownResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ShutdownResponse::InternalSwap(ShutdownResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ShutdownResponse, _impl_.shutdown_)
      + sizeof(ShutdownResponse::_impl_.shutdown_)
      - PROTOBUF_FIELD_OFFSET(ShutdownResponse, _impl_.action_server_result_)>(
          reinterpret_cast<char*>(&_impl_.action_server_result_),
          reinterpret_cast<char*>(&other->_impl_.action_server_result_));
}

::google::protobuf::Metadata ShutdownResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_action_5fserver_2faction_5fserver_2eproto_getter, &descriptor_table_action_5fserver_2faction_5fserver_2eproto_once,
      file_level_metadata_action_5fserver_2faction_5fserver_2eproto[17]);
}
// ===================================================================

class TerminateResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<TerminateResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TerminateResponse, _impl_._has_bits_);
  static const ::mavsdk::rpc::action_server::ActionServerResult& action_server_result(const TerminateResponse* msg);
  static void set_has_action_server_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::action_server::ActionServerResult& TerminateResponse::_Internal::action_server_result(const TerminateResponse* msg) {
  return *msg->_impl_.action_server_result_;
}
TerminateResponse::TerminateResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.action_server.TerminateResponse)
}
inline PROTOBUF_NDEBUG_INLINE TerminateResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

TerminateResponse::TerminateResponse(
    ::google::protobuf::Arena* arena,
    const TerminateResponse& from)
    : ::google::protobuf::Message(arena) {
  TerminateResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.action_server_result_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::action_server::ActionServerResult>(arena, *from._impl_.action_server_result_)
                : nullptr;
  _impl_.terminate_ = from._impl_.terminate_;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.action_server.TerminateResponse)
}
inline PROTOBUF_NDEBUG_INLINE TerminateResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void TerminateResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, action_server_result_),
           0,
           offsetof(Impl_, terminate_) -
               offsetof(Impl_, action_server_result_) +
               sizeof(Impl_::terminate_));
}
TerminateResponse::~TerminateResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.action_server.TerminateResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TerminateResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.action_server_result_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void TerminateResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.action_server.TerminateResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.action_server_result_ != nullptr);
    _impl_.action_server_result_->Clear();
  }
  _impl_.terminate_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TerminateResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> TerminateResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TerminateResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_TerminateResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // bool terminate = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(TerminateResponse, _impl_.terminate_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(TerminateResponse, _impl_.terminate_)}},
    // .mavsdk.rpc.action_server.ActionServerResult action_server_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(TerminateResponse, _impl_.action_server_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.action_server.ActionServerResult action_server_result = 1;
    {PROTOBUF_FIELD_OFFSET(TerminateResponse, _impl_.action_server_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // bool terminate = 2;
    {PROTOBUF_FIELD_OFFSET(TerminateResponse, _impl_.terminate_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::action_server::ActionServerResult>()},
  }}, {{
  }},
};

::uint8_t* TerminateResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.action_server.TerminateResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.action_server.ActionServerResult action_server_result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::action_server_result(this),
        _Internal::action_server_result(this).GetCachedSize(), target, stream);
  }

  // bool terminate = 2;
  if (this->_internal_terminate() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        2, this->_internal_terminate(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.action_server.TerminateResponse)
  return target;
}

::size_t TerminateResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.action_server.TerminateResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.action_server.ActionServerResult action_server_result = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.action_server_result_);
  }

  // bool terminate = 2;
  if (this->_internal_terminate() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TerminateResponse::_class_data_ = {
    TerminateResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* TerminateResponse::GetClassData() const {
  return &_class_data_;
}

void TerminateResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TerminateResponse*>(&to_msg);
  auto& from = static_cast<const TerminateResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.action_server.TerminateResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_action_server_result()->::mavsdk::rpc::action_server::ActionServerResult::MergeFrom(
        from._internal_action_server_result());
  }
  if (from._internal_terminate() != 0) {
    _this->_internal_set_terminate(from._internal_terminate());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TerminateResponse::CopyFrom(const TerminateResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.action_server.TerminateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TerminateResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* TerminateResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void TerminateResponse::InternalSwap(TerminateResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TerminateResponse, _impl_.terminate_)
      + sizeof(TerminateResponse::_impl_.terminate_)
      - PROTOBUF_FIELD_OFFSET(TerminateResponse, _impl_.action_server_result_)>(
          reinterpret_cast<char*>(&_impl_.action_server_result_),
          reinterpret_cast<char*>(&other->_impl_.action_server_result_));
}

::google::protobuf::Metadata TerminateResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_action_5fserver_2faction_5fserver_2eproto_getter, &descriptor_table_action_5fserver_2faction_5fserver_2eproto_once,
      file_level_metadata_action_5fserver_2faction_5fserver_2eproto[18]);
}
// ===================================================================

class SetArmableResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<SetArmableResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SetArmableResponse, _impl_._has_bits_);
  static const ::mavsdk::rpc::action_server::ActionServerResult& action_server_result(const SetArmableResponse* msg);
  static void set_has_action_server_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::action_server::ActionServerResult& SetArmableResponse::_Internal::action_server_result(const SetArmableResponse* msg) {
  return *msg->_impl_.action_server_result_;
}
SetArmableResponse::SetArmableResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.action_server.SetArmableResponse)
}
inline PROTOBUF_NDEBUG_INLINE SetArmableResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SetArmableResponse::SetArmableResponse(
    ::google::protobuf::Arena* arena,
    const SetArmableResponse& from)
    : ::google::protobuf::Message(arena) {
  SetArmableResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.action_server_result_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::action_server::ActionServerResult>(arena, *from._impl_.action_server_result_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.action_server.SetArmableResponse)
}
inline PROTOBUF_NDEBUG_INLINE SetArmableResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetArmableResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.action_server_result_ = {};
}
SetArmableResponse::~SetArmableResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.action_server.SetArmableResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SetArmableResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.action_server_result_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SetArmableResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.action_server.SetArmableResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.action_server_result_ != nullptr);
    _impl_.action_server_result_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SetArmableResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> SetArmableResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SetArmableResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SetArmableResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.action_server.ActionServerResult action_server_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SetArmableResponse, _impl_.action_server_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.action_server.ActionServerResult action_server_result = 1;
    {PROTOBUF_FIELD_OFFSET(SetArmableResponse, _impl_.action_server_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::action_server::ActionServerResult>()},
  }}, {{
  }},
};

::uint8_t* SetArmableResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.action_server.SetArmableResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.action_server.ActionServerResult action_server_result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::action_server_result(this),
        _Internal::action_server_result(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.action_server.SetArmableResponse)
  return target;
}

::size_t SetArmableResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.action_server.SetArmableResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.action_server.ActionServerResult action_server_result = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.action_server_result_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SetArmableResponse::_class_data_ = {
    SetArmableResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SetArmableResponse::GetClassData() const {
  return &_class_data_;
}

void SetArmableResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SetArmableResponse*>(&to_msg);
  auto& from = static_cast<const SetArmableResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.action_server.SetArmableResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_action_server_result()->::mavsdk::rpc::action_server::ActionServerResult::MergeFrom(
        from._internal_action_server_result());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetArmableResponse::CopyFrom(const SetArmableResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.action_server.SetArmableResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SetArmableResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SetArmableResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SetArmableResponse::InternalSwap(SetArmableResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.action_server_result_, other->_impl_.action_server_result_);
}

::google::protobuf::Metadata SetArmableResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_action_5fserver_2faction_5fserver_2eproto_getter, &descriptor_table_action_5fserver_2faction_5fserver_2eproto_once,
      file_level_metadata_action_5fserver_2faction_5fserver_2eproto[19]);
}
// ===================================================================

class SetDisarmableResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<SetDisarmableResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SetDisarmableResponse, _impl_._has_bits_);
  static const ::mavsdk::rpc::action_server::ActionServerResult& action_server_result(const SetDisarmableResponse* msg);
  static void set_has_action_server_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::action_server::ActionServerResult& SetDisarmableResponse::_Internal::action_server_result(const SetDisarmableResponse* msg) {
  return *msg->_impl_.action_server_result_;
}
SetDisarmableResponse::SetDisarmableResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.action_server.SetDisarmableResponse)
}
inline PROTOBUF_NDEBUG_INLINE SetDisarmableResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SetDisarmableResponse::SetDisarmableResponse(
    ::google::protobuf::Arena* arena,
    const SetDisarmableResponse& from)
    : ::google::protobuf::Message(arena) {
  SetDisarmableResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.action_server_result_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::action_server::ActionServerResult>(arena, *from._impl_.action_server_result_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.action_server.SetDisarmableResponse)
}
inline PROTOBUF_NDEBUG_INLINE SetDisarmableResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetDisarmableResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.action_server_result_ = {};
}
SetDisarmableResponse::~SetDisarmableResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.action_server.SetDisarmableResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SetDisarmableResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.action_server_result_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SetDisarmableResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.action_server.SetDisarmableResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.action_server_result_ != nullptr);
    _impl_.action_server_result_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SetDisarmableResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> SetDisarmableResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SetDisarmableResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SetDisarmableResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.action_server.ActionServerResult action_server_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SetDisarmableResponse, _impl_.action_server_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.action_server.ActionServerResult action_server_result = 1;
    {PROTOBUF_FIELD_OFFSET(SetDisarmableResponse, _impl_.action_server_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::action_server::ActionServerResult>()},
  }}, {{
  }},
};

::uint8_t* SetDisarmableResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.action_server.SetDisarmableResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.action_server.ActionServerResult action_server_result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::action_server_result(this),
        _Internal::action_server_result(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.action_server.SetDisarmableResponse)
  return target;
}

::size_t SetDisarmableResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.action_server.SetDisarmableResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.action_server.ActionServerResult action_server_result = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.action_server_result_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SetDisarmableResponse::_class_data_ = {
    SetDisarmableResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SetDisarmableResponse::GetClassData() const {
  return &_class_data_;
}

void SetDisarmableResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SetDisarmableResponse*>(&to_msg);
  auto& from = static_cast<const SetDisarmableResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.action_server.SetDisarmableResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_action_server_result()->::mavsdk::rpc::action_server::ActionServerResult::MergeFrom(
        from._internal_action_server_result());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetDisarmableResponse::CopyFrom(const SetDisarmableResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.action_server.SetDisarmableResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SetDisarmableResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SetDisarmableResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SetDisarmableResponse::InternalSwap(SetDisarmableResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.action_server_result_, other->_impl_.action_server_result_);
}

::google::protobuf::Metadata SetDisarmableResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_action_5fserver_2faction_5fserver_2eproto_getter, &descriptor_table_action_5fserver_2faction_5fserver_2eproto_once,
      file_level_metadata_action_5fserver_2faction_5fserver_2eproto[20]);
}
// ===================================================================

class SetAllowableFlightModesResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<SetAllowableFlightModesResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SetAllowableFlightModesResponse, _impl_._has_bits_);
  static const ::mavsdk::rpc::action_server::ActionServerResult& action_server_result(const SetAllowableFlightModesResponse* msg);
  static void set_has_action_server_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::action_server::ActionServerResult& SetAllowableFlightModesResponse::_Internal::action_server_result(const SetAllowableFlightModesResponse* msg) {
  return *msg->_impl_.action_server_result_;
}
SetAllowableFlightModesResponse::SetAllowableFlightModesResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.action_server.SetAllowableFlightModesResponse)
}
inline PROTOBUF_NDEBUG_INLINE SetAllowableFlightModesResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SetAllowableFlightModesResponse::SetAllowableFlightModesResponse(
    ::google::protobuf::Arena* arena,
    const SetAllowableFlightModesResponse& from)
    : ::google::protobuf::Message(arena) {
  SetAllowableFlightModesResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.action_server_result_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::action_server::ActionServerResult>(arena, *from._impl_.action_server_result_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.action_server.SetAllowableFlightModesResponse)
}
inline PROTOBUF_NDEBUG_INLINE SetAllowableFlightModesResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetAllowableFlightModesResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.action_server_result_ = {};
}
SetAllowableFlightModesResponse::~SetAllowableFlightModesResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.action_server.SetAllowableFlightModesResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SetAllowableFlightModesResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.action_server_result_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SetAllowableFlightModesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.action_server.SetAllowableFlightModesResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.action_server_result_ != nullptr);
    _impl_.action_server_result_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SetAllowableFlightModesResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> SetAllowableFlightModesResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SetAllowableFlightModesResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SetAllowableFlightModesResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.action_server.ActionServerResult action_server_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SetAllowableFlightModesResponse, _impl_.action_server_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.action_server.ActionServerResult action_server_result = 1;
    {PROTOBUF_FIELD_OFFSET(SetAllowableFlightModesResponse, _impl_.action_server_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::action_server::ActionServerResult>()},
  }}, {{
  }},
};

::uint8_t* SetAllowableFlightModesResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.action_server.SetAllowableFlightModesResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.action_server.ActionServerResult action_server_result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::action_server_result(this),
        _Internal::action_server_result(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.action_server.SetAllowableFlightModesResponse)
  return target;
}

::size_t SetAllowableFlightModesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.action_server.SetAllowableFlightModesResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.action_server.ActionServerResult action_server_result = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.action_server_result_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SetAllowableFlightModesResponse::_class_data_ = {
    SetAllowableFlightModesResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SetAllowableFlightModesResponse::GetClassData() const {
  return &_class_data_;
}

void SetAllowableFlightModesResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SetAllowableFlightModesResponse*>(&to_msg);
  auto& from = static_cast<const SetAllowableFlightModesResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.action_server.SetAllowableFlightModesResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_action_server_result()->::mavsdk::rpc::action_server::ActionServerResult::MergeFrom(
        from._internal_action_server_result());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetAllowableFlightModesResponse::CopyFrom(const SetAllowableFlightModesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.action_server.SetAllowableFlightModesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SetAllowableFlightModesResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SetAllowableFlightModesResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SetAllowableFlightModesResponse::InternalSwap(SetAllowableFlightModesResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.action_server_result_, other->_impl_.action_server_result_);
}

::google::protobuf::Metadata SetAllowableFlightModesResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_action_5fserver_2faction_5fserver_2eproto_getter, &descriptor_table_action_5fserver_2faction_5fserver_2eproto_once,
      file_level_metadata_action_5fserver_2faction_5fserver_2eproto[21]);
}
// ===================================================================

class SetAllowTakeoffResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<SetAllowTakeoffResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SetAllowTakeoffResponse, _impl_._has_bits_);
  static const ::mavsdk::rpc::action_server::ActionServerResult& action_server_result(const SetAllowTakeoffResponse* msg);
  static void set_has_action_server_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::action_server::ActionServerResult& SetAllowTakeoffResponse::_Internal::action_server_result(const SetAllowTakeoffResponse* msg) {
  return *msg->_impl_.action_server_result_;
}
SetAllowTakeoffResponse::SetAllowTakeoffResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.action_server.SetAllowTakeoffResponse)
}
inline PROTOBUF_NDEBUG_INLINE SetAllowTakeoffResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SetAllowTakeoffResponse::SetAllowTakeoffResponse(
    ::google::protobuf::Arena* arena,
    const SetAllowTakeoffResponse& from)
    : ::google::protobuf::Message(arena) {
  SetAllowTakeoffResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.action_server_result_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::action_server::ActionServerResult>(arena, *from._impl_.action_server_result_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.action_server.SetAllowTakeoffResponse)
}
inline PROTOBUF_NDEBUG_INLINE SetAllowTakeoffResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetAllowTakeoffResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.action_server_result_ = {};
}
SetAllowTakeoffResponse::~SetAllowTakeoffResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.action_server.SetAllowTakeoffResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SetAllowTakeoffResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.action_server_result_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SetAllowTakeoffResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.action_server.SetAllowTakeoffResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.action_server_result_ != nullptr);
    _impl_.action_server_result_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SetAllowTakeoffResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> SetAllowTakeoffResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SetAllowTakeoffResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SetAllowTakeoffResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.action_server.ActionServerResult action_server_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SetAllowTakeoffResponse, _impl_.action_server_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.action_server.ActionServerResult action_server_result = 1;
    {PROTOBUF_FIELD_OFFSET(SetAllowTakeoffResponse, _impl_.action_server_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::action_server::ActionServerResult>()},
  }}, {{
  }},
};

::uint8_t* SetAllowTakeoffResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.action_server.SetAllowTakeoffResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.action_server.ActionServerResult action_server_result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::action_server_result(this),
        _Internal::action_server_result(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.action_server.SetAllowTakeoffResponse)
  return target;
}

::size_t SetAllowTakeoffResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.action_server.SetAllowTakeoffResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.action_server.ActionServerResult action_server_result = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.action_server_result_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SetAllowTakeoffResponse::_class_data_ = {
    SetAllowTakeoffResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SetAllowTakeoffResponse::GetClassData() const {
  return &_class_data_;
}

void SetAllowTakeoffResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SetAllowTakeoffResponse*>(&to_msg);
  auto& from = static_cast<const SetAllowTakeoffResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.action_server.SetAllowTakeoffResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_action_server_result()->::mavsdk::rpc::action_server::ActionServerResult::MergeFrom(
        from._internal_action_server_result());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetAllowTakeoffResponse::CopyFrom(const SetAllowTakeoffResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.action_server.SetAllowTakeoffResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SetAllowTakeoffResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SetAllowTakeoffResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SetAllowTakeoffResponse::InternalSwap(SetAllowTakeoffResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.action_server_result_, other->_impl_.action_server_result_);
}

::google::protobuf::Metadata SetAllowTakeoffResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_action_5fserver_2faction_5fserver_2eproto_getter, &descriptor_table_action_5fserver_2faction_5fserver_2eproto_once,
      file_level_metadata_action_5fserver_2faction_5fserver_2eproto[22]);
}
// ===================================================================

class GetAllowableFlightModesResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<GetAllowableFlightModesResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(GetAllowableFlightModesResponse, _impl_._has_bits_);
  static const ::mavsdk::rpc::action_server::AllowableFlightModes& flight_modes(const GetAllowableFlightModesResponse* msg);
  static void set_has_flight_modes(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::action_server::AllowableFlightModes& GetAllowableFlightModesResponse::_Internal::flight_modes(const GetAllowableFlightModesResponse* msg) {
  return *msg->_impl_.flight_modes_;
}
GetAllowableFlightModesResponse::GetAllowableFlightModesResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.action_server.GetAllowableFlightModesResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetAllowableFlightModesResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

GetAllowableFlightModesResponse::GetAllowableFlightModesResponse(
    ::google::protobuf::Arena* arena,
    const GetAllowableFlightModesResponse& from)
    : ::google::protobuf::Message(arena) {
  GetAllowableFlightModesResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.flight_modes_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::action_server::AllowableFlightModes>(arena, *from._impl_.flight_modes_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.action_server.GetAllowableFlightModesResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetAllowableFlightModesResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void GetAllowableFlightModesResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.flight_modes_ = {};
}
GetAllowableFlightModesResponse::~GetAllowableFlightModesResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.action_server.GetAllowableFlightModesResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GetAllowableFlightModesResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.flight_modes_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void GetAllowableFlightModesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.action_server.GetAllowableFlightModesResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.flight_modes_ != nullptr);
    _impl_.flight_modes_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GetAllowableFlightModesResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> GetAllowableFlightModesResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetAllowableFlightModesResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_GetAllowableFlightModesResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.action_server.AllowableFlightModes flight_modes = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GetAllowableFlightModesResponse, _impl_.flight_modes_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.action_server.AllowableFlightModes flight_modes = 1;
    {PROTOBUF_FIELD_OFFSET(GetAllowableFlightModesResponse, _impl_.flight_modes_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::action_server::AllowableFlightModes>()},
  }}, {{
  }},
};

::uint8_t* GetAllowableFlightModesResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.action_server.GetAllowableFlightModesResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.action_server.AllowableFlightModes flight_modes = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::flight_modes(this),
        _Internal::flight_modes(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.action_server.GetAllowableFlightModesResponse)
  return target;
}

::size_t GetAllowableFlightModesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.action_server.GetAllowableFlightModesResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.action_server.AllowableFlightModes flight_modes = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.flight_modes_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData GetAllowableFlightModesResponse::_class_data_ = {
    GetAllowableFlightModesResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* GetAllowableFlightModesResponse::GetClassData() const {
  return &_class_data_;
}

void GetAllowableFlightModesResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<GetAllowableFlightModesResponse*>(&to_msg);
  auto& from = static_cast<const GetAllowableFlightModesResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.action_server.GetAllowableFlightModesResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_flight_modes()->::mavsdk::rpc::action_server::AllowableFlightModes::MergeFrom(
        from._internal_flight_modes());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetAllowableFlightModesResponse::CopyFrom(const GetAllowableFlightModesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.action_server.GetAllowableFlightModesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GetAllowableFlightModesResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* GetAllowableFlightModesResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void GetAllowableFlightModesResponse::InternalSwap(GetAllowableFlightModesResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.flight_modes_, other->_impl_.flight_modes_);
}

::google::protobuf::Metadata GetAllowableFlightModesResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_action_5fserver_2faction_5fserver_2eproto_getter, &descriptor_table_action_5fserver_2faction_5fserver_2eproto_once,
      file_level_metadata_action_5fserver_2faction_5fserver_2eproto[23]);
}
// ===================================================================

class AllowableFlightModes::_Internal {
 public:
};

AllowableFlightModes::AllowableFlightModes(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.action_server.AllowableFlightModes)
}
AllowableFlightModes::AllowableFlightModes(
    ::google::protobuf::Arena* arena, const AllowableFlightModes& from)
    : AllowableFlightModes(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE AllowableFlightModes::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void AllowableFlightModes::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, can_auto_mode_),
           0,
           offsetof(Impl_, can_stabilize_mode_) -
               offsetof(Impl_, can_auto_mode_) +
               sizeof(Impl_::can_stabilize_mode_));
}
AllowableFlightModes::~AllowableFlightModes() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.action_server.AllowableFlightModes)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AllowableFlightModes::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void AllowableFlightModes::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.action_server.AllowableFlightModes)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.can_auto_mode_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.can_stabilize_mode_) -
      reinterpret_cast<char*>(&_impl_.can_auto_mode_)) + sizeof(_impl_.can_stabilize_mode_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* AllowableFlightModes::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> AllowableFlightModes::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_AllowableFlightModes_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // bool can_auto_mode = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(AllowableFlightModes, _impl_.can_auto_mode_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(AllowableFlightModes, _impl_.can_auto_mode_)}},
    // bool can_guided_mode = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(AllowableFlightModes, _impl_.can_guided_mode_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(AllowableFlightModes, _impl_.can_guided_mode_)}},
    // bool can_stabilize_mode = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(AllowableFlightModes, _impl_.can_stabilize_mode_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(AllowableFlightModes, _impl_.can_stabilize_mode_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool can_auto_mode = 1;
    {PROTOBUF_FIELD_OFFSET(AllowableFlightModes, _impl_.can_auto_mode_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bool can_guided_mode = 2;
    {PROTOBUF_FIELD_OFFSET(AllowableFlightModes, _impl_.can_guided_mode_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bool can_stabilize_mode = 3;
    {PROTOBUF_FIELD_OFFSET(AllowableFlightModes, _impl_.can_stabilize_mode_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* AllowableFlightModes::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.action_server.AllowableFlightModes)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bool can_auto_mode = 1;
  if (this->_internal_can_auto_mode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        1, this->_internal_can_auto_mode(), target);
  }

  // bool can_guided_mode = 2;
  if (this->_internal_can_guided_mode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        2, this->_internal_can_guided_mode(), target);
  }

  // bool can_stabilize_mode = 3;
  if (this->_internal_can_stabilize_mode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        3, this->_internal_can_stabilize_mode(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.action_server.AllowableFlightModes)
  return target;
}

::size_t AllowableFlightModes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.action_server.AllowableFlightModes)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool can_auto_mode = 1;
  if (this->_internal_can_auto_mode() != 0) {
    total_size += 2;
  }

  // bool can_guided_mode = 2;
  if (this->_internal_can_guided_mode() != 0) {
    total_size += 2;
  }

  // bool can_stabilize_mode = 3;
  if (this->_internal_can_stabilize_mode() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData AllowableFlightModes::_class_data_ = {
    AllowableFlightModes::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* AllowableFlightModes::GetClassData() const {
  return &_class_data_;
}

void AllowableFlightModes::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<AllowableFlightModes*>(&to_msg);
  auto& from = static_cast<const AllowableFlightModes&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.action_server.AllowableFlightModes)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_can_auto_mode() != 0) {
    _this->_internal_set_can_auto_mode(from._internal_can_auto_mode());
  }
  if (from._internal_can_guided_mode() != 0) {
    _this->_internal_set_can_guided_mode(from._internal_can_guided_mode());
  }
  if (from._internal_can_stabilize_mode() != 0) {
    _this->_internal_set_can_stabilize_mode(from._internal_can_stabilize_mode());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AllowableFlightModes::CopyFrom(const AllowableFlightModes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.action_server.AllowableFlightModes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool AllowableFlightModes::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* AllowableFlightModes::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void AllowableFlightModes::InternalSwap(AllowableFlightModes* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AllowableFlightModes, _impl_.can_stabilize_mode_)
      + sizeof(AllowableFlightModes::_impl_.can_stabilize_mode_)
      - PROTOBUF_FIELD_OFFSET(AllowableFlightModes, _impl_.can_auto_mode_)>(
          reinterpret_cast<char*>(&_impl_.can_auto_mode_),
          reinterpret_cast<char*>(&other->_impl_.can_auto_mode_));
}

::google::protobuf::Metadata AllowableFlightModes::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_action_5fserver_2faction_5fserver_2eproto_getter, &descriptor_table_action_5fserver_2faction_5fserver_2eproto_once,
      file_level_metadata_action_5fserver_2faction_5fserver_2eproto[24]);
}
// ===================================================================

class ArmDisarm::_Internal {
 public:
};

ArmDisarm::ArmDisarm(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.action_server.ArmDisarm)
}
ArmDisarm::ArmDisarm(
    ::google::protobuf::Arena* arena, const ArmDisarm& from)
    : ArmDisarm(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE ArmDisarm::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ArmDisarm::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, arm_),
           0,
           offsetof(Impl_, force_) -
               offsetof(Impl_, arm_) +
               sizeof(Impl_::force_));
}
ArmDisarm::~ArmDisarm() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.action_server.ArmDisarm)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ArmDisarm::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ArmDisarm::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.action_server.ArmDisarm)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.arm_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.force_) -
      reinterpret_cast<char*>(&_impl_.arm_)) + sizeof(_impl_.force_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ArmDisarm::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> ArmDisarm::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_ArmDisarm_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // bool force = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ArmDisarm, _impl_.force_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(ArmDisarm, _impl_.force_)}},
    // bool arm = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ArmDisarm, _impl_.arm_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(ArmDisarm, _impl_.arm_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool arm = 1;
    {PROTOBUF_FIELD_OFFSET(ArmDisarm, _impl_.arm_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bool force = 2;
    {PROTOBUF_FIELD_OFFSET(ArmDisarm, _impl_.force_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* ArmDisarm::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.action_server.ArmDisarm)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bool arm = 1;
  if (this->_internal_arm() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        1, this->_internal_arm(), target);
  }

  // bool force = 2;
  if (this->_internal_force() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        2, this->_internal_force(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.action_server.ArmDisarm)
  return target;
}

::size_t ArmDisarm::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.action_server.ArmDisarm)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool arm = 1;
  if (this->_internal_arm() != 0) {
    total_size += 2;
  }

  // bool force = 2;
  if (this->_internal_force() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ArmDisarm::_class_data_ = {
    ArmDisarm::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ArmDisarm::GetClassData() const {
  return &_class_data_;
}

void ArmDisarm::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ArmDisarm*>(&to_msg);
  auto& from = static_cast<const ArmDisarm&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.action_server.ArmDisarm)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_arm() != 0) {
    _this->_internal_set_arm(from._internal_arm());
  }
  if (from._internal_force() != 0) {
    _this->_internal_set_force(from._internal_force());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ArmDisarm::CopyFrom(const ArmDisarm& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.action_server.ArmDisarm)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ArmDisarm::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ArmDisarm::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ArmDisarm::InternalSwap(ArmDisarm* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ArmDisarm, _impl_.force_)
      + sizeof(ArmDisarm::_impl_.force_)
      - PROTOBUF_FIELD_OFFSET(ArmDisarm, _impl_.arm_)>(
          reinterpret_cast<char*>(&_impl_.arm_),
          reinterpret_cast<char*>(&other->_impl_.arm_));
}

::google::protobuf::Metadata ArmDisarm::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_action_5fserver_2faction_5fserver_2eproto_getter, &descriptor_table_action_5fserver_2faction_5fserver_2eproto_once,
      file_level_metadata_action_5fserver_2faction_5fserver_2eproto[25]);
}
// ===================================================================

class ActionServerResult::_Internal {
 public:
};

ActionServerResult::ActionServerResult(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.action_server.ActionServerResult)
}
inline PROTOBUF_NDEBUG_INLINE ActionServerResult::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : result_str_(arena, from.result_str_),
        _cached_size_{0} {}

ActionServerResult::ActionServerResult(
    ::google::protobuf::Arena* arena,
    const ActionServerResult& from)
    : ::google::protobuf::Message(arena) {
  ActionServerResult* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.result_ = from._impl_.result_;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.action_server.ActionServerResult)
}
inline PROTOBUF_NDEBUG_INLINE ActionServerResult::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : result_str_(arena),
        _cached_size_{0} {}

inline void ActionServerResult::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.result_ = {};
}
ActionServerResult::~ActionServerResult() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.action_server.ActionServerResult)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ActionServerResult::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.result_str_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ActionServerResult::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.action_server.ActionServerResult)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.result_str_.ClearToEmpty();
  _impl_.result_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ActionServerResult::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 62, 2> ActionServerResult::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_ActionServerResult_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string result_str = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ActionServerResult, _impl_.result_str_)}},
    // .mavsdk.rpc.action_server.ActionServerResult.Result result = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ActionServerResult, _impl_.result_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(ActionServerResult, _impl_.result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.action_server.ActionServerResult.Result result = 1;
    {PROTOBUF_FIELD_OFFSET(ActionServerResult, _impl_.result_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string result_str = 2;
    {PROTOBUF_FIELD_OFFSET(ActionServerResult, _impl_.result_str_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\53\0\12\0\0\0\0\0"
    "mavsdk.rpc.action_server.ActionServerResult"
    "result_str"
  }},
};

::uint8_t* ActionServerResult::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.action_server.ActionServerResult)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .mavsdk.rpc.action_server.ActionServerResult.Result result = 1;
  if (this->_internal_result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_result(), target);
  }

  // string result_str = 2;
  if (!this->_internal_result_str().empty()) {
    const std::string& _s = this->_internal_result_str();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mavsdk.rpc.action_server.ActionServerResult.result_str");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.action_server.ActionServerResult)
  return target;
}

::size_t ActionServerResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.action_server.ActionServerResult)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string result_str = 2;
  if (!this->_internal_result_str().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_result_str());
  }

  // .mavsdk.rpc.action_server.ActionServerResult.Result result = 1;
  if (this->_internal_result() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_result());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ActionServerResult::_class_data_ = {
    ActionServerResult::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ActionServerResult::GetClassData() const {
  return &_class_data_;
}

void ActionServerResult::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ActionServerResult*>(&to_msg);
  auto& from = static_cast<const ActionServerResult&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.action_server.ActionServerResult)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_result_str().empty()) {
    _this->_internal_set_result_str(from._internal_result_str());
  }
  if (from._internal_result() != 0) {
    _this->_internal_set_result(from._internal_result());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ActionServerResult::CopyFrom(const ActionServerResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.action_server.ActionServerResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ActionServerResult::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ActionServerResult::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ActionServerResult::InternalSwap(ActionServerResult* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.result_str_, &other->_impl_.result_str_, arena);
  swap(_impl_.result_, other->_impl_.result_);
}

::google::protobuf::Metadata ActionServerResult::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_action_5fserver_2faction_5fserver_2eproto_getter, &descriptor_table_action_5fserver_2faction_5fserver_2eproto_once,
      file_level_metadata_action_5fserver_2faction_5fserver_2eproto[26]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace action_server
}  // namespace rpc
}  // namespace mavsdk
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"

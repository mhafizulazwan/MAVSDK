// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gripper/gripper.proto
// Protobuf C++ Version: 4.25.1

#ifndef GOOGLE_PROTOBUF_INCLUDED_gripper_2fgripper_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_gripper_2fgripper_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4025000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4025001 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_gripper_2fgripper_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_gripper_2fgripper_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_gripper_2fgripper_2eproto;
namespace mavsdk {
namespace rpc {
namespace gripper {
class GrabRequest;
struct GrabRequestDefaultTypeInternal;
extern GrabRequestDefaultTypeInternal _GrabRequest_default_instance_;
class GrabResponse;
struct GrabResponseDefaultTypeInternal;
extern GrabResponseDefaultTypeInternal _GrabResponse_default_instance_;
class GripperResult;
struct GripperResultDefaultTypeInternal;
extern GripperResultDefaultTypeInternal _GripperResult_default_instance_;
class ReleaseRequest;
struct ReleaseRequestDefaultTypeInternal;
extern ReleaseRequestDefaultTypeInternal _ReleaseRequest_default_instance_;
class ReleaseResponse;
struct ReleaseResponseDefaultTypeInternal;
extern ReleaseResponseDefaultTypeInternal _ReleaseResponse_default_instance_;
}  // namespace gripper
}  // namespace rpc
}  // namespace mavsdk
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace mavsdk {
namespace rpc {
namespace gripper {
enum GripperResult_Result : int {
  GripperResult_Result_RESULT_UNKNOWN = 0,
  GripperResult_Result_RESULT_SUCCESS = 1,
  GripperResult_Result_RESULT_NO_SYSTEM = 2,
  GripperResult_Result_RESULT_BUSY = 3,
  GripperResult_Result_RESULT_TIMEOUT = 4,
  GripperResult_Result_RESULT_UNSUPPORTED = 5,
  GripperResult_Result_RESULT_FAILED = 6,
  GripperResult_Result_GripperResult_Result_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  GripperResult_Result_GripperResult_Result_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool GripperResult_Result_IsValid(int value);
extern const uint32_t GripperResult_Result_internal_data_[];
constexpr GripperResult_Result GripperResult_Result_Result_MIN = static_cast<GripperResult_Result>(0);
constexpr GripperResult_Result GripperResult_Result_Result_MAX = static_cast<GripperResult_Result>(6);
constexpr int GripperResult_Result_Result_ARRAYSIZE = 6 + 1;
const ::google::protobuf::EnumDescriptor*
GripperResult_Result_descriptor();
template <typename T>
const std::string& GripperResult_Result_Name(T value) {
  static_assert(std::is_same<T, GripperResult_Result>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to Result_Name().");
  return GripperResult_Result_Name(static_cast<GripperResult_Result>(value));
}
template <>
inline const std::string& GripperResult_Result_Name(GripperResult_Result value) {
  return ::google::protobuf::internal::NameOfDenseEnum<GripperResult_Result_descriptor,
                                                 0, 6>(
      static_cast<int>(value));
}
inline bool GripperResult_Result_Parse(absl::string_view name, GripperResult_Result* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GripperResult_Result>(
      GripperResult_Result_descriptor(), name, value);
}
enum GripperAction : int {
  GRIPPER_ACTION_RELEASE = 0,
  GRIPPER_ACTION_GRAB = 1,
  GripperAction_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  GripperAction_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool GripperAction_IsValid(int value);
extern const uint32_t GripperAction_internal_data_[];
constexpr GripperAction GripperAction_MIN = static_cast<GripperAction>(0);
constexpr GripperAction GripperAction_MAX = static_cast<GripperAction>(1);
constexpr int GripperAction_ARRAYSIZE = 1 + 1;
const ::google::protobuf::EnumDescriptor*
GripperAction_descriptor();
template <typename T>
const std::string& GripperAction_Name(T value) {
  static_assert(std::is_same<T, GripperAction>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to GripperAction_Name().");
  return GripperAction_Name(static_cast<GripperAction>(value));
}
template <>
inline const std::string& GripperAction_Name(GripperAction value) {
  return ::google::protobuf::internal::NameOfDenseEnum<GripperAction_descriptor,
                                                 0, 1>(
      static_cast<int>(value));
}
inline bool GripperAction_Parse(absl::string_view name, GripperAction* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GripperAction>(
      GripperAction_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class ReleaseRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.gripper.ReleaseRequest) */ {
 public:
  inline ReleaseRequest() : ReleaseRequest(nullptr) {}
  ~ReleaseRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ReleaseRequest(::google::protobuf::internal::ConstantInitialized);

  inline ReleaseRequest(const ReleaseRequest& from)
      : ReleaseRequest(nullptr, from) {}
  ReleaseRequest(ReleaseRequest&& from) noexcept
    : ReleaseRequest() {
    *this = ::std::move(from);
  }

  inline ReleaseRequest& operator=(const ReleaseRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ReleaseRequest& operator=(ReleaseRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ReleaseRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ReleaseRequest* internal_default_instance() {
    return reinterpret_cast<const ReleaseRequest*>(
               &_ReleaseRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(ReleaseRequest& a, ReleaseRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(ReleaseRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ReleaseRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ReleaseRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ReleaseRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ReleaseRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const ReleaseRequest& from) {
    ReleaseRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ReleaseRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "mavsdk.rpc.gripper.ReleaseRequest";
  }
  protected:
  explicit ReleaseRequest(::google::protobuf::Arena* arena);
  ReleaseRequest(::google::protobuf::Arena* arena, const ReleaseRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInstanceFieldNumber = 1,
  };
  // uint32 instance = 1;
  void clear_instance() ;
  ::uint32_t instance() const;
  void set_instance(::uint32_t value);

  private:
  ::uint32_t _internal_instance() const;
  void _internal_set_instance(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.gripper.ReleaseRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::uint32_t instance_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_gripper_2fgripper_2eproto;
};// -------------------------------------------------------------------

class GripperResult final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.gripper.GripperResult) */ {
 public:
  inline GripperResult() : GripperResult(nullptr) {}
  ~GripperResult() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GripperResult(::google::protobuf::internal::ConstantInitialized);

  inline GripperResult(const GripperResult& from)
      : GripperResult(nullptr, from) {}
  GripperResult(GripperResult&& from) noexcept
    : GripperResult() {
    *this = ::std::move(from);
  }

  inline GripperResult& operator=(const GripperResult& from) {
    CopyFrom(from);
    return *this;
  }
  inline GripperResult& operator=(GripperResult&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GripperResult& default_instance() {
    return *internal_default_instance();
  }
  static inline const GripperResult* internal_default_instance() {
    return reinterpret_cast<const GripperResult*>(
               &_GripperResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(GripperResult& a, GripperResult& b) {
    a.Swap(&b);
  }
  inline void Swap(GripperResult* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GripperResult* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GripperResult* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GripperResult>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GripperResult& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GripperResult& from) {
    GripperResult::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GripperResult* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "mavsdk.rpc.gripper.GripperResult";
  }
  protected:
  explicit GripperResult(::google::protobuf::Arena* arena);
  GripperResult(::google::protobuf::Arena* arena, const GripperResult& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  using Result = GripperResult_Result;
  static constexpr Result RESULT_UNKNOWN = GripperResult_Result_RESULT_UNKNOWN;
  static constexpr Result RESULT_SUCCESS = GripperResult_Result_RESULT_SUCCESS;
  static constexpr Result RESULT_NO_SYSTEM = GripperResult_Result_RESULT_NO_SYSTEM;
  static constexpr Result RESULT_BUSY = GripperResult_Result_RESULT_BUSY;
  static constexpr Result RESULT_TIMEOUT = GripperResult_Result_RESULT_TIMEOUT;
  static constexpr Result RESULT_UNSUPPORTED = GripperResult_Result_RESULT_UNSUPPORTED;
  static constexpr Result RESULT_FAILED = GripperResult_Result_RESULT_FAILED;
  static inline bool Result_IsValid(int value) {
    return GripperResult_Result_IsValid(value);
  }
  static constexpr Result Result_MIN = GripperResult_Result_Result_MIN;
  static constexpr Result Result_MAX = GripperResult_Result_Result_MAX;
  static constexpr int Result_ARRAYSIZE = GripperResult_Result_Result_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* Result_descriptor() {
    return GripperResult_Result_descriptor();
  }
  template <typename T>
  static inline const std::string& Result_Name(T value) {
    return GripperResult_Result_Name(value);
  }
  static inline bool Result_Parse(absl::string_view name, Result* value) {
    return GripperResult_Result_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kResultStrFieldNumber = 2,
    kResultFieldNumber = 1,
  };
  // string result_str = 2;
  void clear_result_str() ;
  const std::string& result_str() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_result_str(Arg_&& arg, Args_... args);
  std::string* mutable_result_str();
  PROTOBUF_NODISCARD std::string* release_result_str();
  void set_allocated_result_str(std::string* value);

  private:
  const std::string& _internal_result_str() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_result_str(
      const std::string& value);
  std::string* _internal_mutable_result_str();

  public:
  // .mavsdk.rpc.gripper.GripperResult.Result result = 1;
  void clear_result() ;
  ::mavsdk::rpc::gripper::GripperResult_Result result() const;
  void set_result(::mavsdk::rpc::gripper::GripperResult_Result value);

  private:
  ::mavsdk::rpc::gripper::GripperResult_Result _internal_result() const;
  void _internal_set_result(::mavsdk::rpc::gripper::GripperResult_Result value);

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.gripper.GripperResult)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      51, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr result_str_;
    int result_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_gripper_2fgripper_2eproto;
};// -------------------------------------------------------------------

class GrabRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.gripper.GrabRequest) */ {
 public:
  inline GrabRequest() : GrabRequest(nullptr) {}
  ~GrabRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GrabRequest(::google::protobuf::internal::ConstantInitialized);

  inline GrabRequest(const GrabRequest& from)
      : GrabRequest(nullptr, from) {}
  GrabRequest(GrabRequest&& from) noexcept
    : GrabRequest() {
    *this = ::std::move(from);
  }

  inline GrabRequest& operator=(const GrabRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GrabRequest& operator=(GrabRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GrabRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GrabRequest* internal_default_instance() {
    return reinterpret_cast<const GrabRequest*>(
               &_GrabRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(GrabRequest& a, GrabRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GrabRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GrabRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GrabRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GrabRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GrabRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GrabRequest& from) {
    GrabRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GrabRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "mavsdk.rpc.gripper.GrabRequest";
  }
  protected:
  explicit GrabRequest(::google::protobuf::Arena* arena);
  GrabRequest(::google::protobuf::Arena* arena, const GrabRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInstanceFieldNumber = 1,
  };
  // uint32 instance = 1;
  void clear_instance() ;
  ::uint32_t instance() const;
  void set_instance(::uint32_t value);

  private:
  ::uint32_t _internal_instance() const;
  void _internal_set_instance(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.gripper.GrabRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::uint32_t instance_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_gripper_2fgripper_2eproto;
};// -------------------------------------------------------------------

class ReleaseResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.gripper.ReleaseResponse) */ {
 public:
  inline ReleaseResponse() : ReleaseResponse(nullptr) {}
  ~ReleaseResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ReleaseResponse(::google::protobuf::internal::ConstantInitialized);

  inline ReleaseResponse(const ReleaseResponse& from)
      : ReleaseResponse(nullptr, from) {}
  ReleaseResponse(ReleaseResponse&& from) noexcept
    : ReleaseResponse() {
    *this = ::std::move(from);
  }

  inline ReleaseResponse& operator=(const ReleaseResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ReleaseResponse& operator=(ReleaseResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ReleaseResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ReleaseResponse* internal_default_instance() {
    return reinterpret_cast<const ReleaseResponse*>(
               &_ReleaseResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(ReleaseResponse& a, ReleaseResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(ReleaseResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ReleaseResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ReleaseResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ReleaseResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ReleaseResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const ReleaseResponse& from) {
    ReleaseResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ReleaseResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "mavsdk.rpc.gripper.ReleaseResponse";
  }
  protected:
  explicit ReleaseResponse(::google::protobuf::Arena* arena);
  ReleaseResponse(::google::protobuf::Arena* arena, const ReleaseResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGripperResultFieldNumber = 1,
  };
  // .mavsdk.rpc.gripper.GripperResult gripper_result = 1;
  bool has_gripper_result() const;
  void clear_gripper_result() ;
  const ::mavsdk::rpc::gripper::GripperResult& gripper_result() const;
  PROTOBUF_NODISCARD ::mavsdk::rpc::gripper::GripperResult* release_gripper_result();
  ::mavsdk::rpc::gripper::GripperResult* mutable_gripper_result();
  void set_allocated_gripper_result(::mavsdk::rpc::gripper::GripperResult* value);
  void unsafe_arena_set_allocated_gripper_result(::mavsdk::rpc::gripper::GripperResult* value);
  ::mavsdk::rpc::gripper::GripperResult* unsafe_arena_release_gripper_result();

  private:
  const ::mavsdk::rpc::gripper::GripperResult& _internal_gripper_result() const;
  ::mavsdk::rpc::gripper::GripperResult* _internal_mutable_gripper_result();

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.gripper.ReleaseResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::mavsdk::rpc::gripper::GripperResult* gripper_result_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_gripper_2fgripper_2eproto;
};// -------------------------------------------------------------------

class GrabResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.gripper.GrabResponse) */ {
 public:
  inline GrabResponse() : GrabResponse(nullptr) {}
  ~GrabResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GrabResponse(::google::protobuf::internal::ConstantInitialized);

  inline GrabResponse(const GrabResponse& from)
      : GrabResponse(nullptr, from) {}
  GrabResponse(GrabResponse&& from) noexcept
    : GrabResponse() {
    *this = ::std::move(from);
  }

  inline GrabResponse& operator=(const GrabResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GrabResponse& operator=(GrabResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GrabResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GrabResponse* internal_default_instance() {
    return reinterpret_cast<const GrabResponse*>(
               &_GrabResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(GrabResponse& a, GrabResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GrabResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GrabResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GrabResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GrabResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GrabResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GrabResponse& from) {
    GrabResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GrabResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "mavsdk.rpc.gripper.GrabResponse";
  }
  protected:
  explicit GrabResponse(::google::protobuf::Arena* arena);
  GrabResponse(::google::protobuf::Arena* arena, const GrabResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGripperResultFieldNumber = 1,
  };
  // .mavsdk.rpc.gripper.GripperResult gripper_result = 1;
  bool has_gripper_result() const;
  void clear_gripper_result() ;
  const ::mavsdk::rpc::gripper::GripperResult& gripper_result() const;
  PROTOBUF_NODISCARD ::mavsdk::rpc::gripper::GripperResult* release_gripper_result();
  ::mavsdk::rpc::gripper::GripperResult* mutable_gripper_result();
  void set_allocated_gripper_result(::mavsdk::rpc::gripper::GripperResult* value);
  void unsafe_arena_set_allocated_gripper_result(::mavsdk::rpc::gripper::GripperResult* value);
  ::mavsdk::rpc::gripper::GripperResult* unsafe_arena_release_gripper_result();

  private:
  const ::mavsdk::rpc::gripper::GripperResult& _internal_gripper_result() const;
  ::mavsdk::rpc::gripper::GripperResult* _internal_mutable_gripper_result();

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.gripper.GrabResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::mavsdk::rpc::gripper::GripperResult* gripper_result_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_gripper_2fgripper_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// GrabRequest

// uint32 instance = 1;
inline void GrabRequest::clear_instance() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.instance_ = 0u;
}
inline ::uint32_t GrabRequest::instance() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.gripper.GrabRequest.instance)
  return _internal_instance();
}
inline void GrabRequest::set_instance(::uint32_t value) {
  _internal_set_instance(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.gripper.GrabRequest.instance)
}
inline ::uint32_t GrabRequest::_internal_instance() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.instance_;
}
inline void GrabRequest::_internal_set_instance(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.instance_ = value;
}

// -------------------------------------------------------------------

// GrabResponse

// .mavsdk.rpc.gripper.GripperResult gripper_result = 1;
inline bool GrabResponse::has_gripper_result() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.gripper_result_ != nullptr);
  return value;
}
inline void GrabResponse::clear_gripper_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.gripper_result_ != nullptr) _impl_.gripper_result_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::mavsdk::rpc::gripper::GripperResult& GrabResponse::_internal_gripper_result() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::mavsdk::rpc::gripper::GripperResult* p = _impl_.gripper_result_;
  return p != nullptr ? *p : reinterpret_cast<const ::mavsdk::rpc::gripper::GripperResult&>(::mavsdk::rpc::gripper::_GripperResult_default_instance_);
}
inline const ::mavsdk::rpc::gripper::GripperResult& GrabResponse::gripper_result() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.gripper.GrabResponse.gripper_result)
  return _internal_gripper_result();
}
inline void GrabResponse::unsafe_arena_set_allocated_gripper_result(::mavsdk::rpc::gripper::GripperResult* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.gripper_result_);
  }
  _impl_.gripper_result_ = reinterpret_cast<::mavsdk::rpc::gripper::GripperResult*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:mavsdk.rpc.gripper.GrabResponse.gripper_result)
}
inline ::mavsdk::rpc::gripper::GripperResult* GrabResponse::release_gripper_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::gripper::GripperResult* released = _impl_.gripper_result_;
  _impl_.gripper_result_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::mavsdk::rpc::gripper::GripperResult* GrabResponse::unsafe_arena_release_gripper_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:mavsdk.rpc.gripper.GrabResponse.gripper_result)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::gripper::GripperResult* temp = _impl_.gripper_result_;
  _impl_.gripper_result_ = nullptr;
  return temp;
}
inline ::mavsdk::rpc::gripper::GripperResult* GrabResponse::_internal_mutable_gripper_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.gripper_result_ == nullptr) {
    auto* p = CreateMaybeMessage<::mavsdk::rpc::gripper::GripperResult>(GetArena());
    _impl_.gripper_result_ = reinterpret_cast<::mavsdk::rpc::gripper::GripperResult*>(p);
  }
  return _impl_.gripper_result_;
}
inline ::mavsdk::rpc::gripper::GripperResult* GrabResponse::mutable_gripper_result() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::mavsdk::rpc::gripper::GripperResult* _msg = _internal_mutable_gripper_result();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.gripper.GrabResponse.gripper_result)
  return _msg;
}
inline void GrabResponse::set_allocated_gripper_result(::mavsdk::rpc::gripper::GripperResult* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::mavsdk::rpc::gripper::GripperResult*>(_impl_.gripper_result_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::mavsdk::rpc::gripper::GripperResult*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.gripper_result_ = reinterpret_cast<::mavsdk::rpc::gripper::GripperResult*>(value);
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.gripper.GrabResponse.gripper_result)
}

// -------------------------------------------------------------------

// ReleaseRequest

// uint32 instance = 1;
inline void ReleaseRequest::clear_instance() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.instance_ = 0u;
}
inline ::uint32_t ReleaseRequest::instance() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.gripper.ReleaseRequest.instance)
  return _internal_instance();
}
inline void ReleaseRequest::set_instance(::uint32_t value) {
  _internal_set_instance(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.gripper.ReleaseRequest.instance)
}
inline ::uint32_t ReleaseRequest::_internal_instance() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.instance_;
}
inline void ReleaseRequest::_internal_set_instance(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.instance_ = value;
}

// -------------------------------------------------------------------

// ReleaseResponse

// .mavsdk.rpc.gripper.GripperResult gripper_result = 1;
inline bool ReleaseResponse::has_gripper_result() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.gripper_result_ != nullptr);
  return value;
}
inline void ReleaseResponse::clear_gripper_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.gripper_result_ != nullptr) _impl_.gripper_result_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::mavsdk::rpc::gripper::GripperResult& ReleaseResponse::_internal_gripper_result() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::mavsdk::rpc::gripper::GripperResult* p = _impl_.gripper_result_;
  return p != nullptr ? *p : reinterpret_cast<const ::mavsdk::rpc::gripper::GripperResult&>(::mavsdk::rpc::gripper::_GripperResult_default_instance_);
}
inline const ::mavsdk::rpc::gripper::GripperResult& ReleaseResponse::gripper_result() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.gripper.ReleaseResponse.gripper_result)
  return _internal_gripper_result();
}
inline void ReleaseResponse::unsafe_arena_set_allocated_gripper_result(::mavsdk::rpc::gripper::GripperResult* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.gripper_result_);
  }
  _impl_.gripper_result_ = reinterpret_cast<::mavsdk::rpc::gripper::GripperResult*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:mavsdk.rpc.gripper.ReleaseResponse.gripper_result)
}
inline ::mavsdk::rpc::gripper::GripperResult* ReleaseResponse::release_gripper_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::gripper::GripperResult* released = _impl_.gripper_result_;
  _impl_.gripper_result_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::mavsdk::rpc::gripper::GripperResult* ReleaseResponse::unsafe_arena_release_gripper_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:mavsdk.rpc.gripper.ReleaseResponse.gripper_result)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::gripper::GripperResult* temp = _impl_.gripper_result_;
  _impl_.gripper_result_ = nullptr;
  return temp;
}
inline ::mavsdk::rpc::gripper::GripperResult* ReleaseResponse::_internal_mutable_gripper_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.gripper_result_ == nullptr) {
    auto* p = CreateMaybeMessage<::mavsdk::rpc::gripper::GripperResult>(GetArena());
    _impl_.gripper_result_ = reinterpret_cast<::mavsdk::rpc::gripper::GripperResult*>(p);
  }
  return _impl_.gripper_result_;
}
inline ::mavsdk::rpc::gripper::GripperResult* ReleaseResponse::mutable_gripper_result() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::mavsdk::rpc::gripper::GripperResult* _msg = _internal_mutable_gripper_result();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.gripper.ReleaseResponse.gripper_result)
  return _msg;
}
inline void ReleaseResponse::set_allocated_gripper_result(::mavsdk::rpc::gripper::GripperResult* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::mavsdk::rpc::gripper::GripperResult*>(_impl_.gripper_result_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::mavsdk::rpc::gripper::GripperResult*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.gripper_result_ = reinterpret_cast<::mavsdk::rpc::gripper::GripperResult*>(value);
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.gripper.ReleaseResponse.gripper_result)
}

// -------------------------------------------------------------------

// GripperResult

// .mavsdk.rpc.gripper.GripperResult.Result result = 1;
inline void GripperResult::clear_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.result_ = 0;
}
inline ::mavsdk::rpc::gripper::GripperResult_Result GripperResult::result() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.gripper.GripperResult.result)
  return _internal_result();
}
inline void GripperResult::set_result(::mavsdk::rpc::gripper::GripperResult_Result value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.gripper.GripperResult.result)
}
inline ::mavsdk::rpc::gripper::GripperResult_Result GripperResult::_internal_result() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::mavsdk::rpc::gripper::GripperResult_Result>(_impl_.result_);
}
inline void GripperResult::_internal_set_result(::mavsdk::rpc::gripper::GripperResult_Result value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.result_ = value;
}

// string result_str = 2;
inline void GripperResult::clear_result_str() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.result_str_.ClearToEmpty();
}
inline const std::string& GripperResult::result_str() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.gripper.GripperResult.result_str)
  return _internal_result_str();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GripperResult::set_result_str(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.result_str_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:mavsdk.rpc.gripper.GripperResult.result_str)
}
inline std::string* GripperResult::mutable_result_str() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_result_str();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.gripper.GripperResult.result_str)
  return _s;
}
inline const std::string& GripperResult::_internal_result_str() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.result_str_.Get();
}
inline void GripperResult::_internal_set_result_str(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.result_str_.Set(value, GetArena());
}
inline std::string* GripperResult::_internal_mutable_result_str() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.result_str_.Mutable( GetArena());
}
inline std::string* GripperResult::release_result_str() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:mavsdk.rpc.gripper.GripperResult.result_str)
  return _impl_.result_str_.Release();
}
inline void GripperResult::set_allocated_result_str(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.result_str_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.result_str_.IsDefault()) {
          _impl_.result_str_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.gripper.GripperResult.result_str)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace gripper
}  // namespace rpc
}  // namespace mavsdk


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::mavsdk::rpc::gripper::GripperResult_Result> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::mavsdk::rpc::gripper::GripperResult_Result>() {
  return ::mavsdk::rpc::gripper::GripperResult_Result_descriptor();
}
template <>
struct is_proto_enum<::mavsdk::rpc::gripper::GripperAction> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::mavsdk::rpc::gripper::GripperAction>() {
  return ::mavsdk::rpc::gripper::GripperAction_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_gripper_2fgripper_2eproto_2epb_2eh

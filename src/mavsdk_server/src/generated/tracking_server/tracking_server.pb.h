// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tracking_server/tracking_server.proto
// Protobuf C++ Version: 4.25.1

#ifndef GOOGLE_PROTOBUF_INCLUDED_tracking_5fserver_2ftracking_5fserver_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_tracking_5fserver_2ftracking_5fserver_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4025000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4025001 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
#include "mavsdk_options.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_tracking_5fserver_2ftracking_5fserver_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_tracking_5fserver_2ftracking_5fserver_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_tracking_5fserver_2ftracking_5fserver_2eproto;
namespace mavsdk {
namespace rpc {
namespace tracking_server {
class RespondTrackingOffCommandRequest;
struct RespondTrackingOffCommandRequestDefaultTypeInternal;
extern RespondTrackingOffCommandRequestDefaultTypeInternal _RespondTrackingOffCommandRequest_default_instance_;
class RespondTrackingOffCommandResponse;
struct RespondTrackingOffCommandResponseDefaultTypeInternal;
extern RespondTrackingOffCommandResponseDefaultTypeInternal _RespondTrackingOffCommandResponse_default_instance_;
class RespondTrackingPointCommandRequest;
struct RespondTrackingPointCommandRequestDefaultTypeInternal;
extern RespondTrackingPointCommandRequestDefaultTypeInternal _RespondTrackingPointCommandRequest_default_instance_;
class RespondTrackingPointCommandResponse;
struct RespondTrackingPointCommandResponseDefaultTypeInternal;
extern RespondTrackingPointCommandResponseDefaultTypeInternal _RespondTrackingPointCommandResponse_default_instance_;
class RespondTrackingRectangleCommandRequest;
struct RespondTrackingRectangleCommandRequestDefaultTypeInternal;
extern RespondTrackingRectangleCommandRequestDefaultTypeInternal _RespondTrackingRectangleCommandRequest_default_instance_;
class RespondTrackingRectangleCommandResponse;
struct RespondTrackingRectangleCommandResponseDefaultTypeInternal;
extern RespondTrackingRectangleCommandResponseDefaultTypeInternal _RespondTrackingRectangleCommandResponse_default_instance_;
class SetTrackingOffStatusRequest;
struct SetTrackingOffStatusRequestDefaultTypeInternal;
extern SetTrackingOffStatusRequestDefaultTypeInternal _SetTrackingOffStatusRequest_default_instance_;
class SetTrackingOffStatusResponse;
struct SetTrackingOffStatusResponseDefaultTypeInternal;
extern SetTrackingOffStatusResponseDefaultTypeInternal _SetTrackingOffStatusResponse_default_instance_;
class SetTrackingPointStatusRequest;
struct SetTrackingPointStatusRequestDefaultTypeInternal;
extern SetTrackingPointStatusRequestDefaultTypeInternal _SetTrackingPointStatusRequest_default_instance_;
class SetTrackingPointStatusResponse;
struct SetTrackingPointStatusResponseDefaultTypeInternal;
extern SetTrackingPointStatusResponseDefaultTypeInternal _SetTrackingPointStatusResponse_default_instance_;
class SetTrackingRectangleStatusRequest;
struct SetTrackingRectangleStatusRequestDefaultTypeInternal;
extern SetTrackingRectangleStatusRequestDefaultTypeInternal _SetTrackingRectangleStatusRequest_default_instance_;
class SetTrackingRectangleStatusResponse;
struct SetTrackingRectangleStatusResponseDefaultTypeInternal;
extern SetTrackingRectangleStatusResponseDefaultTypeInternal _SetTrackingRectangleStatusResponse_default_instance_;
class SubscribeTrackingOffCommandRequest;
struct SubscribeTrackingOffCommandRequestDefaultTypeInternal;
extern SubscribeTrackingOffCommandRequestDefaultTypeInternal _SubscribeTrackingOffCommandRequest_default_instance_;
class SubscribeTrackingPointCommandRequest;
struct SubscribeTrackingPointCommandRequestDefaultTypeInternal;
extern SubscribeTrackingPointCommandRequestDefaultTypeInternal _SubscribeTrackingPointCommandRequest_default_instance_;
class SubscribeTrackingRectangleCommandRequest;
struct SubscribeTrackingRectangleCommandRequestDefaultTypeInternal;
extern SubscribeTrackingRectangleCommandRequestDefaultTypeInternal _SubscribeTrackingRectangleCommandRequest_default_instance_;
class TrackPoint;
struct TrackPointDefaultTypeInternal;
extern TrackPointDefaultTypeInternal _TrackPoint_default_instance_;
class TrackRectangle;
struct TrackRectangleDefaultTypeInternal;
extern TrackRectangleDefaultTypeInternal _TrackRectangle_default_instance_;
class TrackingOffCommandResponse;
struct TrackingOffCommandResponseDefaultTypeInternal;
extern TrackingOffCommandResponseDefaultTypeInternal _TrackingOffCommandResponse_default_instance_;
class TrackingPointCommandResponse;
struct TrackingPointCommandResponseDefaultTypeInternal;
extern TrackingPointCommandResponseDefaultTypeInternal _TrackingPointCommandResponse_default_instance_;
class TrackingRectangleCommandResponse;
struct TrackingRectangleCommandResponseDefaultTypeInternal;
extern TrackingRectangleCommandResponseDefaultTypeInternal _TrackingRectangleCommandResponse_default_instance_;
class TrackingServerResult;
struct TrackingServerResultDefaultTypeInternal;
extern TrackingServerResultDefaultTypeInternal _TrackingServerResult_default_instance_;
}  // namespace tracking_server
}  // namespace rpc
}  // namespace mavsdk
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace mavsdk {
namespace rpc {
namespace tracking_server {
enum TrackingServerResult_Result : int {
  TrackingServerResult_Result_RESULT_UNKNOWN = 0,
  TrackingServerResult_Result_RESULT_SUCCESS = 1,
  TrackingServerResult_Result_RESULT_NO_SYSTEM = 2,
  TrackingServerResult_Result_RESULT_CONNECTION_ERROR = 3,
  TrackingServerResult_Result_TrackingServerResult_Result_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  TrackingServerResult_Result_TrackingServerResult_Result_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool TrackingServerResult_Result_IsValid(int value);
extern const uint32_t TrackingServerResult_Result_internal_data_[];
constexpr TrackingServerResult_Result TrackingServerResult_Result_Result_MIN = static_cast<TrackingServerResult_Result>(0);
constexpr TrackingServerResult_Result TrackingServerResult_Result_Result_MAX = static_cast<TrackingServerResult_Result>(3);
constexpr int TrackingServerResult_Result_Result_ARRAYSIZE = 3 + 1;
const ::google::protobuf::EnumDescriptor*
TrackingServerResult_Result_descriptor();
template <typename T>
const std::string& TrackingServerResult_Result_Name(T value) {
  static_assert(std::is_same<T, TrackingServerResult_Result>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to Result_Name().");
  return TrackingServerResult_Result_Name(static_cast<TrackingServerResult_Result>(value));
}
template <>
inline const std::string& TrackingServerResult_Result_Name(TrackingServerResult_Result value) {
  return ::google::protobuf::internal::NameOfDenseEnum<TrackingServerResult_Result_descriptor,
                                                 0, 3>(
      static_cast<int>(value));
}
inline bool TrackingServerResult_Result_Parse(absl::string_view name, TrackingServerResult_Result* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TrackingServerResult_Result>(
      TrackingServerResult_Result_descriptor(), name, value);
}
enum CommandAnswer : int {
  COMMAND_ANSWER_ACCEPTED = 0,
  COMMAND_ANSWER_TEMPORARILY_REJECTED = 1,
  COMMAND_ANSWER_DENIED = 2,
  COMMAND_ANSWER_UNSUPPORTED = 3,
  COMMAND_ANSWER_FAILED = 4,
  CommandAnswer_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  CommandAnswer_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool CommandAnswer_IsValid(int value);
extern const uint32_t CommandAnswer_internal_data_[];
constexpr CommandAnswer CommandAnswer_MIN = static_cast<CommandAnswer>(0);
constexpr CommandAnswer CommandAnswer_MAX = static_cast<CommandAnswer>(4);
constexpr int CommandAnswer_ARRAYSIZE = 4 + 1;
const ::google::protobuf::EnumDescriptor*
CommandAnswer_descriptor();
template <typename T>
const std::string& CommandAnswer_Name(T value) {
  static_assert(std::is_same<T, CommandAnswer>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to CommandAnswer_Name().");
  return CommandAnswer_Name(static_cast<CommandAnswer>(value));
}
template <>
inline const std::string& CommandAnswer_Name(CommandAnswer value) {
  return ::google::protobuf::internal::NameOfDenseEnum<CommandAnswer_descriptor,
                                                 0, 4>(
      static_cast<int>(value));
}
inline bool CommandAnswer_Parse(absl::string_view name, CommandAnswer* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CommandAnswer>(
      CommandAnswer_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class TrackingServerResult final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.tracking_server.TrackingServerResult) */ {
 public:
  inline TrackingServerResult() : TrackingServerResult(nullptr) {}
  ~TrackingServerResult() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR TrackingServerResult(::google::protobuf::internal::ConstantInitialized);

  inline TrackingServerResult(const TrackingServerResult& from)
      : TrackingServerResult(nullptr, from) {}
  TrackingServerResult(TrackingServerResult&& from) noexcept
    : TrackingServerResult() {
    *this = ::std::move(from);
  }

  inline TrackingServerResult& operator=(const TrackingServerResult& from) {
    CopyFrom(from);
    return *this;
  }
  inline TrackingServerResult& operator=(TrackingServerResult&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TrackingServerResult& default_instance() {
    return *internal_default_instance();
  }
  static inline const TrackingServerResult* internal_default_instance() {
    return reinterpret_cast<const TrackingServerResult*>(
               &_TrackingServerResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  friend void swap(TrackingServerResult& a, TrackingServerResult& b) {
    a.Swap(&b);
  }
  inline void Swap(TrackingServerResult* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TrackingServerResult* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TrackingServerResult* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<TrackingServerResult>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TrackingServerResult& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const TrackingServerResult& from) {
    TrackingServerResult::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TrackingServerResult* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "mavsdk.rpc.tracking_server.TrackingServerResult";
  }
  protected:
  explicit TrackingServerResult(::google::protobuf::Arena* arena);
  TrackingServerResult(::google::protobuf::Arena* arena, const TrackingServerResult& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  using Result = TrackingServerResult_Result;
  static constexpr Result RESULT_UNKNOWN = TrackingServerResult_Result_RESULT_UNKNOWN;
  static constexpr Result RESULT_SUCCESS = TrackingServerResult_Result_RESULT_SUCCESS;
  static constexpr Result RESULT_NO_SYSTEM = TrackingServerResult_Result_RESULT_NO_SYSTEM;
  static constexpr Result RESULT_CONNECTION_ERROR = TrackingServerResult_Result_RESULT_CONNECTION_ERROR;
  static inline bool Result_IsValid(int value) {
    return TrackingServerResult_Result_IsValid(value);
  }
  static constexpr Result Result_MIN = TrackingServerResult_Result_Result_MIN;
  static constexpr Result Result_MAX = TrackingServerResult_Result_Result_MAX;
  static constexpr int Result_ARRAYSIZE = TrackingServerResult_Result_Result_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* Result_descriptor() {
    return TrackingServerResult_Result_descriptor();
  }
  template <typename T>
  static inline const std::string& Result_Name(T value) {
    return TrackingServerResult_Result_Name(value);
  }
  static inline bool Result_Parse(absl::string_view name, Result* value) {
    return TrackingServerResult_Result_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kResultStrFieldNumber = 2,
    kResultFieldNumber = 1,
  };
  // string result_str = 2;
  void clear_result_str() ;
  const std::string& result_str() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_result_str(Arg_&& arg, Args_... args);
  std::string* mutable_result_str();
  PROTOBUF_NODISCARD std::string* release_result_str();
  void set_allocated_result_str(std::string* value);

  private:
  const std::string& _internal_result_str() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_result_str(
      const std::string& value);
  std::string* _internal_mutable_result_str();

  public:
  // .mavsdk.rpc.tracking_server.TrackingServerResult.Result result = 1;
  void clear_result() ;
  ::mavsdk::rpc::tracking_server::TrackingServerResult_Result result() const;
  void set_result(::mavsdk::rpc::tracking_server::TrackingServerResult_Result value);

  private:
  ::mavsdk::rpc::tracking_server::TrackingServerResult_Result _internal_result() const;
  void _internal_set_result(::mavsdk::rpc::tracking_server::TrackingServerResult_Result value);

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.tracking_server.TrackingServerResult)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      66, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr result_str_;
    int result_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tracking_5fserver_2ftracking_5fserver_2eproto;
};// -------------------------------------------------------------------

class TrackingOffCommandResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.tracking_server.TrackingOffCommandResponse) */ {
 public:
  inline TrackingOffCommandResponse() : TrackingOffCommandResponse(nullptr) {}
  ~TrackingOffCommandResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR TrackingOffCommandResponse(::google::protobuf::internal::ConstantInitialized);

  inline TrackingOffCommandResponse(const TrackingOffCommandResponse& from)
      : TrackingOffCommandResponse(nullptr, from) {}
  TrackingOffCommandResponse(TrackingOffCommandResponse&& from) noexcept
    : TrackingOffCommandResponse() {
    *this = ::std::move(from);
  }

  inline TrackingOffCommandResponse& operator=(const TrackingOffCommandResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline TrackingOffCommandResponse& operator=(TrackingOffCommandResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TrackingOffCommandResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const TrackingOffCommandResponse* internal_default_instance() {
    return reinterpret_cast<const TrackingOffCommandResponse*>(
               &_TrackingOffCommandResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(TrackingOffCommandResponse& a, TrackingOffCommandResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(TrackingOffCommandResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TrackingOffCommandResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TrackingOffCommandResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<TrackingOffCommandResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TrackingOffCommandResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const TrackingOffCommandResponse& from) {
    TrackingOffCommandResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TrackingOffCommandResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "mavsdk.rpc.tracking_server.TrackingOffCommandResponse";
  }
  protected:
  explicit TrackingOffCommandResponse(::google::protobuf::Arena* arena);
  TrackingOffCommandResponse(::google::protobuf::Arena* arena, const TrackingOffCommandResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDummyFieldNumber = 1,
  };
  // int32 dummy = 1;
  void clear_dummy() ;
  ::int32_t dummy() const;
  void set_dummy(::int32_t value);

  private:
  ::int32_t _internal_dummy() const;
  void _internal_set_dummy(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.tracking_server.TrackingOffCommandResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::int32_t dummy_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tracking_5fserver_2ftracking_5fserver_2eproto;
};// -------------------------------------------------------------------

class TrackRectangle final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.tracking_server.TrackRectangle) */ {
 public:
  inline TrackRectangle() : TrackRectangle(nullptr) {}
  ~TrackRectangle() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR TrackRectangle(::google::protobuf::internal::ConstantInitialized);

  inline TrackRectangle(const TrackRectangle& from)
      : TrackRectangle(nullptr, from) {}
  TrackRectangle(TrackRectangle&& from) noexcept
    : TrackRectangle() {
    *this = ::std::move(from);
  }

  inline TrackRectangle& operator=(const TrackRectangle& from) {
    CopyFrom(from);
    return *this;
  }
  inline TrackRectangle& operator=(TrackRectangle&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TrackRectangle& default_instance() {
    return *internal_default_instance();
  }
  static inline const TrackRectangle* internal_default_instance() {
    return reinterpret_cast<const TrackRectangle*>(
               &_TrackRectangle_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  friend void swap(TrackRectangle& a, TrackRectangle& b) {
    a.Swap(&b);
  }
  inline void Swap(TrackRectangle* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TrackRectangle* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TrackRectangle* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<TrackRectangle>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TrackRectangle& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const TrackRectangle& from) {
    TrackRectangle::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TrackRectangle* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "mavsdk.rpc.tracking_server.TrackRectangle";
  }
  protected:
  explicit TrackRectangle(::google::protobuf::Arena* arena);
  TrackRectangle(::google::protobuf::Arena* arena, const TrackRectangle& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTopLeftCornerXFieldNumber = 1,
    kTopLeftCornerYFieldNumber = 2,
    kBottomRightCornerXFieldNumber = 3,
    kBottomRightCornerYFieldNumber = 4,
  };
  // float top_left_corner_x = 1;
  void clear_top_left_corner_x() ;
  float top_left_corner_x() const;
  void set_top_left_corner_x(float value);

  private:
  float _internal_top_left_corner_x() const;
  void _internal_set_top_left_corner_x(float value);

  public:
  // float top_left_corner_y = 2;
  void clear_top_left_corner_y() ;
  float top_left_corner_y() const;
  void set_top_left_corner_y(float value);

  private:
  float _internal_top_left_corner_y() const;
  void _internal_set_top_left_corner_y(float value);

  public:
  // float bottom_right_corner_x = 3;
  void clear_bottom_right_corner_x() ;
  float bottom_right_corner_x() const;
  void set_bottom_right_corner_x(float value);

  private:
  float _internal_bottom_right_corner_x() const;
  void _internal_set_bottom_right_corner_x(float value);

  public:
  // float bottom_right_corner_y = 4;
  void clear_bottom_right_corner_y() ;
  float bottom_right_corner_y() const;
  void set_bottom_right_corner_y(float value);

  private:
  float _internal_bottom_right_corner_y() const;
  void _internal_set_bottom_right_corner_y(float value);

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.tracking_server.TrackRectangle)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    float top_left_corner_x_;
    float top_left_corner_y_;
    float bottom_right_corner_x_;
    float bottom_right_corner_y_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tracking_5fserver_2ftracking_5fserver_2eproto;
};// -------------------------------------------------------------------

class TrackPoint final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.tracking_server.TrackPoint) */ {
 public:
  inline TrackPoint() : TrackPoint(nullptr) {}
  ~TrackPoint() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR TrackPoint(::google::protobuf::internal::ConstantInitialized);

  inline TrackPoint(const TrackPoint& from)
      : TrackPoint(nullptr, from) {}
  TrackPoint(TrackPoint&& from) noexcept
    : TrackPoint() {
    *this = ::std::move(from);
  }

  inline TrackPoint& operator=(const TrackPoint& from) {
    CopyFrom(from);
    return *this;
  }
  inline TrackPoint& operator=(TrackPoint&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TrackPoint& default_instance() {
    return *internal_default_instance();
  }
  static inline const TrackPoint* internal_default_instance() {
    return reinterpret_cast<const TrackPoint*>(
               &_TrackPoint_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  friend void swap(TrackPoint& a, TrackPoint& b) {
    a.Swap(&b);
  }
  inline void Swap(TrackPoint* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TrackPoint* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TrackPoint* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<TrackPoint>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TrackPoint& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const TrackPoint& from) {
    TrackPoint::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TrackPoint* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "mavsdk.rpc.tracking_server.TrackPoint";
  }
  protected:
  explicit TrackPoint(::google::protobuf::Arena* arena);
  TrackPoint(::google::protobuf::Arena* arena, const TrackPoint& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPointXFieldNumber = 1,
    kPointYFieldNumber = 2,
    kRadiusFieldNumber = 3,
  };
  // float point_x = 1;
  void clear_point_x() ;
  float point_x() const;
  void set_point_x(float value);

  private:
  float _internal_point_x() const;
  void _internal_set_point_x(float value);

  public:
  // float point_y = 2;
  void clear_point_y() ;
  float point_y() const;
  void set_point_y(float value);

  private:
  float _internal_point_y() const;
  void _internal_set_point_y(float value);

  public:
  // float radius = 3;
  void clear_radius() ;
  float radius() const;
  void set_radius(float value);

  private:
  float _internal_radius() const;
  void _internal_set_radius(float value);

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.tracking_server.TrackPoint)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    float point_x_;
    float point_y_;
    float radius_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tracking_5fserver_2ftracking_5fserver_2eproto;
};// -------------------------------------------------------------------

class SubscribeTrackingRectangleCommandRequest final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:mavsdk.rpc.tracking_server.SubscribeTrackingRectangleCommandRequest) */ {
 public:
  inline SubscribeTrackingRectangleCommandRequest() : SubscribeTrackingRectangleCommandRequest(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SubscribeTrackingRectangleCommandRequest(::google::protobuf::internal::ConstantInitialized);

  inline SubscribeTrackingRectangleCommandRequest(const SubscribeTrackingRectangleCommandRequest& from)
      : SubscribeTrackingRectangleCommandRequest(nullptr, from) {}
  SubscribeTrackingRectangleCommandRequest(SubscribeTrackingRectangleCommandRequest&& from) noexcept
    : SubscribeTrackingRectangleCommandRequest() {
    *this = ::std::move(from);
  }

  inline SubscribeTrackingRectangleCommandRequest& operator=(const SubscribeTrackingRectangleCommandRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SubscribeTrackingRectangleCommandRequest& operator=(SubscribeTrackingRectangleCommandRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SubscribeTrackingRectangleCommandRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SubscribeTrackingRectangleCommandRequest* internal_default_instance() {
    return reinterpret_cast<const SubscribeTrackingRectangleCommandRequest*>(
               &_SubscribeTrackingRectangleCommandRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(SubscribeTrackingRectangleCommandRequest& a, SubscribeTrackingRectangleCommandRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(SubscribeTrackingRectangleCommandRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SubscribeTrackingRectangleCommandRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SubscribeTrackingRectangleCommandRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SubscribeTrackingRectangleCommandRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const SubscribeTrackingRectangleCommandRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const SubscribeTrackingRectangleCommandRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "mavsdk.rpc.tracking_server.SubscribeTrackingRectangleCommandRequest";
  }
  protected:
  explicit SubscribeTrackingRectangleCommandRequest(::google::protobuf::Arena* arena);
  SubscribeTrackingRectangleCommandRequest(::google::protobuf::Arena* arena, const SubscribeTrackingRectangleCommandRequest& from);
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:mavsdk.rpc.tracking_server.SubscribeTrackingRectangleCommandRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_tracking_5fserver_2ftracking_5fserver_2eproto;
};// -------------------------------------------------------------------

class SubscribeTrackingPointCommandRequest final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:mavsdk.rpc.tracking_server.SubscribeTrackingPointCommandRequest) */ {
 public:
  inline SubscribeTrackingPointCommandRequest() : SubscribeTrackingPointCommandRequest(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SubscribeTrackingPointCommandRequest(::google::protobuf::internal::ConstantInitialized);

  inline SubscribeTrackingPointCommandRequest(const SubscribeTrackingPointCommandRequest& from)
      : SubscribeTrackingPointCommandRequest(nullptr, from) {}
  SubscribeTrackingPointCommandRequest(SubscribeTrackingPointCommandRequest&& from) noexcept
    : SubscribeTrackingPointCommandRequest() {
    *this = ::std::move(from);
  }

  inline SubscribeTrackingPointCommandRequest& operator=(const SubscribeTrackingPointCommandRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SubscribeTrackingPointCommandRequest& operator=(SubscribeTrackingPointCommandRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SubscribeTrackingPointCommandRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SubscribeTrackingPointCommandRequest* internal_default_instance() {
    return reinterpret_cast<const SubscribeTrackingPointCommandRequest*>(
               &_SubscribeTrackingPointCommandRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(SubscribeTrackingPointCommandRequest& a, SubscribeTrackingPointCommandRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(SubscribeTrackingPointCommandRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SubscribeTrackingPointCommandRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SubscribeTrackingPointCommandRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SubscribeTrackingPointCommandRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const SubscribeTrackingPointCommandRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const SubscribeTrackingPointCommandRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "mavsdk.rpc.tracking_server.SubscribeTrackingPointCommandRequest";
  }
  protected:
  explicit SubscribeTrackingPointCommandRequest(::google::protobuf::Arena* arena);
  SubscribeTrackingPointCommandRequest(::google::protobuf::Arena* arena, const SubscribeTrackingPointCommandRequest& from);
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:mavsdk.rpc.tracking_server.SubscribeTrackingPointCommandRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_tracking_5fserver_2ftracking_5fserver_2eproto;
};// -------------------------------------------------------------------

class SubscribeTrackingOffCommandRequest final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:mavsdk.rpc.tracking_server.SubscribeTrackingOffCommandRequest) */ {
 public:
  inline SubscribeTrackingOffCommandRequest() : SubscribeTrackingOffCommandRequest(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SubscribeTrackingOffCommandRequest(::google::protobuf::internal::ConstantInitialized);

  inline SubscribeTrackingOffCommandRequest(const SubscribeTrackingOffCommandRequest& from)
      : SubscribeTrackingOffCommandRequest(nullptr, from) {}
  SubscribeTrackingOffCommandRequest(SubscribeTrackingOffCommandRequest&& from) noexcept
    : SubscribeTrackingOffCommandRequest() {
    *this = ::std::move(from);
  }

  inline SubscribeTrackingOffCommandRequest& operator=(const SubscribeTrackingOffCommandRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SubscribeTrackingOffCommandRequest& operator=(SubscribeTrackingOffCommandRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SubscribeTrackingOffCommandRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SubscribeTrackingOffCommandRequest* internal_default_instance() {
    return reinterpret_cast<const SubscribeTrackingOffCommandRequest*>(
               &_SubscribeTrackingOffCommandRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(SubscribeTrackingOffCommandRequest& a, SubscribeTrackingOffCommandRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(SubscribeTrackingOffCommandRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SubscribeTrackingOffCommandRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SubscribeTrackingOffCommandRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SubscribeTrackingOffCommandRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const SubscribeTrackingOffCommandRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const SubscribeTrackingOffCommandRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "mavsdk.rpc.tracking_server.SubscribeTrackingOffCommandRequest";
  }
  protected:
  explicit SubscribeTrackingOffCommandRequest(::google::protobuf::Arena* arena);
  SubscribeTrackingOffCommandRequest(::google::protobuf::Arena* arena, const SubscribeTrackingOffCommandRequest& from);
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:mavsdk.rpc.tracking_server.SubscribeTrackingOffCommandRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_tracking_5fserver_2ftracking_5fserver_2eproto;
};// -------------------------------------------------------------------

class SetTrackingRectangleStatusResponse final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:mavsdk.rpc.tracking_server.SetTrackingRectangleStatusResponse) */ {
 public:
  inline SetTrackingRectangleStatusResponse() : SetTrackingRectangleStatusResponse(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SetTrackingRectangleStatusResponse(::google::protobuf::internal::ConstantInitialized);

  inline SetTrackingRectangleStatusResponse(const SetTrackingRectangleStatusResponse& from)
      : SetTrackingRectangleStatusResponse(nullptr, from) {}
  SetTrackingRectangleStatusResponse(SetTrackingRectangleStatusResponse&& from) noexcept
    : SetTrackingRectangleStatusResponse() {
    *this = ::std::move(from);
  }

  inline SetTrackingRectangleStatusResponse& operator=(const SetTrackingRectangleStatusResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetTrackingRectangleStatusResponse& operator=(SetTrackingRectangleStatusResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetTrackingRectangleStatusResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetTrackingRectangleStatusResponse* internal_default_instance() {
    return reinterpret_cast<const SetTrackingRectangleStatusResponse*>(
               &_SetTrackingRectangleStatusResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(SetTrackingRectangleStatusResponse& a, SetTrackingRectangleStatusResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(SetTrackingRectangleStatusResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetTrackingRectangleStatusResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetTrackingRectangleStatusResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetTrackingRectangleStatusResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const SetTrackingRectangleStatusResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const SetTrackingRectangleStatusResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "mavsdk.rpc.tracking_server.SetTrackingRectangleStatusResponse";
  }
  protected:
  explicit SetTrackingRectangleStatusResponse(::google::protobuf::Arena* arena);
  SetTrackingRectangleStatusResponse(::google::protobuf::Arena* arena, const SetTrackingRectangleStatusResponse& from);
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:mavsdk.rpc.tracking_server.SetTrackingRectangleStatusResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_tracking_5fserver_2ftracking_5fserver_2eproto;
};// -------------------------------------------------------------------

class SetTrackingPointStatusResponse final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:mavsdk.rpc.tracking_server.SetTrackingPointStatusResponse) */ {
 public:
  inline SetTrackingPointStatusResponse() : SetTrackingPointStatusResponse(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SetTrackingPointStatusResponse(::google::protobuf::internal::ConstantInitialized);

  inline SetTrackingPointStatusResponse(const SetTrackingPointStatusResponse& from)
      : SetTrackingPointStatusResponse(nullptr, from) {}
  SetTrackingPointStatusResponse(SetTrackingPointStatusResponse&& from) noexcept
    : SetTrackingPointStatusResponse() {
    *this = ::std::move(from);
  }

  inline SetTrackingPointStatusResponse& operator=(const SetTrackingPointStatusResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetTrackingPointStatusResponse& operator=(SetTrackingPointStatusResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetTrackingPointStatusResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetTrackingPointStatusResponse* internal_default_instance() {
    return reinterpret_cast<const SetTrackingPointStatusResponse*>(
               &_SetTrackingPointStatusResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(SetTrackingPointStatusResponse& a, SetTrackingPointStatusResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(SetTrackingPointStatusResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetTrackingPointStatusResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetTrackingPointStatusResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetTrackingPointStatusResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const SetTrackingPointStatusResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const SetTrackingPointStatusResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "mavsdk.rpc.tracking_server.SetTrackingPointStatusResponse";
  }
  protected:
  explicit SetTrackingPointStatusResponse(::google::protobuf::Arena* arena);
  SetTrackingPointStatusResponse(::google::protobuf::Arena* arena, const SetTrackingPointStatusResponse& from);
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:mavsdk.rpc.tracking_server.SetTrackingPointStatusResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_tracking_5fserver_2ftracking_5fserver_2eproto;
};// -------------------------------------------------------------------

class SetTrackingOffStatusResponse final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:mavsdk.rpc.tracking_server.SetTrackingOffStatusResponse) */ {
 public:
  inline SetTrackingOffStatusResponse() : SetTrackingOffStatusResponse(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SetTrackingOffStatusResponse(::google::protobuf::internal::ConstantInitialized);

  inline SetTrackingOffStatusResponse(const SetTrackingOffStatusResponse& from)
      : SetTrackingOffStatusResponse(nullptr, from) {}
  SetTrackingOffStatusResponse(SetTrackingOffStatusResponse&& from) noexcept
    : SetTrackingOffStatusResponse() {
    *this = ::std::move(from);
  }

  inline SetTrackingOffStatusResponse& operator=(const SetTrackingOffStatusResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetTrackingOffStatusResponse& operator=(SetTrackingOffStatusResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetTrackingOffStatusResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetTrackingOffStatusResponse* internal_default_instance() {
    return reinterpret_cast<const SetTrackingOffStatusResponse*>(
               &_SetTrackingOffStatusResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(SetTrackingOffStatusResponse& a, SetTrackingOffStatusResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(SetTrackingOffStatusResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetTrackingOffStatusResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetTrackingOffStatusResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetTrackingOffStatusResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const SetTrackingOffStatusResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const SetTrackingOffStatusResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "mavsdk.rpc.tracking_server.SetTrackingOffStatusResponse";
  }
  protected:
  explicit SetTrackingOffStatusResponse(::google::protobuf::Arena* arena);
  SetTrackingOffStatusResponse(::google::protobuf::Arena* arena, const SetTrackingOffStatusResponse& from);
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:mavsdk.rpc.tracking_server.SetTrackingOffStatusResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_tracking_5fserver_2ftracking_5fserver_2eproto;
};// -------------------------------------------------------------------

class SetTrackingOffStatusRequest final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:mavsdk.rpc.tracking_server.SetTrackingOffStatusRequest) */ {
 public:
  inline SetTrackingOffStatusRequest() : SetTrackingOffStatusRequest(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SetTrackingOffStatusRequest(::google::protobuf::internal::ConstantInitialized);

  inline SetTrackingOffStatusRequest(const SetTrackingOffStatusRequest& from)
      : SetTrackingOffStatusRequest(nullptr, from) {}
  SetTrackingOffStatusRequest(SetTrackingOffStatusRequest&& from) noexcept
    : SetTrackingOffStatusRequest() {
    *this = ::std::move(from);
  }

  inline SetTrackingOffStatusRequest& operator=(const SetTrackingOffStatusRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetTrackingOffStatusRequest& operator=(SetTrackingOffStatusRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetTrackingOffStatusRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetTrackingOffStatusRequest* internal_default_instance() {
    return reinterpret_cast<const SetTrackingOffStatusRequest*>(
               &_SetTrackingOffStatusRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(SetTrackingOffStatusRequest& a, SetTrackingOffStatusRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(SetTrackingOffStatusRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetTrackingOffStatusRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetTrackingOffStatusRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetTrackingOffStatusRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const SetTrackingOffStatusRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const SetTrackingOffStatusRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "mavsdk.rpc.tracking_server.SetTrackingOffStatusRequest";
  }
  protected:
  explicit SetTrackingOffStatusRequest(::google::protobuf::Arena* arena);
  SetTrackingOffStatusRequest(::google::protobuf::Arena* arena, const SetTrackingOffStatusRequest& from);
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:mavsdk.rpc.tracking_server.SetTrackingOffStatusRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_tracking_5fserver_2ftracking_5fserver_2eproto;
};// -------------------------------------------------------------------

class RespondTrackingRectangleCommandRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.tracking_server.RespondTrackingRectangleCommandRequest) */ {
 public:
  inline RespondTrackingRectangleCommandRequest() : RespondTrackingRectangleCommandRequest(nullptr) {}
  ~RespondTrackingRectangleCommandRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR RespondTrackingRectangleCommandRequest(::google::protobuf::internal::ConstantInitialized);

  inline RespondTrackingRectangleCommandRequest(const RespondTrackingRectangleCommandRequest& from)
      : RespondTrackingRectangleCommandRequest(nullptr, from) {}
  RespondTrackingRectangleCommandRequest(RespondTrackingRectangleCommandRequest&& from) noexcept
    : RespondTrackingRectangleCommandRequest() {
    *this = ::std::move(from);
  }

  inline RespondTrackingRectangleCommandRequest& operator=(const RespondTrackingRectangleCommandRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline RespondTrackingRectangleCommandRequest& operator=(RespondTrackingRectangleCommandRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RespondTrackingRectangleCommandRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const RespondTrackingRectangleCommandRequest* internal_default_instance() {
    return reinterpret_cast<const RespondTrackingRectangleCommandRequest*>(
               &_RespondTrackingRectangleCommandRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  friend void swap(RespondTrackingRectangleCommandRequest& a, RespondTrackingRectangleCommandRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(RespondTrackingRectangleCommandRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RespondTrackingRectangleCommandRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RespondTrackingRectangleCommandRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<RespondTrackingRectangleCommandRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RespondTrackingRectangleCommandRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const RespondTrackingRectangleCommandRequest& from) {
    RespondTrackingRectangleCommandRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(RespondTrackingRectangleCommandRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "mavsdk.rpc.tracking_server.RespondTrackingRectangleCommandRequest";
  }
  protected:
  explicit RespondTrackingRectangleCommandRequest(::google::protobuf::Arena* arena);
  RespondTrackingRectangleCommandRequest(::google::protobuf::Arena* arena, const RespondTrackingRectangleCommandRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCommandAnswerFieldNumber = 1,
  };
  // .mavsdk.rpc.tracking_server.CommandAnswer command_answer = 1;
  void clear_command_answer() ;
  ::mavsdk::rpc::tracking_server::CommandAnswer command_answer() const;
  void set_command_answer(::mavsdk::rpc::tracking_server::CommandAnswer value);

  private:
  ::mavsdk::rpc::tracking_server::CommandAnswer _internal_command_answer() const;
  void _internal_set_command_answer(::mavsdk::rpc::tracking_server::CommandAnswer value);

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.tracking_server.RespondTrackingRectangleCommandRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    int command_answer_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tracking_5fserver_2ftracking_5fserver_2eproto;
};// -------------------------------------------------------------------

class RespondTrackingPointCommandRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.tracking_server.RespondTrackingPointCommandRequest) */ {
 public:
  inline RespondTrackingPointCommandRequest() : RespondTrackingPointCommandRequest(nullptr) {}
  ~RespondTrackingPointCommandRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR RespondTrackingPointCommandRequest(::google::protobuf::internal::ConstantInitialized);

  inline RespondTrackingPointCommandRequest(const RespondTrackingPointCommandRequest& from)
      : RespondTrackingPointCommandRequest(nullptr, from) {}
  RespondTrackingPointCommandRequest(RespondTrackingPointCommandRequest&& from) noexcept
    : RespondTrackingPointCommandRequest() {
    *this = ::std::move(from);
  }

  inline RespondTrackingPointCommandRequest& operator=(const RespondTrackingPointCommandRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline RespondTrackingPointCommandRequest& operator=(RespondTrackingPointCommandRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RespondTrackingPointCommandRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const RespondTrackingPointCommandRequest* internal_default_instance() {
    return reinterpret_cast<const RespondTrackingPointCommandRequest*>(
               &_RespondTrackingPointCommandRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(RespondTrackingPointCommandRequest& a, RespondTrackingPointCommandRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(RespondTrackingPointCommandRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RespondTrackingPointCommandRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RespondTrackingPointCommandRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<RespondTrackingPointCommandRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RespondTrackingPointCommandRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const RespondTrackingPointCommandRequest& from) {
    RespondTrackingPointCommandRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(RespondTrackingPointCommandRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "mavsdk.rpc.tracking_server.RespondTrackingPointCommandRequest";
  }
  protected:
  explicit RespondTrackingPointCommandRequest(::google::protobuf::Arena* arena);
  RespondTrackingPointCommandRequest(::google::protobuf::Arena* arena, const RespondTrackingPointCommandRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCommandAnswerFieldNumber = 1,
  };
  // .mavsdk.rpc.tracking_server.CommandAnswer command_answer = 1;
  void clear_command_answer() ;
  ::mavsdk::rpc::tracking_server::CommandAnswer command_answer() const;
  void set_command_answer(::mavsdk::rpc::tracking_server::CommandAnswer value);

  private:
  ::mavsdk::rpc::tracking_server::CommandAnswer _internal_command_answer() const;
  void _internal_set_command_answer(::mavsdk::rpc::tracking_server::CommandAnswer value);

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.tracking_server.RespondTrackingPointCommandRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    int command_answer_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tracking_5fserver_2ftracking_5fserver_2eproto;
};// -------------------------------------------------------------------

class RespondTrackingOffCommandRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.tracking_server.RespondTrackingOffCommandRequest) */ {
 public:
  inline RespondTrackingOffCommandRequest() : RespondTrackingOffCommandRequest(nullptr) {}
  ~RespondTrackingOffCommandRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR RespondTrackingOffCommandRequest(::google::protobuf::internal::ConstantInitialized);

  inline RespondTrackingOffCommandRequest(const RespondTrackingOffCommandRequest& from)
      : RespondTrackingOffCommandRequest(nullptr, from) {}
  RespondTrackingOffCommandRequest(RespondTrackingOffCommandRequest&& from) noexcept
    : RespondTrackingOffCommandRequest() {
    *this = ::std::move(from);
  }

  inline RespondTrackingOffCommandRequest& operator=(const RespondTrackingOffCommandRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline RespondTrackingOffCommandRequest& operator=(RespondTrackingOffCommandRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RespondTrackingOffCommandRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const RespondTrackingOffCommandRequest* internal_default_instance() {
    return reinterpret_cast<const RespondTrackingOffCommandRequest*>(
               &_RespondTrackingOffCommandRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  friend void swap(RespondTrackingOffCommandRequest& a, RespondTrackingOffCommandRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(RespondTrackingOffCommandRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RespondTrackingOffCommandRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RespondTrackingOffCommandRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<RespondTrackingOffCommandRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RespondTrackingOffCommandRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const RespondTrackingOffCommandRequest& from) {
    RespondTrackingOffCommandRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(RespondTrackingOffCommandRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "mavsdk.rpc.tracking_server.RespondTrackingOffCommandRequest";
  }
  protected:
  explicit RespondTrackingOffCommandRequest(::google::protobuf::Arena* arena);
  RespondTrackingOffCommandRequest(::google::protobuf::Arena* arena, const RespondTrackingOffCommandRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCommandAnswerFieldNumber = 1,
  };
  // .mavsdk.rpc.tracking_server.CommandAnswer command_answer = 1;
  void clear_command_answer() ;
  ::mavsdk::rpc::tracking_server::CommandAnswer command_answer() const;
  void set_command_answer(::mavsdk::rpc::tracking_server::CommandAnswer value);

  private:
  ::mavsdk::rpc::tracking_server::CommandAnswer _internal_command_answer() const;
  void _internal_set_command_answer(::mavsdk::rpc::tracking_server::CommandAnswer value);

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.tracking_server.RespondTrackingOffCommandRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    int command_answer_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tracking_5fserver_2ftracking_5fserver_2eproto;
};// -------------------------------------------------------------------

class TrackingRectangleCommandResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.tracking_server.TrackingRectangleCommandResponse) */ {
 public:
  inline TrackingRectangleCommandResponse() : TrackingRectangleCommandResponse(nullptr) {}
  ~TrackingRectangleCommandResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR TrackingRectangleCommandResponse(::google::protobuf::internal::ConstantInitialized);

  inline TrackingRectangleCommandResponse(const TrackingRectangleCommandResponse& from)
      : TrackingRectangleCommandResponse(nullptr, from) {}
  TrackingRectangleCommandResponse(TrackingRectangleCommandResponse&& from) noexcept
    : TrackingRectangleCommandResponse() {
    *this = ::std::move(from);
  }

  inline TrackingRectangleCommandResponse& operator=(const TrackingRectangleCommandResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline TrackingRectangleCommandResponse& operator=(TrackingRectangleCommandResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TrackingRectangleCommandResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const TrackingRectangleCommandResponse* internal_default_instance() {
    return reinterpret_cast<const TrackingRectangleCommandResponse*>(
               &_TrackingRectangleCommandResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(TrackingRectangleCommandResponse& a, TrackingRectangleCommandResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(TrackingRectangleCommandResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TrackingRectangleCommandResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TrackingRectangleCommandResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<TrackingRectangleCommandResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TrackingRectangleCommandResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const TrackingRectangleCommandResponse& from) {
    TrackingRectangleCommandResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TrackingRectangleCommandResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "mavsdk.rpc.tracking_server.TrackingRectangleCommandResponse";
  }
  protected:
  explicit TrackingRectangleCommandResponse(::google::protobuf::Arena* arena);
  TrackingRectangleCommandResponse(::google::protobuf::Arena* arena, const TrackingRectangleCommandResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTrackRectangleFieldNumber = 1,
  };
  // .mavsdk.rpc.tracking_server.TrackRectangle track_rectangle = 1;
  bool has_track_rectangle() const;
  void clear_track_rectangle() ;
  const ::mavsdk::rpc::tracking_server::TrackRectangle& track_rectangle() const;
  PROTOBUF_NODISCARD ::mavsdk::rpc::tracking_server::TrackRectangle* release_track_rectangle();
  ::mavsdk::rpc::tracking_server::TrackRectangle* mutable_track_rectangle();
  void set_allocated_track_rectangle(::mavsdk::rpc::tracking_server::TrackRectangle* value);
  void unsafe_arena_set_allocated_track_rectangle(::mavsdk::rpc::tracking_server::TrackRectangle* value);
  ::mavsdk::rpc::tracking_server::TrackRectangle* unsafe_arena_release_track_rectangle();

  private:
  const ::mavsdk::rpc::tracking_server::TrackRectangle& _internal_track_rectangle() const;
  ::mavsdk::rpc::tracking_server::TrackRectangle* _internal_mutable_track_rectangle();

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.tracking_server.TrackingRectangleCommandResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::mavsdk::rpc::tracking_server::TrackRectangle* track_rectangle_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tracking_5fserver_2ftracking_5fserver_2eproto;
};// -------------------------------------------------------------------

class TrackingPointCommandResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.tracking_server.TrackingPointCommandResponse) */ {
 public:
  inline TrackingPointCommandResponse() : TrackingPointCommandResponse(nullptr) {}
  ~TrackingPointCommandResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR TrackingPointCommandResponse(::google::protobuf::internal::ConstantInitialized);

  inline TrackingPointCommandResponse(const TrackingPointCommandResponse& from)
      : TrackingPointCommandResponse(nullptr, from) {}
  TrackingPointCommandResponse(TrackingPointCommandResponse&& from) noexcept
    : TrackingPointCommandResponse() {
    *this = ::std::move(from);
  }

  inline TrackingPointCommandResponse& operator=(const TrackingPointCommandResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline TrackingPointCommandResponse& operator=(TrackingPointCommandResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TrackingPointCommandResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const TrackingPointCommandResponse* internal_default_instance() {
    return reinterpret_cast<const TrackingPointCommandResponse*>(
               &_TrackingPointCommandResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(TrackingPointCommandResponse& a, TrackingPointCommandResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(TrackingPointCommandResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TrackingPointCommandResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TrackingPointCommandResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<TrackingPointCommandResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TrackingPointCommandResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const TrackingPointCommandResponse& from) {
    TrackingPointCommandResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TrackingPointCommandResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "mavsdk.rpc.tracking_server.TrackingPointCommandResponse";
  }
  protected:
  explicit TrackingPointCommandResponse(::google::protobuf::Arena* arena);
  TrackingPointCommandResponse(::google::protobuf::Arena* arena, const TrackingPointCommandResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTrackPointFieldNumber = 1,
  };
  // .mavsdk.rpc.tracking_server.TrackPoint track_point = 1;
  bool has_track_point() const;
  void clear_track_point() ;
  const ::mavsdk::rpc::tracking_server::TrackPoint& track_point() const;
  PROTOBUF_NODISCARD ::mavsdk::rpc::tracking_server::TrackPoint* release_track_point();
  ::mavsdk::rpc::tracking_server::TrackPoint* mutable_track_point();
  void set_allocated_track_point(::mavsdk::rpc::tracking_server::TrackPoint* value);
  void unsafe_arena_set_allocated_track_point(::mavsdk::rpc::tracking_server::TrackPoint* value);
  ::mavsdk::rpc::tracking_server::TrackPoint* unsafe_arena_release_track_point();

  private:
  const ::mavsdk::rpc::tracking_server::TrackPoint& _internal_track_point() const;
  ::mavsdk::rpc::tracking_server::TrackPoint* _internal_mutable_track_point();

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.tracking_server.TrackingPointCommandResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::mavsdk::rpc::tracking_server::TrackPoint* track_point_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tracking_5fserver_2ftracking_5fserver_2eproto;
};// -------------------------------------------------------------------

class SetTrackingRectangleStatusRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.tracking_server.SetTrackingRectangleStatusRequest) */ {
 public:
  inline SetTrackingRectangleStatusRequest() : SetTrackingRectangleStatusRequest(nullptr) {}
  ~SetTrackingRectangleStatusRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SetTrackingRectangleStatusRequest(::google::protobuf::internal::ConstantInitialized);

  inline SetTrackingRectangleStatusRequest(const SetTrackingRectangleStatusRequest& from)
      : SetTrackingRectangleStatusRequest(nullptr, from) {}
  SetTrackingRectangleStatusRequest(SetTrackingRectangleStatusRequest&& from) noexcept
    : SetTrackingRectangleStatusRequest() {
    *this = ::std::move(from);
  }

  inline SetTrackingRectangleStatusRequest& operator=(const SetTrackingRectangleStatusRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetTrackingRectangleStatusRequest& operator=(SetTrackingRectangleStatusRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetTrackingRectangleStatusRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetTrackingRectangleStatusRequest* internal_default_instance() {
    return reinterpret_cast<const SetTrackingRectangleStatusRequest*>(
               &_SetTrackingRectangleStatusRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(SetTrackingRectangleStatusRequest& a, SetTrackingRectangleStatusRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(SetTrackingRectangleStatusRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetTrackingRectangleStatusRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetTrackingRectangleStatusRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetTrackingRectangleStatusRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetTrackingRectangleStatusRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SetTrackingRectangleStatusRequest& from) {
    SetTrackingRectangleStatusRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SetTrackingRectangleStatusRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "mavsdk.rpc.tracking_server.SetTrackingRectangleStatusRequest";
  }
  protected:
  explicit SetTrackingRectangleStatusRequest(::google::protobuf::Arena* arena);
  SetTrackingRectangleStatusRequest(::google::protobuf::Arena* arena, const SetTrackingRectangleStatusRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTrackedRectangleFieldNumber = 1,
  };
  // .mavsdk.rpc.tracking_server.TrackRectangle tracked_rectangle = 1;
  bool has_tracked_rectangle() const;
  void clear_tracked_rectangle() ;
  const ::mavsdk::rpc::tracking_server::TrackRectangle& tracked_rectangle() const;
  PROTOBUF_NODISCARD ::mavsdk::rpc::tracking_server::TrackRectangle* release_tracked_rectangle();
  ::mavsdk::rpc::tracking_server::TrackRectangle* mutable_tracked_rectangle();
  void set_allocated_tracked_rectangle(::mavsdk::rpc::tracking_server::TrackRectangle* value);
  void unsafe_arena_set_allocated_tracked_rectangle(::mavsdk::rpc::tracking_server::TrackRectangle* value);
  ::mavsdk::rpc::tracking_server::TrackRectangle* unsafe_arena_release_tracked_rectangle();

  private:
  const ::mavsdk::rpc::tracking_server::TrackRectangle& _internal_tracked_rectangle() const;
  ::mavsdk::rpc::tracking_server::TrackRectangle* _internal_mutable_tracked_rectangle();

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.tracking_server.SetTrackingRectangleStatusRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::mavsdk::rpc::tracking_server::TrackRectangle* tracked_rectangle_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tracking_5fserver_2ftracking_5fserver_2eproto;
};// -------------------------------------------------------------------

class SetTrackingPointStatusRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.tracking_server.SetTrackingPointStatusRequest) */ {
 public:
  inline SetTrackingPointStatusRequest() : SetTrackingPointStatusRequest(nullptr) {}
  ~SetTrackingPointStatusRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SetTrackingPointStatusRequest(::google::protobuf::internal::ConstantInitialized);

  inline SetTrackingPointStatusRequest(const SetTrackingPointStatusRequest& from)
      : SetTrackingPointStatusRequest(nullptr, from) {}
  SetTrackingPointStatusRequest(SetTrackingPointStatusRequest&& from) noexcept
    : SetTrackingPointStatusRequest() {
    *this = ::std::move(from);
  }

  inline SetTrackingPointStatusRequest& operator=(const SetTrackingPointStatusRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetTrackingPointStatusRequest& operator=(SetTrackingPointStatusRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetTrackingPointStatusRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetTrackingPointStatusRequest* internal_default_instance() {
    return reinterpret_cast<const SetTrackingPointStatusRequest*>(
               &_SetTrackingPointStatusRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(SetTrackingPointStatusRequest& a, SetTrackingPointStatusRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(SetTrackingPointStatusRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetTrackingPointStatusRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetTrackingPointStatusRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetTrackingPointStatusRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetTrackingPointStatusRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SetTrackingPointStatusRequest& from) {
    SetTrackingPointStatusRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SetTrackingPointStatusRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "mavsdk.rpc.tracking_server.SetTrackingPointStatusRequest";
  }
  protected:
  explicit SetTrackingPointStatusRequest(::google::protobuf::Arena* arena);
  SetTrackingPointStatusRequest(::google::protobuf::Arena* arena, const SetTrackingPointStatusRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTrackedPointFieldNumber = 1,
  };
  // .mavsdk.rpc.tracking_server.TrackPoint tracked_point = 1;
  bool has_tracked_point() const;
  void clear_tracked_point() ;
  const ::mavsdk::rpc::tracking_server::TrackPoint& tracked_point() const;
  PROTOBUF_NODISCARD ::mavsdk::rpc::tracking_server::TrackPoint* release_tracked_point();
  ::mavsdk::rpc::tracking_server::TrackPoint* mutable_tracked_point();
  void set_allocated_tracked_point(::mavsdk::rpc::tracking_server::TrackPoint* value);
  void unsafe_arena_set_allocated_tracked_point(::mavsdk::rpc::tracking_server::TrackPoint* value);
  ::mavsdk::rpc::tracking_server::TrackPoint* unsafe_arena_release_tracked_point();

  private:
  const ::mavsdk::rpc::tracking_server::TrackPoint& _internal_tracked_point() const;
  ::mavsdk::rpc::tracking_server::TrackPoint* _internal_mutable_tracked_point();

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.tracking_server.SetTrackingPointStatusRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::mavsdk::rpc::tracking_server::TrackPoint* tracked_point_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tracking_5fserver_2ftracking_5fserver_2eproto;
};// -------------------------------------------------------------------

class RespondTrackingRectangleCommandResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.tracking_server.RespondTrackingRectangleCommandResponse) */ {
 public:
  inline RespondTrackingRectangleCommandResponse() : RespondTrackingRectangleCommandResponse(nullptr) {}
  ~RespondTrackingRectangleCommandResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR RespondTrackingRectangleCommandResponse(::google::protobuf::internal::ConstantInitialized);

  inline RespondTrackingRectangleCommandResponse(const RespondTrackingRectangleCommandResponse& from)
      : RespondTrackingRectangleCommandResponse(nullptr, from) {}
  RespondTrackingRectangleCommandResponse(RespondTrackingRectangleCommandResponse&& from) noexcept
    : RespondTrackingRectangleCommandResponse() {
    *this = ::std::move(from);
  }

  inline RespondTrackingRectangleCommandResponse& operator=(const RespondTrackingRectangleCommandResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline RespondTrackingRectangleCommandResponse& operator=(RespondTrackingRectangleCommandResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RespondTrackingRectangleCommandResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const RespondTrackingRectangleCommandResponse* internal_default_instance() {
    return reinterpret_cast<const RespondTrackingRectangleCommandResponse*>(
               &_RespondTrackingRectangleCommandResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  friend void swap(RespondTrackingRectangleCommandResponse& a, RespondTrackingRectangleCommandResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(RespondTrackingRectangleCommandResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RespondTrackingRectangleCommandResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RespondTrackingRectangleCommandResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<RespondTrackingRectangleCommandResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RespondTrackingRectangleCommandResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const RespondTrackingRectangleCommandResponse& from) {
    RespondTrackingRectangleCommandResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(RespondTrackingRectangleCommandResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "mavsdk.rpc.tracking_server.RespondTrackingRectangleCommandResponse";
  }
  protected:
  explicit RespondTrackingRectangleCommandResponse(::google::protobuf::Arena* arena);
  RespondTrackingRectangleCommandResponse(::google::protobuf::Arena* arena, const RespondTrackingRectangleCommandResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTrackingServerResultFieldNumber = 1,
  };
  // .mavsdk.rpc.tracking_server.TrackingServerResult tracking_server_result = 1;
  bool has_tracking_server_result() const;
  void clear_tracking_server_result() ;
  const ::mavsdk::rpc::tracking_server::TrackingServerResult& tracking_server_result() const;
  PROTOBUF_NODISCARD ::mavsdk::rpc::tracking_server::TrackingServerResult* release_tracking_server_result();
  ::mavsdk::rpc::tracking_server::TrackingServerResult* mutable_tracking_server_result();
  void set_allocated_tracking_server_result(::mavsdk::rpc::tracking_server::TrackingServerResult* value);
  void unsafe_arena_set_allocated_tracking_server_result(::mavsdk::rpc::tracking_server::TrackingServerResult* value);
  ::mavsdk::rpc::tracking_server::TrackingServerResult* unsafe_arena_release_tracking_server_result();

  private:
  const ::mavsdk::rpc::tracking_server::TrackingServerResult& _internal_tracking_server_result() const;
  ::mavsdk::rpc::tracking_server::TrackingServerResult* _internal_mutable_tracking_server_result();

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.tracking_server.RespondTrackingRectangleCommandResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::mavsdk::rpc::tracking_server::TrackingServerResult* tracking_server_result_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tracking_5fserver_2ftracking_5fserver_2eproto;
};// -------------------------------------------------------------------

class RespondTrackingPointCommandResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.tracking_server.RespondTrackingPointCommandResponse) */ {
 public:
  inline RespondTrackingPointCommandResponse() : RespondTrackingPointCommandResponse(nullptr) {}
  ~RespondTrackingPointCommandResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR RespondTrackingPointCommandResponse(::google::protobuf::internal::ConstantInitialized);

  inline RespondTrackingPointCommandResponse(const RespondTrackingPointCommandResponse& from)
      : RespondTrackingPointCommandResponse(nullptr, from) {}
  RespondTrackingPointCommandResponse(RespondTrackingPointCommandResponse&& from) noexcept
    : RespondTrackingPointCommandResponse() {
    *this = ::std::move(from);
  }

  inline RespondTrackingPointCommandResponse& operator=(const RespondTrackingPointCommandResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline RespondTrackingPointCommandResponse& operator=(RespondTrackingPointCommandResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RespondTrackingPointCommandResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const RespondTrackingPointCommandResponse* internal_default_instance() {
    return reinterpret_cast<const RespondTrackingPointCommandResponse*>(
               &_RespondTrackingPointCommandResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(RespondTrackingPointCommandResponse& a, RespondTrackingPointCommandResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(RespondTrackingPointCommandResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RespondTrackingPointCommandResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RespondTrackingPointCommandResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<RespondTrackingPointCommandResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RespondTrackingPointCommandResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const RespondTrackingPointCommandResponse& from) {
    RespondTrackingPointCommandResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(RespondTrackingPointCommandResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "mavsdk.rpc.tracking_server.RespondTrackingPointCommandResponse";
  }
  protected:
  explicit RespondTrackingPointCommandResponse(::google::protobuf::Arena* arena);
  RespondTrackingPointCommandResponse(::google::protobuf::Arena* arena, const RespondTrackingPointCommandResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTrackingServerResultFieldNumber = 1,
  };
  // .mavsdk.rpc.tracking_server.TrackingServerResult tracking_server_result = 1;
  bool has_tracking_server_result() const;
  void clear_tracking_server_result() ;
  const ::mavsdk::rpc::tracking_server::TrackingServerResult& tracking_server_result() const;
  PROTOBUF_NODISCARD ::mavsdk::rpc::tracking_server::TrackingServerResult* release_tracking_server_result();
  ::mavsdk::rpc::tracking_server::TrackingServerResult* mutable_tracking_server_result();
  void set_allocated_tracking_server_result(::mavsdk::rpc::tracking_server::TrackingServerResult* value);
  void unsafe_arena_set_allocated_tracking_server_result(::mavsdk::rpc::tracking_server::TrackingServerResult* value);
  ::mavsdk::rpc::tracking_server::TrackingServerResult* unsafe_arena_release_tracking_server_result();

  private:
  const ::mavsdk::rpc::tracking_server::TrackingServerResult& _internal_tracking_server_result() const;
  ::mavsdk::rpc::tracking_server::TrackingServerResult* _internal_mutable_tracking_server_result();

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.tracking_server.RespondTrackingPointCommandResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::mavsdk::rpc::tracking_server::TrackingServerResult* tracking_server_result_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tracking_5fserver_2ftracking_5fserver_2eproto;
};// -------------------------------------------------------------------

class RespondTrackingOffCommandResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.tracking_server.RespondTrackingOffCommandResponse) */ {
 public:
  inline RespondTrackingOffCommandResponse() : RespondTrackingOffCommandResponse(nullptr) {}
  ~RespondTrackingOffCommandResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR RespondTrackingOffCommandResponse(::google::protobuf::internal::ConstantInitialized);

  inline RespondTrackingOffCommandResponse(const RespondTrackingOffCommandResponse& from)
      : RespondTrackingOffCommandResponse(nullptr, from) {}
  RespondTrackingOffCommandResponse(RespondTrackingOffCommandResponse&& from) noexcept
    : RespondTrackingOffCommandResponse() {
    *this = ::std::move(from);
  }

  inline RespondTrackingOffCommandResponse& operator=(const RespondTrackingOffCommandResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline RespondTrackingOffCommandResponse& operator=(RespondTrackingOffCommandResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RespondTrackingOffCommandResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const RespondTrackingOffCommandResponse* internal_default_instance() {
    return reinterpret_cast<const RespondTrackingOffCommandResponse*>(
               &_RespondTrackingOffCommandResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  friend void swap(RespondTrackingOffCommandResponse& a, RespondTrackingOffCommandResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(RespondTrackingOffCommandResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RespondTrackingOffCommandResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RespondTrackingOffCommandResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<RespondTrackingOffCommandResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RespondTrackingOffCommandResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const RespondTrackingOffCommandResponse& from) {
    RespondTrackingOffCommandResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(RespondTrackingOffCommandResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "mavsdk.rpc.tracking_server.RespondTrackingOffCommandResponse";
  }
  protected:
  explicit RespondTrackingOffCommandResponse(::google::protobuf::Arena* arena);
  RespondTrackingOffCommandResponse(::google::protobuf::Arena* arena, const RespondTrackingOffCommandResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTrackingServerResultFieldNumber = 1,
  };
  // .mavsdk.rpc.tracking_server.TrackingServerResult tracking_server_result = 1;
  bool has_tracking_server_result() const;
  void clear_tracking_server_result() ;
  const ::mavsdk::rpc::tracking_server::TrackingServerResult& tracking_server_result() const;
  PROTOBUF_NODISCARD ::mavsdk::rpc::tracking_server::TrackingServerResult* release_tracking_server_result();
  ::mavsdk::rpc::tracking_server::TrackingServerResult* mutable_tracking_server_result();
  void set_allocated_tracking_server_result(::mavsdk::rpc::tracking_server::TrackingServerResult* value);
  void unsafe_arena_set_allocated_tracking_server_result(::mavsdk::rpc::tracking_server::TrackingServerResult* value);
  ::mavsdk::rpc::tracking_server::TrackingServerResult* unsafe_arena_release_tracking_server_result();

  private:
  const ::mavsdk::rpc::tracking_server::TrackingServerResult& _internal_tracking_server_result() const;
  ::mavsdk::rpc::tracking_server::TrackingServerResult* _internal_mutable_tracking_server_result();

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.tracking_server.RespondTrackingOffCommandResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::mavsdk::rpc::tracking_server::TrackingServerResult* tracking_server_result_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tracking_5fserver_2ftracking_5fserver_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// SetTrackingPointStatusRequest

// .mavsdk.rpc.tracking_server.TrackPoint tracked_point = 1;
inline bool SetTrackingPointStatusRequest::has_tracked_point() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.tracked_point_ != nullptr);
  return value;
}
inline void SetTrackingPointStatusRequest::clear_tracked_point() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.tracked_point_ != nullptr) _impl_.tracked_point_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::mavsdk::rpc::tracking_server::TrackPoint& SetTrackingPointStatusRequest::_internal_tracked_point() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::mavsdk::rpc::tracking_server::TrackPoint* p = _impl_.tracked_point_;
  return p != nullptr ? *p : reinterpret_cast<const ::mavsdk::rpc::tracking_server::TrackPoint&>(::mavsdk::rpc::tracking_server::_TrackPoint_default_instance_);
}
inline const ::mavsdk::rpc::tracking_server::TrackPoint& SetTrackingPointStatusRequest::tracked_point() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.tracking_server.SetTrackingPointStatusRequest.tracked_point)
  return _internal_tracked_point();
}
inline void SetTrackingPointStatusRequest::unsafe_arena_set_allocated_tracked_point(::mavsdk::rpc::tracking_server::TrackPoint* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.tracked_point_);
  }
  _impl_.tracked_point_ = reinterpret_cast<::mavsdk::rpc::tracking_server::TrackPoint*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:mavsdk.rpc.tracking_server.SetTrackingPointStatusRequest.tracked_point)
}
inline ::mavsdk::rpc::tracking_server::TrackPoint* SetTrackingPointStatusRequest::release_tracked_point() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::tracking_server::TrackPoint* released = _impl_.tracked_point_;
  _impl_.tracked_point_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::mavsdk::rpc::tracking_server::TrackPoint* SetTrackingPointStatusRequest::unsafe_arena_release_tracked_point() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:mavsdk.rpc.tracking_server.SetTrackingPointStatusRequest.tracked_point)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::tracking_server::TrackPoint* temp = _impl_.tracked_point_;
  _impl_.tracked_point_ = nullptr;
  return temp;
}
inline ::mavsdk::rpc::tracking_server::TrackPoint* SetTrackingPointStatusRequest::_internal_mutable_tracked_point() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.tracked_point_ == nullptr) {
    auto* p = CreateMaybeMessage<::mavsdk::rpc::tracking_server::TrackPoint>(GetArena());
    _impl_.tracked_point_ = reinterpret_cast<::mavsdk::rpc::tracking_server::TrackPoint*>(p);
  }
  return _impl_.tracked_point_;
}
inline ::mavsdk::rpc::tracking_server::TrackPoint* SetTrackingPointStatusRequest::mutable_tracked_point() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::mavsdk::rpc::tracking_server::TrackPoint* _msg = _internal_mutable_tracked_point();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.tracking_server.SetTrackingPointStatusRequest.tracked_point)
  return _msg;
}
inline void SetTrackingPointStatusRequest::set_allocated_tracked_point(::mavsdk::rpc::tracking_server::TrackPoint* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::mavsdk::rpc::tracking_server::TrackPoint*>(_impl_.tracked_point_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::mavsdk::rpc::tracking_server::TrackPoint*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.tracked_point_ = reinterpret_cast<::mavsdk::rpc::tracking_server::TrackPoint*>(value);
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.tracking_server.SetTrackingPointStatusRequest.tracked_point)
}

// -------------------------------------------------------------------

// SetTrackingPointStatusResponse

// -------------------------------------------------------------------

// SetTrackingRectangleStatusRequest

// .mavsdk.rpc.tracking_server.TrackRectangle tracked_rectangle = 1;
inline bool SetTrackingRectangleStatusRequest::has_tracked_rectangle() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.tracked_rectangle_ != nullptr);
  return value;
}
inline void SetTrackingRectangleStatusRequest::clear_tracked_rectangle() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.tracked_rectangle_ != nullptr) _impl_.tracked_rectangle_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::mavsdk::rpc::tracking_server::TrackRectangle& SetTrackingRectangleStatusRequest::_internal_tracked_rectangle() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::mavsdk::rpc::tracking_server::TrackRectangle* p = _impl_.tracked_rectangle_;
  return p != nullptr ? *p : reinterpret_cast<const ::mavsdk::rpc::tracking_server::TrackRectangle&>(::mavsdk::rpc::tracking_server::_TrackRectangle_default_instance_);
}
inline const ::mavsdk::rpc::tracking_server::TrackRectangle& SetTrackingRectangleStatusRequest::tracked_rectangle() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.tracking_server.SetTrackingRectangleStatusRequest.tracked_rectangle)
  return _internal_tracked_rectangle();
}
inline void SetTrackingRectangleStatusRequest::unsafe_arena_set_allocated_tracked_rectangle(::mavsdk::rpc::tracking_server::TrackRectangle* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.tracked_rectangle_);
  }
  _impl_.tracked_rectangle_ = reinterpret_cast<::mavsdk::rpc::tracking_server::TrackRectangle*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:mavsdk.rpc.tracking_server.SetTrackingRectangleStatusRequest.tracked_rectangle)
}
inline ::mavsdk::rpc::tracking_server::TrackRectangle* SetTrackingRectangleStatusRequest::release_tracked_rectangle() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::tracking_server::TrackRectangle* released = _impl_.tracked_rectangle_;
  _impl_.tracked_rectangle_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::mavsdk::rpc::tracking_server::TrackRectangle* SetTrackingRectangleStatusRequest::unsafe_arena_release_tracked_rectangle() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:mavsdk.rpc.tracking_server.SetTrackingRectangleStatusRequest.tracked_rectangle)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::tracking_server::TrackRectangle* temp = _impl_.tracked_rectangle_;
  _impl_.tracked_rectangle_ = nullptr;
  return temp;
}
inline ::mavsdk::rpc::tracking_server::TrackRectangle* SetTrackingRectangleStatusRequest::_internal_mutable_tracked_rectangle() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.tracked_rectangle_ == nullptr) {
    auto* p = CreateMaybeMessage<::mavsdk::rpc::tracking_server::TrackRectangle>(GetArena());
    _impl_.tracked_rectangle_ = reinterpret_cast<::mavsdk::rpc::tracking_server::TrackRectangle*>(p);
  }
  return _impl_.tracked_rectangle_;
}
inline ::mavsdk::rpc::tracking_server::TrackRectangle* SetTrackingRectangleStatusRequest::mutable_tracked_rectangle() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::mavsdk::rpc::tracking_server::TrackRectangle* _msg = _internal_mutable_tracked_rectangle();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.tracking_server.SetTrackingRectangleStatusRequest.tracked_rectangle)
  return _msg;
}
inline void SetTrackingRectangleStatusRequest::set_allocated_tracked_rectangle(::mavsdk::rpc::tracking_server::TrackRectangle* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::mavsdk::rpc::tracking_server::TrackRectangle*>(_impl_.tracked_rectangle_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::mavsdk::rpc::tracking_server::TrackRectangle*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.tracked_rectangle_ = reinterpret_cast<::mavsdk::rpc::tracking_server::TrackRectangle*>(value);
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.tracking_server.SetTrackingRectangleStatusRequest.tracked_rectangle)
}

// -------------------------------------------------------------------

// SetTrackingRectangleStatusResponse

// -------------------------------------------------------------------

// SetTrackingOffStatusRequest

// -------------------------------------------------------------------

// SetTrackingOffStatusResponse

// -------------------------------------------------------------------

// SubscribeTrackingPointCommandRequest

// -------------------------------------------------------------------

// TrackingPointCommandResponse

// .mavsdk.rpc.tracking_server.TrackPoint track_point = 1;
inline bool TrackingPointCommandResponse::has_track_point() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.track_point_ != nullptr);
  return value;
}
inline void TrackingPointCommandResponse::clear_track_point() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.track_point_ != nullptr) _impl_.track_point_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::mavsdk::rpc::tracking_server::TrackPoint& TrackingPointCommandResponse::_internal_track_point() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::mavsdk::rpc::tracking_server::TrackPoint* p = _impl_.track_point_;
  return p != nullptr ? *p : reinterpret_cast<const ::mavsdk::rpc::tracking_server::TrackPoint&>(::mavsdk::rpc::tracking_server::_TrackPoint_default_instance_);
}
inline const ::mavsdk::rpc::tracking_server::TrackPoint& TrackingPointCommandResponse::track_point() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.tracking_server.TrackingPointCommandResponse.track_point)
  return _internal_track_point();
}
inline void TrackingPointCommandResponse::unsafe_arena_set_allocated_track_point(::mavsdk::rpc::tracking_server::TrackPoint* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.track_point_);
  }
  _impl_.track_point_ = reinterpret_cast<::mavsdk::rpc::tracking_server::TrackPoint*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:mavsdk.rpc.tracking_server.TrackingPointCommandResponse.track_point)
}
inline ::mavsdk::rpc::tracking_server::TrackPoint* TrackingPointCommandResponse::release_track_point() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::tracking_server::TrackPoint* released = _impl_.track_point_;
  _impl_.track_point_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::mavsdk::rpc::tracking_server::TrackPoint* TrackingPointCommandResponse::unsafe_arena_release_track_point() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:mavsdk.rpc.tracking_server.TrackingPointCommandResponse.track_point)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::tracking_server::TrackPoint* temp = _impl_.track_point_;
  _impl_.track_point_ = nullptr;
  return temp;
}
inline ::mavsdk::rpc::tracking_server::TrackPoint* TrackingPointCommandResponse::_internal_mutable_track_point() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.track_point_ == nullptr) {
    auto* p = CreateMaybeMessage<::mavsdk::rpc::tracking_server::TrackPoint>(GetArena());
    _impl_.track_point_ = reinterpret_cast<::mavsdk::rpc::tracking_server::TrackPoint*>(p);
  }
  return _impl_.track_point_;
}
inline ::mavsdk::rpc::tracking_server::TrackPoint* TrackingPointCommandResponse::mutable_track_point() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::mavsdk::rpc::tracking_server::TrackPoint* _msg = _internal_mutable_track_point();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.tracking_server.TrackingPointCommandResponse.track_point)
  return _msg;
}
inline void TrackingPointCommandResponse::set_allocated_track_point(::mavsdk::rpc::tracking_server::TrackPoint* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::mavsdk::rpc::tracking_server::TrackPoint*>(_impl_.track_point_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::mavsdk::rpc::tracking_server::TrackPoint*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.track_point_ = reinterpret_cast<::mavsdk::rpc::tracking_server::TrackPoint*>(value);
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.tracking_server.TrackingPointCommandResponse.track_point)
}

// -------------------------------------------------------------------

// SubscribeTrackingRectangleCommandRequest

// -------------------------------------------------------------------

// TrackingRectangleCommandResponse

// .mavsdk.rpc.tracking_server.TrackRectangle track_rectangle = 1;
inline bool TrackingRectangleCommandResponse::has_track_rectangle() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.track_rectangle_ != nullptr);
  return value;
}
inline void TrackingRectangleCommandResponse::clear_track_rectangle() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.track_rectangle_ != nullptr) _impl_.track_rectangle_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::mavsdk::rpc::tracking_server::TrackRectangle& TrackingRectangleCommandResponse::_internal_track_rectangle() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::mavsdk::rpc::tracking_server::TrackRectangle* p = _impl_.track_rectangle_;
  return p != nullptr ? *p : reinterpret_cast<const ::mavsdk::rpc::tracking_server::TrackRectangle&>(::mavsdk::rpc::tracking_server::_TrackRectangle_default_instance_);
}
inline const ::mavsdk::rpc::tracking_server::TrackRectangle& TrackingRectangleCommandResponse::track_rectangle() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.tracking_server.TrackingRectangleCommandResponse.track_rectangle)
  return _internal_track_rectangle();
}
inline void TrackingRectangleCommandResponse::unsafe_arena_set_allocated_track_rectangle(::mavsdk::rpc::tracking_server::TrackRectangle* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.track_rectangle_);
  }
  _impl_.track_rectangle_ = reinterpret_cast<::mavsdk::rpc::tracking_server::TrackRectangle*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:mavsdk.rpc.tracking_server.TrackingRectangleCommandResponse.track_rectangle)
}
inline ::mavsdk::rpc::tracking_server::TrackRectangle* TrackingRectangleCommandResponse::release_track_rectangle() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::tracking_server::TrackRectangle* released = _impl_.track_rectangle_;
  _impl_.track_rectangle_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::mavsdk::rpc::tracking_server::TrackRectangle* TrackingRectangleCommandResponse::unsafe_arena_release_track_rectangle() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:mavsdk.rpc.tracking_server.TrackingRectangleCommandResponse.track_rectangle)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::tracking_server::TrackRectangle* temp = _impl_.track_rectangle_;
  _impl_.track_rectangle_ = nullptr;
  return temp;
}
inline ::mavsdk::rpc::tracking_server::TrackRectangle* TrackingRectangleCommandResponse::_internal_mutable_track_rectangle() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.track_rectangle_ == nullptr) {
    auto* p = CreateMaybeMessage<::mavsdk::rpc::tracking_server::TrackRectangle>(GetArena());
    _impl_.track_rectangle_ = reinterpret_cast<::mavsdk::rpc::tracking_server::TrackRectangle*>(p);
  }
  return _impl_.track_rectangle_;
}
inline ::mavsdk::rpc::tracking_server::TrackRectangle* TrackingRectangleCommandResponse::mutable_track_rectangle() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::mavsdk::rpc::tracking_server::TrackRectangle* _msg = _internal_mutable_track_rectangle();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.tracking_server.TrackingRectangleCommandResponse.track_rectangle)
  return _msg;
}
inline void TrackingRectangleCommandResponse::set_allocated_track_rectangle(::mavsdk::rpc::tracking_server::TrackRectangle* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::mavsdk::rpc::tracking_server::TrackRectangle*>(_impl_.track_rectangle_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::mavsdk::rpc::tracking_server::TrackRectangle*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.track_rectangle_ = reinterpret_cast<::mavsdk::rpc::tracking_server::TrackRectangle*>(value);
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.tracking_server.TrackingRectangleCommandResponse.track_rectangle)
}

// -------------------------------------------------------------------

// SubscribeTrackingOffCommandRequest

// -------------------------------------------------------------------

// TrackingOffCommandResponse

// int32 dummy = 1;
inline void TrackingOffCommandResponse::clear_dummy() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.dummy_ = 0;
}
inline ::int32_t TrackingOffCommandResponse::dummy() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.tracking_server.TrackingOffCommandResponse.dummy)
  return _internal_dummy();
}
inline void TrackingOffCommandResponse::set_dummy(::int32_t value) {
  _internal_set_dummy(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.tracking_server.TrackingOffCommandResponse.dummy)
}
inline ::int32_t TrackingOffCommandResponse::_internal_dummy() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.dummy_;
}
inline void TrackingOffCommandResponse::_internal_set_dummy(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.dummy_ = value;
}

// -------------------------------------------------------------------

// RespondTrackingPointCommandRequest

// .mavsdk.rpc.tracking_server.CommandAnswer command_answer = 1;
inline void RespondTrackingPointCommandRequest::clear_command_answer() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.command_answer_ = 0;
}
inline ::mavsdk::rpc::tracking_server::CommandAnswer RespondTrackingPointCommandRequest::command_answer() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.tracking_server.RespondTrackingPointCommandRequest.command_answer)
  return _internal_command_answer();
}
inline void RespondTrackingPointCommandRequest::set_command_answer(::mavsdk::rpc::tracking_server::CommandAnswer value) {
  _internal_set_command_answer(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.tracking_server.RespondTrackingPointCommandRequest.command_answer)
}
inline ::mavsdk::rpc::tracking_server::CommandAnswer RespondTrackingPointCommandRequest::_internal_command_answer() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::mavsdk::rpc::tracking_server::CommandAnswer>(_impl_.command_answer_);
}
inline void RespondTrackingPointCommandRequest::_internal_set_command_answer(::mavsdk::rpc::tracking_server::CommandAnswer value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.command_answer_ = value;
}

// -------------------------------------------------------------------

// RespondTrackingPointCommandResponse

// .mavsdk.rpc.tracking_server.TrackingServerResult tracking_server_result = 1;
inline bool RespondTrackingPointCommandResponse::has_tracking_server_result() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.tracking_server_result_ != nullptr);
  return value;
}
inline void RespondTrackingPointCommandResponse::clear_tracking_server_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.tracking_server_result_ != nullptr) _impl_.tracking_server_result_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::mavsdk::rpc::tracking_server::TrackingServerResult& RespondTrackingPointCommandResponse::_internal_tracking_server_result() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::mavsdk::rpc::tracking_server::TrackingServerResult* p = _impl_.tracking_server_result_;
  return p != nullptr ? *p : reinterpret_cast<const ::mavsdk::rpc::tracking_server::TrackingServerResult&>(::mavsdk::rpc::tracking_server::_TrackingServerResult_default_instance_);
}
inline const ::mavsdk::rpc::tracking_server::TrackingServerResult& RespondTrackingPointCommandResponse::tracking_server_result() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.tracking_server.RespondTrackingPointCommandResponse.tracking_server_result)
  return _internal_tracking_server_result();
}
inline void RespondTrackingPointCommandResponse::unsafe_arena_set_allocated_tracking_server_result(::mavsdk::rpc::tracking_server::TrackingServerResult* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.tracking_server_result_);
  }
  _impl_.tracking_server_result_ = reinterpret_cast<::mavsdk::rpc::tracking_server::TrackingServerResult*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:mavsdk.rpc.tracking_server.RespondTrackingPointCommandResponse.tracking_server_result)
}
inline ::mavsdk::rpc::tracking_server::TrackingServerResult* RespondTrackingPointCommandResponse::release_tracking_server_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::tracking_server::TrackingServerResult* released = _impl_.tracking_server_result_;
  _impl_.tracking_server_result_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::mavsdk::rpc::tracking_server::TrackingServerResult* RespondTrackingPointCommandResponse::unsafe_arena_release_tracking_server_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:mavsdk.rpc.tracking_server.RespondTrackingPointCommandResponse.tracking_server_result)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::tracking_server::TrackingServerResult* temp = _impl_.tracking_server_result_;
  _impl_.tracking_server_result_ = nullptr;
  return temp;
}
inline ::mavsdk::rpc::tracking_server::TrackingServerResult* RespondTrackingPointCommandResponse::_internal_mutable_tracking_server_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.tracking_server_result_ == nullptr) {
    auto* p = CreateMaybeMessage<::mavsdk::rpc::tracking_server::TrackingServerResult>(GetArena());
    _impl_.tracking_server_result_ = reinterpret_cast<::mavsdk::rpc::tracking_server::TrackingServerResult*>(p);
  }
  return _impl_.tracking_server_result_;
}
inline ::mavsdk::rpc::tracking_server::TrackingServerResult* RespondTrackingPointCommandResponse::mutable_tracking_server_result() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::mavsdk::rpc::tracking_server::TrackingServerResult* _msg = _internal_mutable_tracking_server_result();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.tracking_server.RespondTrackingPointCommandResponse.tracking_server_result)
  return _msg;
}
inline void RespondTrackingPointCommandResponse::set_allocated_tracking_server_result(::mavsdk::rpc::tracking_server::TrackingServerResult* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::mavsdk::rpc::tracking_server::TrackingServerResult*>(_impl_.tracking_server_result_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::mavsdk::rpc::tracking_server::TrackingServerResult*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.tracking_server_result_ = reinterpret_cast<::mavsdk::rpc::tracking_server::TrackingServerResult*>(value);
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.tracking_server.RespondTrackingPointCommandResponse.tracking_server_result)
}

// -------------------------------------------------------------------

// RespondTrackingRectangleCommandRequest

// .mavsdk.rpc.tracking_server.CommandAnswer command_answer = 1;
inline void RespondTrackingRectangleCommandRequest::clear_command_answer() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.command_answer_ = 0;
}
inline ::mavsdk::rpc::tracking_server::CommandAnswer RespondTrackingRectangleCommandRequest::command_answer() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.tracking_server.RespondTrackingRectangleCommandRequest.command_answer)
  return _internal_command_answer();
}
inline void RespondTrackingRectangleCommandRequest::set_command_answer(::mavsdk::rpc::tracking_server::CommandAnswer value) {
  _internal_set_command_answer(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.tracking_server.RespondTrackingRectangleCommandRequest.command_answer)
}
inline ::mavsdk::rpc::tracking_server::CommandAnswer RespondTrackingRectangleCommandRequest::_internal_command_answer() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::mavsdk::rpc::tracking_server::CommandAnswer>(_impl_.command_answer_);
}
inline void RespondTrackingRectangleCommandRequest::_internal_set_command_answer(::mavsdk::rpc::tracking_server::CommandAnswer value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.command_answer_ = value;
}

// -------------------------------------------------------------------

// RespondTrackingRectangleCommandResponse

// .mavsdk.rpc.tracking_server.TrackingServerResult tracking_server_result = 1;
inline bool RespondTrackingRectangleCommandResponse::has_tracking_server_result() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.tracking_server_result_ != nullptr);
  return value;
}
inline void RespondTrackingRectangleCommandResponse::clear_tracking_server_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.tracking_server_result_ != nullptr) _impl_.tracking_server_result_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::mavsdk::rpc::tracking_server::TrackingServerResult& RespondTrackingRectangleCommandResponse::_internal_tracking_server_result() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::mavsdk::rpc::tracking_server::TrackingServerResult* p = _impl_.tracking_server_result_;
  return p != nullptr ? *p : reinterpret_cast<const ::mavsdk::rpc::tracking_server::TrackingServerResult&>(::mavsdk::rpc::tracking_server::_TrackingServerResult_default_instance_);
}
inline const ::mavsdk::rpc::tracking_server::TrackingServerResult& RespondTrackingRectangleCommandResponse::tracking_server_result() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.tracking_server.RespondTrackingRectangleCommandResponse.tracking_server_result)
  return _internal_tracking_server_result();
}
inline void RespondTrackingRectangleCommandResponse::unsafe_arena_set_allocated_tracking_server_result(::mavsdk::rpc::tracking_server::TrackingServerResult* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.tracking_server_result_);
  }
  _impl_.tracking_server_result_ = reinterpret_cast<::mavsdk::rpc::tracking_server::TrackingServerResult*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:mavsdk.rpc.tracking_server.RespondTrackingRectangleCommandResponse.tracking_server_result)
}
inline ::mavsdk::rpc::tracking_server::TrackingServerResult* RespondTrackingRectangleCommandResponse::release_tracking_server_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::tracking_server::TrackingServerResult* released = _impl_.tracking_server_result_;
  _impl_.tracking_server_result_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::mavsdk::rpc::tracking_server::TrackingServerResult* RespondTrackingRectangleCommandResponse::unsafe_arena_release_tracking_server_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:mavsdk.rpc.tracking_server.RespondTrackingRectangleCommandResponse.tracking_server_result)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::tracking_server::TrackingServerResult* temp = _impl_.tracking_server_result_;
  _impl_.tracking_server_result_ = nullptr;
  return temp;
}
inline ::mavsdk::rpc::tracking_server::TrackingServerResult* RespondTrackingRectangleCommandResponse::_internal_mutable_tracking_server_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.tracking_server_result_ == nullptr) {
    auto* p = CreateMaybeMessage<::mavsdk::rpc::tracking_server::TrackingServerResult>(GetArena());
    _impl_.tracking_server_result_ = reinterpret_cast<::mavsdk::rpc::tracking_server::TrackingServerResult*>(p);
  }
  return _impl_.tracking_server_result_;
}
inline ::mavsdk::rpc::tracking_server::TrackingServerResult* RespondTrackingRectangleCommandResponse::mutable_tracking_server_result() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::mavsdk::rpc::tracking_server::TrackingServerResult* _msg = _internal_mutable_tracking_server_result();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.tracking_server.RespondTrackingRectangleCommandResponse.tracking_server_result)
  return _msg;
}
inline void RespondTrackingRectangleCommandResponse::set_allocated_tracking_server_result(::mavsdk::rpc::tracking_server::TrackingServerResult* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::mavsdk::rpc::tracking_server::TrackingServerResult*>(_impl_.tracking_server_result_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::mavsdk::rpc::tracking_server::TrackingServerResult*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.tracking_server_result_ = reinterpret_cast<::mavsdk::rpc::tracking_server::TrackingServerResult*>(value);
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.tracking_server.RespondTrackingRectangleCommandResponse.tracking_server_result)
}

// -------------------------------------------------------------------

// RespondTrackingOffCommandRequest

// .mavsdk.rpc.tracking_server.CommandAnswer command_answer = 1;
inline void RespondTrackingOffCommandRequest::clear_command_answer() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.command_answer_ = 0;
}
inline ::mavsdk::rpc::tracking_server::CommandAnswer RespondTrackingOffCommandRequest::command_answer() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.tracking_server.RespondTrackingOffCommandRequest.command_answer)
  return _internal_command_answer();
}
inline void RespondTrackingOffCommandRequest::set_command_answer(::mavsdk::rpc::tracking_server::CommandAnswer value) {
  _internal_set_command_answer(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.tracking_server.RespondTrackingOffCommandRequest.command_answer)
}
inline ::mavsdk::rpc::tracking_server::CommandAnswer RespondTrackingOffCommandRequest::_internal_command_answer() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::mavsdk::rpc::tracking_server::CommandAnswer>(_impl_.command_answer_);
}
inline void RespondTrackingOffCommandRequest::_internal_set_command_answer(::mavsdk::rpc::tracking_server::CommandAnswer value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.command_answer_ = value;
}

// -------------------------------------------------------------------

// RespondTrackingOffCommandResponse

// .mavsdk.rpc.tracking_server.TrackingServerResult tracking_server_result = 1;
inline bool RespondTrackingOffCommandResponse::has_tracking_server_result() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.tracking_server_result_ != nullptr);
  return value;
}
inline void RespondTrackingOffCommandResponse::clear_tracking_server_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.tracking_server_result_ != nullptr) _impl_.tracking_server_result_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::mavsdk::rpc::tracking_server::TrackingServerResult& RespondTrackingOffCommandResponse::_internal_tracking_server_result() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::mavsdk::rpc::tracking_server::TrackingServerResult* p = _impl_.tracking_server_result_;
  return p != nullptr ? *p : reinterpret_cast<const ::mavsdk::rpc::tracking_server::TrackingServerResult&>(::mavsdk::rpc::tracking_server::_TrackingServerResult_default_instance_);
}
inline const ::mavsdk::rpc::tracking_server::TrackingServerResult& RespondTrackingOffCommandResponse::tracking_server_result() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.tracking_server.RespondTrackingOffCommandResponse.tracking_server_result)
  return _internal_tracking_server_result();
}
inline void RespondTrackingOffCommandResponse::unsafe_arena_set_allocated_tracking_server_result(::mavsdk::rpc::tracking_server::TrackingServerResult* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.tracking_server_result_);
  }
  _impl_.tracking_server_result_ = reinterpret_cast<::mavsdk::rpc::tracking_server::TrackingServerResult*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:mavsdk.rpc.tracking_server.RespondTrackingOffCommandResponse.tracking_server_result)
}
inline ::mavsdk::rpc::tracking_server::TrackingServerResult* RespondTrackingOffCommandResponse::release_tracking_server_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::tracking_server::TrackingServerResult* released = _impl_.tracking_server_result_;
  _impl_.tracking_server_result_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::mavsdk::rpc::tracking_server::TrackingServerResult* RespondTrackingOffCommandResponse::unsafe_arena_release_tracking_server_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:mavsdk.rpc.tracking_server.RespondTrackingOffCommandResponse.tracking_server_result)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::tracking_server::TrackingServerResult* temp = _impl_.tracking_server_result_;
  _impl_.tracking_server_result_ = nullptr;
  return temp;
}
inline ::mavsdk::rpc::tracking_server::TrackingServerResult* RespondTrackingOffCommandResponse::_internal_mutable_tracking_server_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.tracking_server_result_ == nullptr) {
    auto* p = CreateMaybeMessage<::mavsdk::rpc::tracking_server::TrackingServerResult>(GetArena());
    _impl_.tracking_server_result_ = reinterpret_cast<::mavsdk::rpc::tracking_server::TrackingServerResult*>(p);
  }
  return _impl_.tracking_server_result_;
}
inline ::mavsdk::rpc::tracking_server::TrackingServerResult* RespondTrackingOffCommandResponse::mutable_tracking_server_result() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::mavsdk::rpc::tracking_server::TrackingServerResult* _msg = _internal_mutable_tracking_server_result();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.tracking_server.RespondTrackingOffCommandResponse.tracking_server_result)
  return _msg;
}
inline void RespondTrackingOffCommandResponse::set_allocated_tracking_server_result(::mavsdk::rpc::tracking_server::TrackingServerResult* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::mavsdk::rpc::tracking_server::TrackingServerResult*>(_impl_.tracking_server_result_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::mavsdk::rpc::tracking_server::TrackingServerResult*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.tracking_server_result_ = reinterpret_cast<::mavsdk::rpc::tracking_server::TrackingServerResult*>(value);
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.tracking_server.RespondTrackingOffCommandResponse.tracking_server_result)
}

// -------------------------------------------------------------------

// TrackPoint

// float point_x = 1;
inline void TrackPoint::clear_point_x() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.point_x_ = 0;
}
inline float TrackPoint::point_x() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.tracking_server.TrackPoint.point_x)
  return _internal_point_x();
}
inline void TrackPoint::set_point_x(float value) {
  _internal_set_point_x(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.tracking_server.TrackPoint.point_x)
}
inline float TrackPoint::_internal_point_x() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.point_x_;
}
inline void TrackPoint::_internal_set_point_x(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.point_x_ = value;
}

// float point_y = 2;
inline void TrackPoint::clear_point_y() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.point_y_ = 0;
}
inline float TrackPoint::point_y() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.tracking_server.TrackPoint.point_y)
  return _internal_point_y();
}
inline void TrackPoint::set_point_y(float value) {
  _internal_set_point_y(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.tracking_server.TrackPoint.point_y)
}
inline float TrackPoint::_internal_point_y() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.point_y_;
}
inline void TrackPoint::_internal_set_point_y(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.point_y_ = value;
}

// float radius = 3;
inline void TrackPoint::clear_radius() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.radius_ = 0;
}
inline float TrackPoint::radius() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.tracking_server.TrackPoint.radius)
  return _internal_radius();
}
inline void TrackPoint::set_radius(float value) {
  _internal_set_radius(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.tracking_server.TrackPoint.radius)
}
inline float TrackPoint::_internal_radius() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.radius_;
}
inline void TrackPoint::_internal_set_radius(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.radius_ = value;
}

// -------------------------------------------------------------------

// TrackRectangle

// float top_left_corner_x = 1;
inline void TrackRectangle::clear_top_left_corner_x() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.top_left_corner_x_ = 0;
}
inline float TrackRectangle::top_left_corner_x() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.tracking_server.TrackRectangle.top_left_corner_x)
  return _internal_top_left_corner_x();
}
inline void TrackRectangle::set_top_left_corner_x(float value) {
  _internal_set_top_left_corner_x(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.tracking_server.TrackRectangle.top_left_corner_x)
}
inline float TrackRectangle::_internal_top_left_corner_x() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.top_left_corner_x_;
}
inline void TrackRectangle::_internal_set_top_left_corner_x(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.top_left_corner_x_ = value;
}

// float top_left_corner_y = 2;
inline void TrackRectangle::clear_top_left_corner_y() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.top_left_corner_y_ = 0;
}
inline float TrackRectangle::top_left_corner_y() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.tracking_server.TrackRectangle.top_left_corner_y)
  return _internal_top_left_corner_y();
}
inline void TrackRectangle::set_top_left_corner_y(float value) {
  _internal_set_top_left_corner_y(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.tracking_server.TrackRectangle.top_left_corner_y)
}
inline float TrackRectangle::_internal_top_left_corner_y() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.top_left_corner_y_;
}
inline void TrackRectangle::_internal_set_top_left_corner_y(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.top_left_corner_y_ = value;
}

// float bottom_right_corner_x = 3;
inline void TrackRectangle::clear_bottom_right_corner_x() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.bottom_right_corner_x_ = 0;
}
inline float TrackRectangle::bottom_right_corner_x() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.tracking_server.TrackRectangle.bottom_right_corner_x)
  return _internal_bottom_right_corner_x();
}
inline void TrackRectangle::set_bottom_right_corner_x(float value) {
  _internal_set_bottom_right_corner_x(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.tracking_server.TrackRectangle.bottom_right_corner_x)
}
inline float TrackRectangle::_internal_bottom_right_corner_x() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.bottom_right_corner_x_;
}
inline void TrackRectangle::_internal_set_bottom_right_corner_x(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.bottom_right_corner_x_ = value;
}

// float bottom_right_corner_y = 4;
inline void TrackRectangle::clear_bottom_right_corner_y() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.bottom_right_corner_y_ = 0;
}
inline float TrackRectangle::bottom_right_corner_y() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.tracking_server.TrackRectangle.bottom_right_corner_y)
  return _internal_bottom_right_corner_y();
}
inline void TrackRectangle::set_bottom_right_corner_y(float value) {
  _internal_set_bottom_right_corner_y(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.tracking_server.TrackRectangle.bottom_right_corner_y)
}
inline float TrackRectangle::_internal_bottom_right_corner_y() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.bottom_right_corner_y_;
}
inline void TrackRectangle::_internal_set_bottom_right_corner_y(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.bottom_right_corner_y_ = value;
}

// -------------------------------------------------------------------

// TrackingServerResult

// .mavsdk.rpc.tracking_server.TrackingServerResult.Result result = 1;
inline void TrackingServerResult::clear_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.result_ = 0;
}
inline ::mavsdk::rpc::tracking_server::TrackingServerResult_Result TrackingServerResult::result() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.tracking_server.TrackingServerResult.result)
  return _internal_result();
}
inline void TrackingServerResult::set_result(::mavsdk::rpc::tracking_server::TrackingServerResult_Result value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.tracking_server.TrackingServerResult.result)
}
inline ::mavsdk::rpc::tracking_server::TrackingServerResult_Result TrackingServerResult::_internal_result() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::mavsdk::rpc::tracking_server::TrackingServerResult_Result>(_impl_.result_);
}
inline void TrackingServerResult::_internal_set_result(::mavsdk::rpc::tracking_server::TrackingServerResult_Result value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.result_ = value;
}

// string result_str = 2;
inline void TrackingServerResult::clear_result_str() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.result_str_.ClearToEmpty();
}
inline const std::string& TrackingServerResult::result_str() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.tracking_server.TrackingServerResult.result_str)
  return _internal_result_str();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TrackingServerResult::set_result_str(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.result_str_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:mavsdk.rpc.tracking_server.TrackingServerResult.result_str)
}
inline std::string* TrackingServerResult::mutable_result_str() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_result_str();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.tracking_server.TrackingServerResult.result_str)
  return _s;
}
inline const std::string& TrackingServerResult::_internal_result_str() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.result_str_.Get();
}
inline void TrackingServerResult::_internal_set_result_str(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.result_str_.Set(value, GetArena());
}
inline std::string* TrackingServerResult::_internal_mutable_result_str() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.result_str_.Mutable( GetArena());
}
inline std::string* TrackingServerResult::release_result_str() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:mavsdk.rpc.tracking_server.TrackingServerResult.result_str)
  return _impl_.result_str_.Release();
}
inline void TrackingServerResult::set_allocated_result_str(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.result_str_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.result_str_.IsDefault()) {
          _impl_.result_str_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.tracking_server.TrackingServerResult.result_str)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace tracking_server
}  // namespace rpc
}  // namespace mavsdk


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::mavsdk::rpc::tracking_server::TrackingServerResult_Result> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::mavsdk::rpc::tracking_server::TrackingServerResult_Result>() {
  return ::mavsdk::rpc::tracking_server::TrackingServerResult_Result_descriptor();
}
template <>
struct is_proto_enum<::mavsdk::rpc::tracking_server::CommandAnswer> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::mavsdk::rpc::tracking_server::CommandAnswer>() {
  return ::mavsdk::rpc::tracking_server::CommandAnswer_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_tracking_5fserver_2ftracking_5fserver_2eproto_2epb_2eh

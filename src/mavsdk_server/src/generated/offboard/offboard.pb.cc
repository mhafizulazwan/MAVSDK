// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: offboard/offboard.proto

#include "offboard/offboard.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace mavsdk {
namespace rpc {
namespace offboard {

inline constexpr VelocityNedYaw::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : north_m_s_{0},
        east_m_s_{0},
        down_m_s_{0},
        yaw_deg_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR VelocityNedYaw::VelocityNedYaw(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct VelocityNedYawDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VelocityNedYawDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~VelocityNedYawDefaultTypeInternal() {}
  union {
    VelocityNedYaw _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VelocityNedYawDefaultTypeInternal _VelocityNedYaw_default_instance_;

inline constexpr VelocityBodyYawspeed::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : forward_m_s_{0},
        right_m_s_{0},
        down_m_s_{0},
        yawspeed_deg_s_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR VelocityBodyYawspeed::VelocityBodyYawspeed(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct VelocityBodyYawspeedDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VelocityBodyYawspeedDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~VelocityBodyYawspeedDefaultTypeInternal() {}
  union {
    VelocityBodyYawspeed _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VelocityBodyYawspeedDefaultTypeInternal _VelocityBodyYawspeed_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR StopRequest::StopRequest(::_pbi::ConstantInitialized) {}
struct StopRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StopRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StopRequestDefaultTypeInternal() {}
  union {
    StopRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StopRequestDefaultTypeInternal _StopRequest_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR StartRequest::StartRequest(::_pbi::ConstantInitialized) {}
struct StartRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StartRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StartRequestDefaultTypeInternal() {}
  union {
    StartRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StartRequestDefaultTypeInternal _StartRequest_default_instance_;

inline constexpr PositionNedYaw::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : north_m_{0},
        east_m_{0},
        down_m_{0},
        yaw_deg_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PositionNedYaw::PositionNedYaw(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PositionNedYawDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PositionNedYawDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PositionNedYawDefaultTypeInternal() {}
  union {
    PositionNedYaw _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PositionNedYawDefaultTypeInternal _PositionNedYaw_default_instance_;

inline constexpr PositionGlobalYaw::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : lat_deg_{0},
        lon_deg_{0},
        alt_m_{0},
        yaw_deg_{0},
        altitude_type_{static_cast< ::mavsdk::rpc::offboard::PositionGlobalYaw_AltitudeType >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PositionGlobalYaw::PositionGlobalYaw(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PositionGlobalYawDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PositionGlobalYawDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PositionGlobalYawDefaultTypeInternal() {}
  union {
    PositionGlobalYaw _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PositionGlobalYawDefaultTypeInternal _PositionGlobalYaw_default_instance_;

inline constexpr OffboardResult::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : result_str_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        result_{static_cast< ::mavsdk::rpc::offboard::OffboardResult_Result >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR OffboardResult::OffboardResult(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct OffboardResultDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OffboardResultDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OffboardResultDefaultTypeInternal() {}
  union {
    OffboardResult _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OffboardResultDefaultTypeInternal _OffboardResult_default_instance_;

inline constexpr IsActiveResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : is_active_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR IsActiveResponse::IsActiveResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct IsActiveResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR IsActiveResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~IsActiveResponseDefaultTypeInternal() {}
  union {
    IsActiveResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 IsActiveResponseDefaultTypeInternal _IsActiveResponse_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR IsActiveRequest::IsActiveRequest(::_pbi::ConstantInitialized) {}
struct IsActiveRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR IsActiveRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~IsActiveRequestDefaultTypeInternal() {}
  union {
    IsActiveRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 IsActiveRequestDefaultTypeInternal _IsActiveRequest_default_instance_;

inline constexpr AttitudeRate::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : roll_deg_s_{0},
        pitch_deg_s_{0},
        yaw_deg_s_{0},
        thrust_value_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR AttitudeRate::AttitudeRate(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct AttitudeRateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AttitudeRateDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AttitudeRateDefaultTypeInternal() {}
  union {
    AttitudeRate _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AttitudeRateDefaultTypeInternal _AttitudeRate_default_instance_;

inline constexpr Attitude::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : roll_deg_{0},
        pitch_deg_{0},
        yaw_deg_{0},
        thrust_value_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Attitude::Attitude(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct AttitudeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AttitudeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AttitudeDefaultTypeInternal() {}
  union {
    Attitude _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AttitudeDefaultTypeInternal _Attitude_default_instance_;

inline constexpr ActuatorControlGroup::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : controls_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ActuatorControlGroup::ActuatorControlGroup(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ActuatorControlGroupDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ActuatorControlGroupDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ActuatorControlGroupDefaultTypeInternal() {}
  union {
    ActuatorControlGroup _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ActuatorControlGroupDefaultTypeInternal _ActuatorControlGroup_default_instance_;

inline constexpr AccelerationNed::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : north_m_s2_{0},
        east_m_s2_{0},
        down_m_s2_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR AccelerationNed::AccelerationNed(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct AccelerationNedDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AccelerationNedDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AccelerationNedDefaultTypeInternal() {}
  union {
    AccelerationNed _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AccelerationNedDefaultTypeInternal _AccelerationNed_default_instance_;

inline constexpr StopResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        offboard_result_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR StopResponse::StopResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct StopResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StopResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StopResponseDefaultTypeInternal() {}
  union {
    StopResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StopResponseDefaultTypeInternal _StopResponse_default_instance_;

inline constexpr StartResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        offboard_result_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR StartResponse::StartResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct StartResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StartResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StartResponseDefaultTypeInternal() {}
  union {
    StartResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StartResponseDefaultTypeInternal _StartResponse_default_instance_;

inline constexpr SetVelocityNedResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        offboard_result_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR SetVelocityNedResponse::SetVelocityNedResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SetVelocityNedResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetVelocityNedResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetVelocityNedResponseDefaultTypeInternal() {}
  union {
    SetVelocityNedResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetVelocityNedResponseDefaultTypeInternal _SetVelocityNedResponse_default_instance_;

inline constexpr SetVelocityNedRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        velocity_ned_yaw_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR SetVelocityNedRequest::SetVelocityNedRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SetVelocityNedRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetVelocityNedRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetVelocityNedRequestDefaultTypeInternal() {}
  union {
    SetVelocityNedRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetVelocityNedRequestDefaultTypeInternal _SetVelocityNedRequest_default_instance_;

inline constexpr SetVelocityBodyResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        offboard_result_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR SetVelocityBodyResponse::SetVelocityBodyResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SetVelocityBodyResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetVelocityBodyResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetVelocityBodyResponseDefaultTypeInternal() {}
  union {
    SetVelocityBodyResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetVelocityBodyResponseDefaultTypeInternal _SetVelocityBodyResponse_default_instance_;

inline constexpr SetVelocityBodyRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        velocity_body_yawspeed_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR SetVelocityBodyRequest::SetVelocityBodyRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SetVelocityBodyRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetVelocityBodyRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetVelocityBodyRequestDefaultTypeInternal() {}
  union {
    SetVelocityBodyRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetVelocityBodyRequestDefaultTypeInternal _SetVelocityBodyRequest_default_instance_;

inline constexpr SetPositionVelocityNedResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        offboard_result_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR SetPositionVelocityNedResponse::SetPositionVelocityNedResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SetPositionVelocityNedResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetPositionVelocityNedResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetPositionVelocityNedResponseDefaultTypeInternal() {}
  union {
    SetPositionVelocityNedResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetPositionVelocityNedResponseDefaultTypeInternal _SetPositionVelocityNedResponse_default_instance_;

inline constexpr SetPositionVelocityNedRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        position_ned_yaw_{nullptr},
        velocity_ned_yaw_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR SetPositionVelocityNedRequest::SetPositionVelocityNedRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SetPositionVelocityNedRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetPositionVelocityNedRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetPositionVelocityNedRequestDefaultTypeInternal() {}
  union {
    SetPositionVelocityNedRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetPositionVelocityNedRequestDefaultTypeInternal _SetPositionVelocityNedRequest_default_instance_;

inline constexpr SetPositionVelocityAccelerationNedResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        offboard_result_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR SetPositionVelocityAccelerationNedResponse::SetPositionVelocityAccelerationNedResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SetPositionVelocityAccelerationNedResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetPositionVelocityAccelerationNedResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetPositionVelocityAccelerationNedResponseDefaultTypeInternal() {}
  union {
    SetPositionVelocityAccelerationNedResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetPositionVelocityAccelerationNedResponseDefaultTypeInternal _SetPositionVelocityAccelerationNedResponse_default_instance_;

inline constexpr SetPositionVelocityAccelerationNedRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        position_ned_yaw_{nullptr},
        velocity_ned_yaw_{nullptr},
        acceleration_ned_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR SetPositionVelocityAccelerationNedRequest::SetPositionVelocityAccelerationNedRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SetPositionVelocityAccelerationNedRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetPositionVelocityAccelerationNedRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetPositionVelocityAccelerationNedRequestDefaultTypeInternal() {}
  union {
    SetPositionVelocityAccelerationNedRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetPositionVelocityAccelerationNedRequestDefaultTypeInternal _SetPositionVelocityAccelerationNedRequest_default_instance_;

inline constexpr SetPositionNedResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        offboard_result_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR SetPositionNedResponse::SetPositionNedResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SetPositionNedResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetPositionNedResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetPositionNedResponseDefaultTypeInternal() {}
  union {
    SetPositionNedResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetPositionNedResponseDefaultTypeInternal _SetPositionNedResponse_default_instance_;

inline constexpr SetPositionNedRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        position_ned_yaw_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR SetPositionNedRequest::SetPositionNedRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SetPositionNedRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetPositionNedRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetPositionNedRequestDefaultTypeInternal() {}
  union {
    SetPositionNedRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetPositionNedRequestDefaultTypeInternal _SetPositionNedRequest_default_instance_;

inline constexpr SetPositionGlobalResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        offboard_result_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR SetPositionGlobalResponse::SetPositionGlobalResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SetPositionGlobalResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetPositionGlobalResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetPositionGlobalResponseDefaultTypeInternal() {}
  union {
    SetPositionGlobalResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetPositionGlobalResponseDefaultTypeInternal _SetPositionGlobalResponse_default_instance_;

inline constexpr SetPositionGlobalRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        position_global_yaw_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR SetPositionGlobalRequest::SetPositionGlobalRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SetPositionGlobalRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetPositionGlobalRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetPositionGlobalRequestDefaultTypeInternal() {}
  union {
    SetPositionGlobalRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetPositionGlobalRequestDefaultTypeInternal _SetPositionGlobalRequest_default_instance_;

inline constexpr SetAttitudeResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        offboard_result_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR SetAttitudeResponse::SetAttitudeResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SetAttitudeResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetAttitudeResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetAttitudeResponseDefaultTypeInternal() {}
  union {
    SetAttitudeResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetAttitudeResponseDefaultTypeInternal _SetAttitudeResponse_default_instance_;

inline constexpr SetAttitudeRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        attitude_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR SetAttitudeRequest::SetAttitudeRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SetAttitudeRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetAttitudeRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetAttitudeRequestDefaultTypeInternal() {}
  union {
    SetAttitudeRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetAttitudeRequestDefaultTypeInternal _SetAttitudeRequest_default_instance_;

inline constexpr SetAttitudeRateResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        offboard_result_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR SetAttitudeRateResponse::SetAttitudeRateResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SetAttitudeRateResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetAttitudeRateResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetAttitudeRateResponseDefaultTypeInternal() {}
  union {
    SetAttitudeRateResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetAttitudeRateResponseDefaultTypeInternal _SetAttitudeRateResponse_default_instance_;

inline constexpr SetAttitudeRateRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        attitude_rate_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR SetAttitudeRateRequest::SetAttitudeRateRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SetAttitudeRateRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetAttitudeRateRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetAttitudeRateRequestDefaultTypeInternal() {}
  union {
    SetAttitudeRateRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetAttitudeRateRequestDefaultTypeInternal _SetAttitudeRateRequest_default_instance_;

inline constexpr SetActuatorControlResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        offboard_result_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR SetActuatorControlResponse::SetActuatorControlResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SetActuatorControlResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetActuatorControlResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetActuatorControlResponseDefaultTypeInternal() {}
  union {
    SetActuatorControlResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetActuatorControlResponseDefaultTypeInternal _SetActuatorControlResponse_default_instance_;

inline constexpr SetAccelerationNedResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        offboard_result_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR SetAccelerationNedResponse::SetAccelerationNedResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SetAccelerationNedResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetAccelerationNedResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetAccelerationNedResponseDefaultTypeInternal() {}
  union {
    SetAccelerationNedResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetAccelerationNedResponseDefaultTypeInternal _SetAccelerationNedResponse_default_instance_;

inline constexpr SetAccelerationNedRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        acceleration_ned_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR SetAccelerationNedRequest::SetAccelerationNedRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SetAccelerationNedRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetAccelerationNedRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetAccelerationNedRequestDefaultTypeInternal() {}
  union {
    SetAccelerationNedRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetAccelerationNedRequestDefaultTypeInternal _SetAccelerationNedRequest_default_instance_;

inline constexpr ActuatorControl::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : groups_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ActuatorControl::ActuatorControl(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ActuatorControlDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ActuatorControlDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ActuatorControlDefaultTypeInternal() {}
  union {
    ActuatorControl _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ActuatorControlDefaultTypeInternal _ActuatorControl_default_instance_;

inline constexpr SetActuatorControlRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        actuator_control_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR SetActuatorControlRequest::SetActuatorControlRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SetActuatorControlRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetActuatorControlRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetActuatorControlRequestDefaultTypeInternal() {}
  union {
    SetActuatorControlRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetActuatorControlRequestDefaultTypeInternal _SetActuatorControlRequest_default_instance_;
}  // namespace offboard
}  // namespace rpc
}  // namespace mavsdk
static ::_pb::Metadata file_level_metadata_offboard_2foffboard_2eproto[36];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_offboard_2foffboard_2eproto[2];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_offboard_2foffboard_2eproto = nullptr;
const ::uint32_t TableStruct_offboard_2foffboard_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::offboard::StartRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::offboard::StartResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::offboard::StartResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::offboard::StartResponse, _impl_.offboard_result_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::offboard::StopRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::offboard::StopResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::offboard::StopResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::offboard::StopResponse, _impl_.offboard_result_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::offboard::IsActiveRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::offboard::IsActiveResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::offboard::IsActiveResponse, _impl_.is_active_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::offboard::SetAttitudeRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::offboard::SetAttitudeRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::offboard::SetAttitudeRequest, _impl_.attitude_),
    0,
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::offboard::SetAttitudeResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::offboard::SetAttitudeResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::offboard::SetAttitudeResponse, _impl_.offboard_result_),
    0,
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::offboard::SetActuatorControlRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::offboard::SetActuatorControlRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::offboard::SetActuatorControlRequest, _impl_.actuator_control_),
    0,
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::offboard::SetActuatorControlResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::offboard::SetActuatorControlResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::offboard::SetActuatorControlResponse, _impl_.offboard_result_),
    0,
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::offboard::SetAttitudeRateRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::offboard::SetAttitudeRateRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::offboard::SetAttitudeRateRequest, _impl_.attitude_rate_),
    0,
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::offboard::SetAttitudeRateResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::offboard::SetAttitudeRateResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::offboard::SetAttitudeRateResponse, _impl_.offboard_result_),
    0,
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::offboard::SetPositionNedRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::offboard::SetPositionNedRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::offboard::SetPositionNedRequest, _impl_.position_ned_yaw_),
    0,
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::offboard::SetPositionNedResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::offboard::SetPositionNedResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::offboard::SetPositionNedResponse, _impl_.offboard_result_),
    0,
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::offboard::SetPositionGlobalRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::offboard::SetPositionGlobalRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::offboard::SetPositionGlobalRequest, _impl_.position_global_yaw_),
    0,
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::offboard::SetPositionGlobalResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::offboard::SetPositionGlobalResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::offboard::SetPositionGlobalResponse, _impl_.offboard_result_),
    0,
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::offboard::SetVelocityBodyRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::offboard::SetVelocityBodyRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::offboard::SetVelocityBodyRequest, _impl_.velocity_body_yawspeed_),
    0,
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::offboard::SetVelocityBodyResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::offboard::SetVelocityBodyResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::offboard::SetVelocityBodyResponse, _impl_.offboard_result_),
    0,
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::offboard::SetVelocityNedRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::offboard::SetVelocityNedRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::offboard::SetVelocityNedRequest, _impl_.velocity_ned_yaw_),
    0,
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::offboard::SetVelocityNedResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::offboard::SetVelocityNedResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::offboard::SetVelocityNedResponse, _impl_.offboard_result_),
    0,
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::offboard::SetPositionVelocityNedRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::offboard::SetPositionVelocityNedRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::offboard::SetPositionVelocityNedRequest, _impl_.position_ned_yaw_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::offboard::SetPositionVelocityNedRequest, _impl_.velocity_ned_yaw_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::offboard::SetPositionVelocityAccelerationNedRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::offboard::SetPositionVelocityAccelerationNedRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::offboard::SetPositionVelocityAccelerationNedRequest, _impl_.position_ned_yaw_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::offboard::SetPositionVelocityAccelerationNedRequest, _impl_.velocity_ned_yaw_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::offboard::SetPositionVelocityAccelerationNedRequest, _impl_.acceleration_ned_),
    0,
    1,
    2,
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::offboard::SetPositionVelocityNedResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::offboard::SetPositionVelocityNedResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::offboard::SetPositionVelocityNedResponse, _impl_.offboard_result_),
    0,
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::offboard::SetPositionVelocityAccelerationNedResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::offboard::SetPositionVelocityAccelerationNedResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::offboard::SetPositionVelocityAccelerationNedResponse, _impl_.offboard_result_),
    0,
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::offboard::SetAccelerationNedRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::offboard::SetAccelerationNedRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::offboard::SetAccelerationNedRequest, _impl_.acceleration_ned_),
    0,
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::offboard::SetAccelerationNedResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::offboard::SetAccelerationNedResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::offboard::SetAccelerationNedResponse, _impl_.offboard_result_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::offboard::Attitude, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::offboard::Attitude, _impl_.roll_deg_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::offboard::Attitude, _impl_.pitch_deg_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::offboard::Attitude, _impl_.yaw_deg_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::offboard::Attitude, _impl_.thrust_value_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::offboard::ActuatorControlGroup, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::offboard::ActuatorControlGroup, _impl_.controls_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::offboard::ActuatorControl, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::offboard::ActuatorControl, _impl_.groups_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::offboard::AttitudeRate, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::offboard::AttitudeRate, _impl_.roll_deg_s_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::offboard::AttitudeRate, _impl_.pitch_deg_s_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::offboard::AttitudeRate, _impl_.yaw_deg_s_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::offboard::AttitudeRate, _impl_.thrust_value_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::offboard::PositionNedYaw, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::offboard::PositionNedYaw, _impl_.north_m_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::offboard::PositionNedYaw, _impl_.east_m_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::offboard::PositionNedYaw, _impl_.down_m_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::offboard::PositionNedYaw, _impl_.yaw_deg_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::offboard::PositionGlobalYaw, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::offboard::PositionGlobalYaw, _impl_.lat_deg_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::offboard::PositionGlobalYaw, _impl_.lon_deg_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::offboard::PositionGlobalYaw, _impl_.alt_m_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::offboard::PositionGlobalYaw, _impl_.yaw_deg_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::offboard::PositionGlobalYaw, _impl_.altitude_type_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::offboard::VelocityBodyYawspeed, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::offboard::VelocityBodyYawspeed, _impl_.forward_m_s_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::offboard::VelocityBodyYawspeed, _impl_.right_m_s_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::offboard::VelocityBodyYawspeed, _impl_.down_m_s_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::offboard::VelocityBodyYawspeed, _impl_.yawspeed_deg_s_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::offboard::VelocityNedYaw, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::offboard::VelocityNedYaw, _impl_.north_m_s_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::offboard::VelocityNedYaw, _impl_.east_m_s_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::offboard::VelocityNedYaw, _impl_.down_m_s_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::offboard::VelocityNedYaw, _impl_.yaw_deg_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::offboard::AccelerationNed, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::offboard::AccelerationNed, _impl_.north_m_s2_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::offboard::AccelerationNed, _impl_.east_m_s2_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::offboard::AccelerationNed, _impl_.down_m_s2_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::offboard::OffboardResult, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::offboard::OffboardResult, _impl_.result_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::offboard::OffboardResult, _impl_.result_str_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::mavsdk::rpc::offboard::StartRequest)},
        {8, 17, -1, sizeof(::mavsdk::rpc::offboard::StartResponse)},
        {18, -1, -1, sizeof(::mavsdk::rpc::offboard::StopRequest)},
        {26, 35, -1, sizeof(::mavsdk::rpc::offboard::StopResponse)},
        {36, -1, -1, sizeof(::mavsdk::rpc::offboard::IsActiveRequest)},
        {44, -1, -1, sizeof(::mavsdk::rpc::offboard::IsActiveResponse)},
        {53, 62, -1, sizeof(::mavsdk::rpc::offboard::SetAttitudeRequest)},
        {63, 72, -1, sizeof(::mavsdk::rpc::offboard::SetAttitudeResponse)},
        {73, 82, -1, sizeof(::mavsdk::rpc::offboard::SetActuatorControlRequest)},
        {83, 92, -1, sizeof(::mavsdk::rpc::offboard::SetActuatorControlResponse)},
        {93, 102, -1, sizeof(::mavsdk::rpc::offboard::SetAttitudeRateRequest)},
        {103, 112, -1, sizeof(::mavsdk::rpc::offboard::SetAttitudeRateResponse)},
        {113, 122, -1, sizeof(::mavsdk::rpc::offboard::SetPositionNedRequest)},
        {123, 132, -1, sizeof(::mavsdk::rpc::offboard::SetPositionNedResponse)},
        {133, 142, -1, sizeof(::mavsdk::rpc::offboard::SetPositionGlobalRequest)},
        {143, 152, -1, sizeof(::mavsdk::rpc::offboard::SetPositionGlobalResponse)},
        {153, 162, -1, sizeof(::mavsdk::rpc::offboard::SetVelocityBodyRequest)},
        {163, 172, -1, sizeof(::mavsdk::rpc::offboard::SetVelocityBodyResponse)},
        {173, 182, -1, sizeof(::mavsdk::rpc::offboard::SetVelocityNedRequest)},
        {183, 192, -1, sizeof(::mavsdk::rpc::offboard::SetVelocityNedResponse)},
        {193, 203, -1, sizeof(::mavsdk::rpc::offboard::SetPositionVelocityNedRequest)},
        {205, 216, -1, sizeof(::mavsdk::rpc::offboard::SetPositionVelocityAccelerationNedRequest)},
        {219, 228, -1, sizeof(::mavsdk::rpc::offboard::SetPositionVelocityNedResponse)},
        {229, 238, -1, sizeof(::mavsdk::rpc::offboard::SetPositionVelocityAccelerationNedResponse)},
        {239, 248, -1, sizeof(::mavsdk::rpc::offboard::SetAccelerationNedRequest)},
        {249, 258, -1, sizeof(::mavsdk::rpc::offboard::SetAccelerationNedResponse)},
        {259, -1, -1, sizeof(::mavsdk::rpc::offboard::Attitude)},
        {271, -1, -1, sizeof(::mavsdk::rpc::offboard::ActuatorControlGroup)},
        {280, -1, -1, sizeof(::mavsdk::rpc::offboard::ActuatorControl)},
        {289, -1, -1, sizeof(::mavsdk::rpc::offboard::AttitudeRate)},
        {301, -1, -1, sizeof(::mavsdk::rpc::offboard::PositionNedYaw)},
        {313, -1, -1, sizeof(::mavsdk::rpc::offboard::PositionGlobalYaw)},
        {326, -1, -1, sizeof(::mavsdk::rpc::offboard::VelocityBodyYawspeed)},
        {338, -1, -1, sizeof(::mavsdk::rpc::offboard::VelocityNedYaw)},
        {350, -1, -1, sizeof(::mavsdk::rpc::offboard::AccelerationNed)},
        {361, -1, -1, sizeof(::mavsdk::rpc::offboard::OffboardResult)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::mavsdk::rpc::offboard::_StartRequest_default_instance_._instance,
    &::mavsdk::rpc::offboard::_StartResponse_default_instance_._instance,
    &::mavsdk::rpc::offboard::_StopRequest_default_instance_._instance,
    &::mavsdk::rpc::offboard::_StopResponse_default_instance_._instance,
    &::mavsdk::rpc::offboard::_IsActiveRequest_default_instance_._instance,
    &::mavsdk::rpc::offboard::_IsActiveResponse_default_instance_._instance,
    &::mavsdk::rpc::offboard::_SetAttitudeRequest_default_instance_._instance,
    &::mavsdk::rpc::offboard::_SetAttitudeResponse_default_instance_._instance,
    &::mavsdk::rpc::offboard::_SetActuatorControlRequest_default_instance_._instance,
    &::mavsdk::rpc::offboard::_SetActuatorControlResponse_default_instance_._instance,
    &::mavsdk::rpc::offboard::_SetAttitudeRateRequest_default_instance_._instance,
    &::mavsdk::rpc::offboard::_SetAttitudeRateResponse_default_instance_._instance,
    &::mavsdk::rpc::offboard::_SetPositionNedRequest_default_instance_._instance,
    &::mavsdk::rpc::offboard::_SetPositionNedResponse_default_instance_._instance,
    &::mavsdk::rpc::offboard::_SetPositionGlobalRequest_default_instance_._instance,
    &::mavsdk::rpc::offboard::_SetPositionGlobalResponse_default_instance_._instance,
    &::mavsdk::rpc::offboard::_SetVelocityBodyRequest_default_instance_._instance,
    &::mavsdk::rpc::offboard::_SetVelocityBodyResponse_default_instance_._instance,
    &::mavsdk::rpc::offboard::_SetVelocityNedRequest_default_instance_._instance,
    &::mavsdk::rpc::offboard::_SetVelocityNedResponse_default_instance_._instance,
    &::mavsdk::rpc::offboard::_SetPositionVelocityNedRequest_default_instance_._instance,
    &::mavsdk::rpc::offboard::_SetPositionVelocityAccelerationNedRequest_default_instance_._instance,
    &::mavsdk::rpc::offboard::_SetPositionVelocityNedResponse_default_instance_._instance,
    &::mavsdk::rpc::offboard::_SetPositionVelocityAccelerationNedResponse_default_instance_._instance,
    &::mavsdk::rpc::offboard::_SetAccelerationNedRequest_default_instance_._instance,
    &::mavsdk::rpc::offboard::_SetAccelerationNedResponse_default_instance_._instance,
    &::mavsdk::rpc::offboard::_Attitude_default_instance_._instance,
    &::mavsdk::rpc::offboard::_ActuatorControlGroup_default_instance_._instance,
    &::mavsdk::rpc::offboard::_ActuatorControl_default_instance_._instance,
    &::mavsdk::rpc::offboard::_AttitudeRate_default_instance_._instance,
    &::mavsdk::rpc::offboard::_PositionNedYaw_default_instance_._instance,
    &::mavsdk::rpc::offboard::_PositionGlobalYaw_default_instance_._instance,
    &::mavsdk::rpc::offboard::_VelocityBodyYawspeed_default_instance_._instance,
    &::mavsdk::rpc::offboard::_VelocityNedYaw_default_instance_._instance,
    &::mavsdk::rpc::offboard::_AccelerationNed_default_instance_._instance,
    &::mavsdk::rpc::offboard::_OffboardResult_default_instance_._instance,
};
const char descriptor_table_protodef_offboard_2foffboard_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\027offboard/offboard.proto\022\023mavsdk.rpc.of"
    "fboard\032\024mavsdk_options.proto\"\016\n\014StartReq"
    "uest\"M\n\rStartResponse\022<\n\017offboard_result"
    "\030\001 \001(\0132#.mavsdk.rpc.offboard.OffboardRes"
    "ult\"\r\n\013StopRequest\"L\n\014StopResponse\022<\n\017of"
    "fboard_result\030\001 \001(\0132#.mavsdk.rpc.offboar"
    "d.OffboardResult\"\021\n\017IsActiveRequest\"%\n\020I"
    "sActiveResponse\022\021\n\tis_active\030\001 \001(\010\"E\n\022Se"
    "tAttitudeRequest\022/\n\010attitude\030\001 \001(\0132\035.mav"
    "sdk.rpc.offboard.Attitude\"S\n\023SetAttitude"
    "Response\022<\n\017offboard_result\030\001 \001(\0132#.mavs"
    "dk.rpc.offboard.OffboardResult\"[\n\031SetAct"
    "uatorControlRequest\022>\n\020actuator_control\030"
    "\001 \001(\0132$.mavsdk.rpc.offboard.ActuatorCont"
    "rol\"Z\n\032SetActuatorControlResponse\022<\n\017off"
    "board_result\030\001 \001(\0132#.mavsdk.rpc.offboard"
    ".OffboardResult\"R\n\026SetAttitudeRateReques"
    "t\0228\n\rattitude_rate\030\001 \001(\0132!.mavsdk.rpc.of"
    "fboard.AttitudeRate\"W\n\027SetAttitudeRateRe"
    "sponse\022<\n\017offboard_result\030\001 \001(\0132#.mavsdk"
    ".rpc.offboard.OffboardResult\"V\n\025SetPosit"
    "ionNedRequest\022=\n\020position_ned_yaw\030\001 \001(\0132"
    "#.mavsdk.rpc.offboard.PositionNedYaw\"V\n\026"
    "SetPositionNedResponse\022<\n\017offboard_resul"
    "t\030\001 \001(\0132#.mavsdk.rpc.offboard.OffboardRe"
    "sult\"_\n\030SetPositionGlobalRequest\022C\n\023posi"
    "tion_global_yaw\030\001 \001(\0132&.mavsdk.rpc.offbo"
    "ard.PositionGlobalYaw\"Y\n\031SetPositionGlob"
    "alResponse\022<\n\017offboard_result\030\001 \001(\0132#.ma"
    "vsdk.rpc.offboard.OffboardResult\"c\n\026SetV"
    "elocityBodyRequest\022I\n\026velocity_body_yaws"
    "peed\030\001 \001(\0132).mavsdk.rpc.offboard.Velocit"
    "yBodyYawspeed\"W\n\027SetVelocityBodyResponse"
    "\022<\n\017offboard_result\030\001 \001(\0132#.mavsdk.rpc.o"
    "ffboard.OffboardResult\"V\n\025SetVelocityNed"
    "Request\022=\n\020velocity_ned_yaw\030\001 \001(\0132#.mavs"
    "dk.rpc.offboard.VelocityNedYaw\"V\n\026SetVel"
    "ocityNedResponse\022<\n\017offboard_result\030\001 \001("
    "\0132#.mavsdk.rpc.offboard.OffboardResult\"\235"
    "\001\n\035SetPositionVelocityNedRequest\022=\n\020posi"
    "tion_ned_yaw\030\001 \001(\0132#.mavsdk.rpc.offboard"
    ".PositionNedYaw\022=\n\020velocity_ned_yaw\030\002 \001("
    "\0132#.mavsdk.rpc.offboard.VelocityNedYaw\"\351"
    "\001\n)SetPositionVelocityAccelerationNedReq"
    "uest\022=\n\020position_ned_yaw\030\001 \001(\0132#.mavsdk."
    "rpc.offboard.PositionNedYaw\022=\n\020velocity_"
    "ned_yaw\030\002 \001(\0132#.mavsdk.rpc.offboard.Velo"
    "cityNedYaw\022>\n\020acceleration_ned\030\003 \001(\0132$.m"
    "avsdk.rpc.offboard.AccelerationNed\"^\n\036Se"
    "tPositionVelocityNedResponse\022<\n\017offboard"
    "_result\030\001 \001(\0132#.mavsdk.rpc.offboard.Offb"
    "oardResult\"j\n*SetPositionVelocityAcceler"
    "ationNedResponse\022<\n\017offboard_result\030\001 \001("
    "\0132#.mavsdk.rpc.offboard.OffboardResult\"["
    "\n\031SetAccelerationNedRequest\022>\n\020accelerat"
    "ion_ned\030\001 \001(\0132$.mavsdk.rpc.offboard.Acce"
    "lerationNed\"Z\n\032SetAccelerationNedRespons"
    "e\022<\n\017offboard_result\030\001 \001(\0132#.mavsdk.rpc."
    "offboard.OffboardResult\"V\n\010Attitude\022\020\n\010r"
    "oll_deg\030\001 \001(\002\022\021\n\tpitch_deg\030\002 \001(\002\022\017\n\007yaw_"
    "deg\030\003 \001(\002\022\024\n\014thrust_value\030\004 \001(\002\"(\n\024Actua"
    "torControlGroup\022\020\n\010controls\030\001 \003(\002\"L\n\017Act"
    "uatorControl\0229\n\006groups\030\001 \003(\0132).mavsdk.rp"
    "c.offboard.ActuatorControlGroup\"`\n\014Attit"
    "udeRate\022\022\n\nroll_deg_s\030\001 \001(\002\022\023\n\013pitch_deg"
    "_s\030\002 \001(\002\022\021\n\tyaw_deg_s\030\003 \001(\002\022\024\n\014thrust_va"
    "lue\030\004 \001(\002\"R\n\016PositionNedYaw\022\017\n\007north_m\030\001"
    " \001(\002\022\016\n\006east_m\030\002 \001(\002\022\016\n\006down_m\030\003 \001(\002\022\017\n\007"
    "yaw_deg\030\004 \001(\002\"\374\001\n\021PositionGlobalYaw\022\017\n\007l"
    "at_deg\030\001 \001(\001\022\017\n\007lon_deg\030\002 \001(\001\022\r\n\005alt_m\030\003"
    " \001(\002\022\017\n\007yaw_deg\030\004 \001(\002\022J\n\raltitude_type\030\005"
    " \001(\01623.mavsdk.rpc.offboard.PositionGloba"
    "lYaw.AltitudeType\"Y\n\014AltitudeType\022\032\n\026ALT"
    "ITUDE_TYPE_REL_HOME\020\000\022\026\n\022ALTITUDE_TYPE_A"
    "MSL\020\001\022\025\n\021ALTITUDE_TYPE_AGL\020\002\"h\n\024Velocity"
    "BodyYawspeed\022\023\n\013forward_m_s\030\001 \001(\002\022\021\n\trig"
    "ht_m_s\030\002 \001(\002\022\020\n\010down_m_s\030\003 \001(\002\022\026\n\016yawspe"
    "ed_deg_s\030\004 \001(\002\"X\n\016VelocityNedYaw\022\021\n\tnort"
    "h_m_s\030\001 \001(\002\022\020\n\010east_m_s\030\002 \001(\002\022\020\n\010down_m_"
    "s\030\003 \001(\002\022\017\n\007yaw_deg\030\004 \001(\002\"K\n\017Acceleration"
    "Ned\022\022\n\nnorth_m_s2\030\001 \001(\002\022\021\n\teast_m_s2\030\002 \001"
    "(\002\022\021\n\tdown_m_s2\030\003 \001(\002\"\265\002\n\016OffboardResult"
    "\022:\n\006result\030\001 \001(\0162*.mavsdk.rpc.offboard.O"
    "ffboardResult.Result\022\022\n\nresult_str\030\002 \001(\t"
    "\"\322\001\n\006Result\022\022\n\016RESULT_UNKNOWN\020\000\022\022\n\016RESUL"
    "T_SUCCESS\020\001\022\024\n\020RESULT_NO_SYSTEM\020\002\022\033\n\027RES"
    "ULT_CONNECTION_ERROR\020\003\022\017\n\013RESULT_BUSY\020\004\022"
    "\031\n\025RESULT_COMMAND_DENIED\020\005\022\022\n\016RESULT_TIM"
    "EOUT\020\006\022\032\n\026RESULT_NO_SETPOINT_SET\020\007\022\021\n\rRE"
    "SULT_FAILED\020\0102\357\013\n\017OffboardService\022P\n\005Sta"
    "rt\022!.mavsdk.rpc.offboard.StartRequest\032\"."
    "mavsdk.rpc.offboard.StartResponse\"\000\022M\n\004S"
    "top\022 .mavsdk.rpc.offboard.StopRequest\032!."
    "mavsdk.rpc.offboard.StopResponse\"\000\022]\n\010Is"
    "Active\022$.mavsdk.rpc.offboard.IsActiveReq"
    "uest\032%.mavsdk.rpc.offboard.IsActiveRespo"
    "nse\"\004\200\265\030\001\022f\n\013SetAttitude\022\'.mavsdk.rpc.of"
    "fboard.SetAttitudeRequest\032(.mavsdk.rpc.o"
    "ffboard.SetAttitudeResponse\"\004\200\265\030\001\022{\n\022Set"
    "ActuatorControl\022..mavsdk.rpc.offboard.Se"
    "tActuatorControlRequest\032/.mavsdk.rpc.off"
    "board.SetActuatorControlResponse\"\004\200\265\030\001\022r"
    "\n\017SetAttitudeRate\022+.mavsdk.rpc.offboard."
    "SetAttitudeRateRequest\032,.mavsdk.rpc.offb"
    "oard.SetAttitudeRateResponse\"\004\200\265\030\001\022o\n\016Se"
    "tPositionNed\022*.mavsdk.rpc.offboard.SetPo"
    "sitionNedRequest\032+.mavsdk.rpc.offboard.S"
    "etPositionNedResponse\"\004\200\265\030\001\022x\n\021SetPositi"
    "onGlobal\022-.mavsdk.rpc.offboard.SetPositi"
    "onGlobalRequest\032..mavsdk.rpc.offboard.Se"
    "tPositionGlobalResponse\"\004\200\265\030\001\022r\n\017SetVelo"
    "cityBody\022+.mavsdk.rpc.offboard.SetVeloci"
    "tyBodyRequest\032,.mavsdk.rpc.offboard.SetV"
    "elocityBodyResponse\"\004\200\265\030\001\022o\n\016SetVelocity"
    "Ned\022*.mavsdk.rpc.offboard.SetVelocityNed"
    "Request\032+.mavsdk.rpc.offboard.SetVelocit"
    "yNedResponse\"\004\200\265\030\001\022\207\001\n\026SetPositionVeloci"
    "tyNed\0222.mavsdk.rpc.offboard.SetPositionV"
    "elocityNedRequest\0323.mavsdk.rpc.offboard."
    "SetPositionVelocityNedResponse\"\004\200\265\030\001\022\253\001\n"
    "\"SetPositionVelocityAccelerationNed\022>.ma"
    "vsdk.rpc.offboard.SetPositionVelocityAcc"
    "elerationNedRequest\032\?.mavsdk.rpc.offboar"
    "d.SetPositionVelocityAccelerationNedResp"
    "onse\"\004\200\265\030\001\022{\n\022SetAccelerationNed\022..mavsd"
    "k.rpc.offboard.SetAccelerationNedRequest"
    "\032/.mavsdk.rpc.offboard.SetAccelerationNe"
    "dResponse\"\004\200\265\030\001B#\n\022io.mavsdk.offboardB\rO"
    "ffboardProtob\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_offboard_2foffboard_2eproto_deps[1] =
    {
        &::descriptor_table_mavsdk_5foptions_2eproto,
};
static ::absl::once_flag descriptor_table_offboard_2foffboard_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_offboard_2foffboard_2eproto = {
    false,
    false,
    5140,
    descriptor_table_protodef_offboard_2foffboard_2eproto,
    "offboard/offboard.proto",
    &descriptor_table_offboard_2foffboard_2eproto_once,
    descriptor_table_offboard_2foffboard_2eproto_deps,
    1,
    36,
    schemas,
    file_default_instances,
    TableStruct_offboard_2foffboard_2eproto::offsets,
    file_level_metadata_offboard_2foffboard_2eproto,
    file_level_enum_descriptors_offboard_2foffboard_2eproto,
    file_level_service_descriptors_offboard_2foffboard_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_offboard_2foffboard_2eproto_getter() {
  return &descriptor_table_offboard_2foffboard_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_offboard_2foffboard_2eproto(&descriptor_table_offboard_2foffboard_2eproto);
namespace mavsdk {
namespace rpc {
namespace offboard {
const ::google::protobuf::EnumDescriptor* PositionGlobalYaw_AltitudeType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_offboard_2foffboard_2eproto);
  return file_level_enum_descriptors_offboard_2foffboard_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t PositionGlobalYaw_AltitudeType_internal_data_[] = {
    196608u, 0u, };
bool PositionGlobalYaw_AltitudeType_IsValid(int value) {
  return 0 <= value && value <= 2;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr PositionGlobalYaw_AltitudeType PositionGlobalYaw::ALTITUDE_TYPE_REL_HOME;
constexpr PositionGlobalYaw_AltitudeType PositionGlobalYaw::ALTITUDE_TYPE_AMSL;
constexpr PositionGlobalYaw_AltitudeType PositionGlobalYaw::ALTITUDE_TYPE_AGL;
constexpr PositionGlobalYaw_AltitudeType PositionGlobalYaw::AltitudeType_MIN;
constexpr PositionGlobalYaw_AltitudeType PositionGlobalYaw::AltitudeType_MAX;
constexpr int PositionGlobalYaw::AltitudeType_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* OffboardResult_Result_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_offboard_2foffboard_2eproto);
  return file_level_enum_descriptors_offboard_2foffboard_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t OffboardResult_Result_internal_data_[] = {
    589824u, 0u, };
bool OffboardResult_Result_IsValid(int value) {
  return 0 <= value && value <= 8;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr OffboardResult_Result OffboardResult::RESULT_UNKNOWN;
constexpr OffboardResult_Result OffboardResult::RESULT_SUCCESS;
constexpr OffboardResult_Result OffboardResult::RESULT_NO_SYSTEM;
constexpr OffboardResult_Result OffboardResult::RESULT_CONNECTION_ERROR;
constexpr OffboardResult_Result OffboardResult::RESULT_BUSY;
constexpr OffboardResult_Result OffboardResult::RESULT_COMMAND_DENIED;
constexpr OffboardResult_Result OffboardResult::RESULT_TIMEOUT;
constexpr OffboardResult_Result OffboardResult::RESULT_NO_SETPOINT_SET;
constexpr OffboardResult_Result OffboardResult::RESULT_FAILED;
constexpr OffboardResult_Result OffboardResult::Result_MIN;
constexpr OffboardResult_Result OffboardResult::Result_MAX;
constexpr int OffboardResult::Result_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
// ===================================================================

class StartRequest::_Internal {
 public:
};

StartRequest::StartRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.offboard.StartRequest)
}
StartRequest::StartRequest(
    ::google::protobuf::Arena* arena,
    const StartRequest& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  StartRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.offboard.StartRequest)
}









::google::protobuf::Metadata StartRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_offboard_2foffboard_2eproto_getter, &descriptor_table_offboard_2foffboard_2eproto_once,
      file_level_metadata_offboard_2foffboard_2eproto[0]);
}
// ===================================================================

class StartResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<StartResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(StartResponse, _impl_._has_bits_);
  static const ::mavsdk::rpc::offboard::OffboardResult& offboard_result(const StartResponse* msg);
  static void set_has_offboard_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::offboard::OffboardResult& StartResponse::_Internal::offboard_result(const StartResponse* msg) {
  return *msg->_impl_.offboard_result_;
}
StartResponse::StartResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.offboard.StartResponse)
}
inline PROTOBUF_NDEBUG_INLINE StartResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

StartResponse::StartResponse(
    ::google::protobuf::Arena* arena,
    const StartResponse& from)
    : ::google::protobuf::Message(arena) {
  StartResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.offboard_result_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::offboard::OffboardResult>(arena, *from._impl_.offboard_result_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.offboard.StartResponse)
}
inline PROTOBUF_NDEBUG_INLINE StartResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void StartResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.offboard_result_ = {};
}
StartResponse::~StartResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.offboard.StartResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void StartResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.offboard_result_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void StartResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.offboard.StartResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.offboard_result_ != nullptr);
    _impl_.offboard_result_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* StartResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> StartResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(StartResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_StartResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.offboard.OffboardResult offboard_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(StartResponse, _impl_.offboard_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.offboard.OffboardResult offboard_result = 1;
    {PROTOBUF_FIELD_OFFSET(StartResponse, _impl_.offboard_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::offboard::OffboardResult>()},
  }}, {{
  }},
};

::uint8_t* StartResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.offboard.StartResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.offboard.OffboardResult offboard_result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::offboard_result(this),
        _Internal::offboard_result(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.offboard.StartResponse)
  return target;
}

::size_t StartResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.offboard.StartResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.offboard.OffboardResult offboard_result = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.offboard_result_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData StartResponse::_class_data_ = {
    StartResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* StartResponse::GetClassData() const {
  return &_class_data_;
}

void StartResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<StartResponse*>(&to_msg);
  auto& from = static_cast<const StartResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.offboard.StartResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_offboard_result()->::mavsdk::rpc::offboard::OffboardResult::MergeFrom(
        from._internal_offboard_result());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void StartResponse::CopyFrom(const StartResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.offboard.StartResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool StartResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* StartResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void StartResponse::InternalSwap(StartResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.offboard_result_, other->_impl_.offboard_result_);
}

::google::protobuf::Metadata StartResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_offboard_2foffboard_2eproto_getter, &descriptor_table_offboard_2foffboard_2eproto_once,
      file_level_metadata_offboard_2foffboard_2eproto[1]);
}
// ===================================================================

class StopRequest::_Internal {
 public:
};

StopRequest::StopRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.offboard.StopRequest)
}
StopRequest::StopRequest(
    ::google::protobuf::Arena* arena,
    const StopRequest& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  StopRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.offboard.StopRequest)
}









::google::protobuf::Metadata StopRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_offboard_2foffboard_2eproto_getter, &descriptor_table_offboard_2foffboard_2eproto_once,
      file_level_metadata_offboard_2foffboard_2eproto[2]);
}
// ===================================================================

class StopResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<StopResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(StopResponse, _impl_._has_bits_);
  static const ::mavsdk::rpc::offboard::OffboardResult& offboard_result(const StopResponse* msg);
  static void set_has_offboard_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::offboard::OffboardResult& StopResponse::_Internal::offboard_result(const StopResponse* msg) {
  return *msg->_impl_.offboard_result_;
}
StopResponse::StopResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.offboard.StopResponse)
}
inline PROTOBUF_NDEBUG_INLINE StopResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

StopResponse::StopResponse(
    ::google::protobuf::Arena* arena,
    const StopResponse& from)
    : ::google::protobuf::Message(arena) {
  StopResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.offboard_result_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::offboard::OffboardResult>(arena, *from._impl_.offboard_result_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.offboard.StopResponse)
}
inline PROTOBUF_NDEBUG_INLINE StopResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void StopResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.offboard_result_ = {};
}
StopResponse::~StopResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.offboard.StopResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void StopResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.offboard_result_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void StopResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.offboard.StopResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.offboard_result_ != nullptr);
    _impl_.offboard_result_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* StopResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> StopResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(StopResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_StopResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.offboard.OffboardResult offboard_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(StopResponse, _impl_.offboard_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.offboard.OffboardResult offboard_result = 1;
    {PROTOBUF_FIELD_OFFSET(StopResponse, _impl_.offboard_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::offboard::OffboardResult>()},
  }}, {{
  }},
};

::uint8_t* StopResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.offboard.StopResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.offboard.OffboardResult offboard_result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::offboard_result(this),
        _Internal::offboard_result(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.offboard.StopResponse)
  return target;
}

::size_t StopResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.offboard.StopResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.offboard.OffboardResult offboard_result = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.offboard_result_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData StopResponse::_class_data_ = {
    StopResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* StopResponse::GetClassData() const {
  return &_class_data_;
}

void StopResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<StopResponse*>(&to_msg);
  auto& from = static_cast<const StopResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.offboard.StopResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_offboard_result()->::mavsdk::rpc::offboard::OffboardResult::MergeFrom(
        from._internal_offboard_result());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void StopResponse::CopyFrom(const StopResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.offboard.StopResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool StopResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* StopResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void StopResponse::InternalSwap(StopResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.offboard_result_, other->_impl_.offboard_result_);
}

::google::protobuf::Metadata StopResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_offboard_2foffboard_2eproto_getter, &descriptor_table_offboard_2foffboard_2eproto_once,
      file_level_metadata_offboard_2foffboard_2eproto[3]);
}
// ===================================================================

class IsActiveRequest::_Internal {
 public:
};

IsActiveRequest::IsActiveRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.offboard.IsActiveRequest)
}
IsActiveRequest::IsActiveRequest(
    ::google::protobuf::Arena* arena,
    const IsActiveRequest& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  IsActiveRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.offboard.IsActiveRequest)
}









::google::protobuf::Metadata IsActiveRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_offboard_2foffboard_2eproto_getter, &descriptor_table_offboard_2foffboard_2eproto_once,
      file_level_metadata_offboard_2foffboard_2eproto[4]);
}
// ===================================================================

class IsActiveResponse::_Internal {
 public:
};

IsActiveResponse::IsActiveResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.offboard.IsActiveResponse)
}
IsActiveResponse::IsActiveResponse(
    ::google::protobuf::Arena* arena, const IsActiveResponse& from)
    : IsActiveResponse(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE IsActiveResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void IsActiveResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.is_active_ = {};
}
IsActiveResponse::~IsActiveResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.offboard.IsActiveResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void IsActiveResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void IsActiveResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.offboard.IsActiveResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.is_active_ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* IsActiveResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> IsActiveResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_IsActiveResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // bool is_active = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(IsActiveResponse, _impl_.is_active_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(IsActiveResponse, _impl_.is_active_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool is_active = 1;
    {PROTOBUF_FIELD_OFFSET(IsActiveResponse, _impl_.is_active_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* IsActiveResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.offboard.IsActiveResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bool is_active = 1;
  if (this->_internal_is_active() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        1, this->_internal_is_active(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.offboard.IsActiveResponse)
  return target;
}

::size_t IsActiveResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.offboard.IsActiveResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool is_active = 1;
  if (this->_internal_is_active() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData IsActiveResponse::_class_data_ = {
    IsActiveResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* IsActiveResponse::GetClassData() const {
  return &_class_data_;
}

void IsActiveResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<IsActiveResponse*>(&to_msg);
  auto& from = static_cast<const IsActiveResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.offboard.IsActiveResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_is_active() != 0) {
    _this->_internal_set_is_active(from._internal_is_active());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void IsActiveResponse::CopyFrom(const IsActiveResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.offboard.IsActiveResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool IsActiveResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* IsActiveResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void IsActiveResponse::InternalSwap(IsActiveResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.is_active_, other->_impl_.is_active_);
}

::google::protobuf::Metadata IsActiveResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_offboard_2foffboard_2eproto_getter, &descriptor_table_offboard_2foffboard_2eproto_once,
      file_level_metadata_offboard_2foffboard_2eproto[5]);
}
// ===================================================================

class SetAttitudeRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<SetAttitudeRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SetAttitudeRequest, _impl_._has_bits_);
  static const ::mavsdk::rpc::offboard::Attitude& attitude(const SetAttitudeRequest* msg);
  static void set_has_attitude(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::offboard::Attitude& SetAttitudeRequest::_Internal::attitude(const SetAttitudeRequest* msg) {
  return *msg->_impl_.attitude_;
}
SetAttitudeRequest::SetAttitudeRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.offboard.SetAttitudeRequest)
}
inline PROTOBUF_NDEBUG_INLINE SetAttitudeRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SetAttitudeRequest::SetAttitudeRequest(
    ::google::protobuf::Arena* arena,
    const SetAttitudeRequest& from)
    : ::google::protobuf::Message(arena) {
  SetAttitudeRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.attitude_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::offboard::Attitude>(arena, *from._impl_.attitude_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.offboard.SetAttitudeRequest)
}
inline PROTOBUF_NDEBUG_INLINE SetAttitudeRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetAttitudeRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.attitude_ = {};
}
SetAttitudeRequest::~SetAttitudeRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.offboard.SetAttitudeRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SetAttitudeRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.attitude_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SetAttitudeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.offboard.SetAttitudeRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.attitude_ != nullptr);
    _impl_.attitude_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SetAttitudeRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> SetAttitudeRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SetAttitudeRequest, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SetAttitudeRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.offboard.Attitude attitude = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SetAttitudeRequest, _impl_.attitude_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.offboard.Attitude attitude = 1;
    {PROTOBUF_FIELD_OFFSET(SetAttitudeRequest, _impl_.attitude_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::offboard::Attitude>()},
  }}, {{
  }},
};

::uint8_t* SetAttitudeRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.offboard.SetAttitudeRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.offboard.Attitude attitude = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::attitude(this),
        _Internal::attitude(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.offboard.SetAttitudeRequest)
  return target;
}

::size_t SetAttitudeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.offboard.SetAttitudeRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.offboard.Attitude attitude = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.attitude_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SetAttitudeRequest::_class_data_ = {
    SetAttitudeRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SetAttitudeRequest::GetClassData() const {
  return &_class_data_;
}

void SetAttitudeRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SetAttitudeRequest*>(&to_msg);
  auto& from = static_cast<const SetAttitudeRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.offboard.SetAttitudeRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_attitude()->::mavsdk::rpc::offboard::Attitude::MergeFrom(
        from._internal_attitude());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetAttitudeRequest::CopyFrom(const SetAttitudeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.offboard.SetAttitudeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SetAttitudeRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SetAttitudeRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SetAttitudeRequest::InternalSwap(SetAttitudeRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.attitude_, other->_impl_.attitude_);
}

::google::protobuf::Metadata SetAttitudeRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_offboard_2foffboard_2eproto_getter, &descriptor_table_offboard_2foffboard_2eproto_once,
      file_level_metadata_offboard_2foffboard_2eproto[6]);
}
// ===================================================================

class SetAttitudeResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<SetAttitudeResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SetAttitudeResponse, _impl_._has_bits_);
  static const ::mavsdk::rpc::offboard::OffboardResult& offboard_result(const SetAttitudeResponse* msg);
  static void set_has_offboard_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::offboard::OffboardResult& SetAttitudeResponse::_Internal::offboard_result(const SetAttitudeResponse* msg) {
  return *msg->_impl_.offboard_result_;
}
SetAttitudeResponse::SetAttitudeResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.offboard.SetAttitudeResponse)
}
inline PROTOBUF_NDEBUG_INLINE SetAttitudeResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SetAttitudeResponse::SetAttitudeResponse(
    ::google::protobuf::Arena* arena,
    const SetAttitudeResponse& from)
    : ::google::protobuf::Message(arena) {
  SetAttitudeResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.offboard_result_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::offboard::OffboardResult>(arena, *from._impl_.offboard_result_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.offboard.SetAttitudeResponse)
}
inline PROTOBUF_NDEBUG_INLINE SetAttitudeResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetAttitudeResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.offboard_result_ = {};
}
SetAttitudeResponse::~SetAttitudeResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.offboard.SetAttitudeResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SetAttitudeResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.offboard_result_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SetAttitudeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.offboard.SetAttitudeResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.offboard_result_ != nullptr);
    _impl_.offboard_result_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SetAttitudeResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> SetAttitudeResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SetAttitudeResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SetAttitudeResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.offboard.OffboardResult offboard_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SetAttitudeResponse, _impl_.offboard_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.offboard.OffboardResult offboard_result = 1;
    {PROTOBUF_FIELD_OFFSET(SetAttitudeResponse, _impl_.offboard_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::offboard::OffboardResult>()},
  }}, {{
  }},
};

::uint8_t* SetAttitudeResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.offboard.SetAttitudeResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.offboard.OffboardResult offboard_result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::offboard_result(this),
        _Internal::offboard_result(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.offboard.SetAttitudeResponse)
  return target;
}

::size_t SetAttitudeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.offboard.SetAttitudeResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.offboard.OffboardResult offboard_result = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.offboard_result_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SetAttitudeResponse::_class_data_ = {
    SetAttitudeResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SetAttitudeResponse::GetClassData() const {
  return &_class_data_;
}

void SetAttitudeResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SetAttitudeResponse*>(&to_msg);
  auto& from = static_cast<const SetAttitudeResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.offboard.SetAttitudeResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_offboard_result()->::mavsdk::rpc::offboard::OffboardResult::MergeFrom(
        from._internal_offboard_result());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetAttitudeResponse::CopyFrom(const SetAttitudeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.offboard.SetAttitudeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SetAttitudeResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SetAttitudeResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SetAttitudeResponse::InternalSwap(SetAttitudeResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.offboard_result_, other->_impl_.offboard_result_);
}

::google::protobuf::Metadata SetAttitudeResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_offboard_2foffboard_2eproto_getter, &descriptor_table_offboard_2foffboard_2eproto_once,
      file_level_metadata_offboard_2foffboard_2eproto[7]);
}
// ===================================================================

class SetActuatorControlRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<SetActuatorControlRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SetActuatorControlRequest, _impl_._has_bits_);
  static const ::mavsdk::rpc::offboard::ActuatorControl& actuator_control(const SetActuatorControlRequest* msg);
  static void set_has_actuator_control(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::offboard::ActuatorControl& SetActuatorControlRequest::_Internal::actuator_control(const SetActuatorControlRequest* msg) {
  return *msg->_impl_.actuator_control_;
}
SetActuatorControlRequest::SetActuatorControlRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.offboard.SetActuatorControlRequest)
}
inline PROTOBUF_NDEBUG_INLINE SetActuatorControlRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SetActuatorControlRequest::SetActuatorControlRequest(
    ::google::protobuf::Arena* arena,
    const SetActuatorControlRequest& from)
    : ::google::protobuf::Message(arena) {
  SetActuatorControlRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.actuator_control_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::offboard::ActuatorControl>(arena, *from._impl_.actuator_control_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.offboard.SetActuatorControlRequest)
}
inline PROTOBUF_NDEBUG_INLINE SetActuatorControlRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetActuatorControlRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.actuator_control_ = {};
}
SetActuatorControlRequest::~SetActuatorControlRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.offboard.SetActuatorControlRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SetActuatorControlRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.actuator_control_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SetActuatorControlRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.offboard.SetActuatorControlRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.actuator_control_ != nullptr);
    _impl_.actuator_control_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SetActuatorControlRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> SetActuatorControlRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SetActuatorControlRequest, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SetActuatorControlRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.offboard.ActuatorControl actuator_control = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SetActuatorControlRequest, _impl_.actuator_control_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.offboard.ActuatorControl actuator_control = 1;
    {PROTOBUF_FIELD_OFFSET(SetActuatorControlRequest, _impl_.actuator_control_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::offboard::ActuatorControl>()},
  }}, {{
  }},
};

::uint8_t* SetActuatorControlRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.offboard.SetActuatorControlRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.offboard.ActuatorControl actuator_control = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::actuator_control(this),
        _Internal::actuator_control(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.offboard.SetActuatorControlRequest)
  return target;
}

::size_t SetActuatorControlRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.offboard.SetActuatorControlRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.offboard.ActuatorControl actuator_control = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.actuator_control_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SetActuatorControlRequest::_class_data_ = {
    SetActuatorControlRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SetActuatorControlRequest::GetClassData() const {
  return &_class_data_;
}

void SetActuatorControlRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SetActuatorControlRequest*>(&to_msg);
  auto& from = static_cast<const SetActuatorControlRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.offboard.SetActuatorControlRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_actuator_control()->::mavsdk::rpc::offboard::ActuatorControl::MergeFrom(
        from._internal_actuator_control());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetActuatorControlRequest::CopyFrom(const SetActuatorControlRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.offboard.SetActuatorControlRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SetActuatorControlRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SetActuatorControlRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SetActuatorControlRequest::InternalSwap(SetActuatorControlRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.actuator_control_, other->_impl_.actuator_control_);
}

::google::protobuf::Metadata SetActuatorControlRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_offboard_2foffboard_2eproto_getter, &descriptor_table_offboard_2foffboard_2eproto_once,
      file_level_metadata_offboard_2foffboard_2eproto[8]);
}
// ===================================================================

class SetActuatorControlResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<SetActuatorControlResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SetActuatorControlResponse, _impl_._has_bits_);
  static const ::mavsdk::rpc::offboard::OffboardResult& offboard_result(const SetActuatorControlResponse* msg);
  static void set_has_offboard_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::offboard::OffboardResult& SetActuatorControlResponse::_Internal::offboard_result(const SetActuatorControlResponse* msg) {
  return *msg->_impl_.offboard_result_;
}
SetActuatorControlResponse::SetActuatorControlResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.offboard.SetActuatorControlResponse)
}
inline PROTOBUF_NDEBUG_INLINE SetActuatorControlResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SetActuatorControlResponse::SetActuatorControlResponse(
    ::google::protobuf::Arena* arena,
    const SetActuatorControlResponse& from)
    : ::google::protobuf::Message(arena) {
  SetActuatorControlResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.offboard_result_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::offboard::OffboardResult>(arena, *from._impl_.offboard_result_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.offboard.SetActuatorControlResponse)
}
inline PROTOBUF_NDEBUG_INLINE SetActuatorControlResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetActuatorControlResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.offboard_result_ = {};
}
SetActuatorControlResponse::~SetActuatorControlResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.offboard.SetActuatorControlResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SetActuatorControlResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.offboard_result_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SetActuatorControlResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.offboard.SetActuatorControlResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.offboard_result_ != nullptr);
    _impl_.offboard_result_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SetActuatorControlResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> SetActuatorControlResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SetActuatorControlResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SetActuatorControlResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.offboard.OffboardResult offboard_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SetActuatorControlResponse, _impl_.offboard_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.offboard.OffboardResult offboard_result = 1;
    {PROTOBUF_FIELD_OFFSET(SetActuatorControlResponse, _impl_.offboard_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::offboard::OffboardResult>()},
  }}, {{
  }},
};

::uint8_t* SetActuatorControlResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.offboard.SetActuatorControlResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.offboard.OffboardResult offboard_result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::offboard_result(this),
        _Internal::offboard_result(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.offboard.SetActuatorControlResponse)
  return target;
}

::size_t SetActuatorControlResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.offboard.SetActuatorControlResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.offboard.OffboardResult offboard_result = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.offboard_result_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SetActuatorControlResponse::_class_data_ = {
    SetActuatorControlResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SetActuatorControlResponse::GetClassData() const {
  return &_class_data_;
}

void SetActuatorControlResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SetActuatorControlResponse*>(&to_msg);
  auto& from = static_cast<const SetActuatorControlResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.offboard.SetActuatorControlResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_offboard_result()->::mavsdk::rpc::offboard::OffboardResult::MergeFrom(
        from._internal_offboard_result());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetActuatorControlResponse::CopyFrom(const SetActuatorControlResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.offboard.SetActuatorControlResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SetActuatorControlResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SetActuatorControlResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SetActuatorControlResponse::InternalSwap(SetActuatorControlResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.offboard_result_, other->_impl_.offboard_result_);
}

::google::protobuf::Metadata SetActuatorControlResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_offboard_2foffboard_2eproto_getter, &descriptor_table_offboard_2foffboard_2eproto_once,
      file_level_metadata_offboard_2foffboard_2eproto[9]);
}
// ===================================================================

class SetAttitudeRateRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<SetAttitudeRateRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SetAttitudeRateRequest, _impl_._has_bits_);
  static const ::mavsdk::rpc::offboard::AttitudeRate& attitude_rate(const SetAttitudeRateRequest* msg);
  static void set_has_attitude_rate(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::offboard::AttitudeRate& SetAttitudeRateRequest::_Internal::attitude_rate(const SetAttitudeRateRequest* msg) {
  return *msg->_impl_.attitude_rate_;
}
SetAttitudeRateRequest::SetAttitudeRateRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.offboard.SetAttitudeRateRequest)
}
inline PROTOBUF_NDEBUG_INLINE SetAttitudeRateRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SetAttitudeRateRequest::SetAttitudeRateRequest(
    ::google::protobuf::Arena* arena,
    const SetAttitudeRateRequest& from)
    : ::google::protobuf::Message(arena) {
  SetAttitudeRateRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.attitude_rate_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::offboard::AttitudeRate>(arena, *from._impl_.attitude_rate_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.offboard.SetAttitudeRateRequest)
}
inline PROTOBUF_NDEBUG_INLINE SetAttitudeRateRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetAttitudeRateRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.attitude_rate_ = {};
}
SetAttitudeRateRequest::~SetAttitudeRateRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.offboard.SetAttitudeRateRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SetAttitudeRateRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.attitude_rate_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SetAttitudeRateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.offboard.SetAttitudeRateRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.attitude_rate_ != nullptr);
    _impl_.attitude_rate_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SetAttitudeRateRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> SetAttitudeRateRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SetAttitudeRateRequest, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SetAttitudeRateRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.offboard.AttitudeRate attitude_rate = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SetAttitudeRateRequest, _impl_.attitude_rate_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.offboard.AttitudeRate attitude_rate = 1;
    {PROTOBUF_FIELD_OFFSET(SetAttitudeRateRequest, _impl_.attitude_rate_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::offboard::AttitudeRate>()},
  }}, {{
  }},
};

::uint8_t* SetAttitudeRateRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.offboard.SetAttitudeRateRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.offboard.AttitudeRate attitude_rate = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::attitude_rate(this),
        _Internal::attitude_rate(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.offboard.SetAttitudeRateRequest)
  return target;
}

::size_t SetAttitudeRateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.offboard.SetAttitudeRateRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.offboard.AttitudeRate attitude_rate = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.attitude_rate_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SetAttitudeRateRequest::_class_data_ = {
    SetAttitudeRateRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SetAttitudeRateRequest::GetClassData() const {
  return &_class_data_;
}

void SetAttitudeRateRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SetAttitudeRateRequest*>(&to_msg);
  auto& from = static_cast<const SetAttitudeRateRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.offboard.SetAttitudeRateRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_attitude_rate()->::mavsdk::rpc::offboard::AttitudeRate::MergeFrom(
        from._internal_attitude_rate());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetAttitudeRateRequest::CopyFrom(const SetAttitudeRateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.offboard.SetAttitudeRateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SetAttitudeRateRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SetAttitudeRateRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SetAttitudeRateRequest::InternalSwap(SetAttitudeRateRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.attitude_rate_, other->_impl_.attitude_rate_);
}

::google::protobuf::Metadata SetAttitudeRateRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_offboard_2foffboard_2eproto_getter, &descriptor_table_offboard_2foffboard_2eproto_once,
      file_level_metadata_offboard_2foffboard_2eproto[10]);
}
// ===================================================================

class SetAttitudeRateResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<SetAttitudeRateResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SetAttitudeRateResponse, _impl_._has_bits_);
  static const ::mavsdk::rpc::offboard::OffboardResult& offboard_result(const SetAttitudeRateResponse* msg);
  static void set_has_offboard_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::offboard::OffboardResult& SetAttitudeRateResponse::_Internal::offboard_result(const SetAttitudeRateResponse* msg) {
  return *msg->_impl_.offboard_result_;
}
SetAttitudeRateResponse::SetAttitudeRateResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.offboard.SetAttitudeRateResponse)
}
inline PROTOBUF_NDEBUG_INLINE SetAttitudeRateResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SetAttitudeRateResponse::SetAttitudeRateResponse(
    ::google::protobuf::Arena* arena,
    const SetAttitudeRateResponse& from)
    : ::google::protobuf::Message(arena) {
  SetAttitudeRateResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.offboard_result_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::offboard::OffboardResult>(arena, *from._impl_.offboard_result_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.offboard.SetAttitudeRateResponse)
}
inline PROTOBUF_NDEBUG_INLINE SetAttitudeRateResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetAttitudeRateResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.offboard_result_ = {};
}
SetAttitudeRateResponse::~SetAttitudeRateResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.offboard.SetAttitudeRateResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SetAttitudeRateResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.offboard_result_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SetAttitudeRateResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.offboard.SetAttitudeRateResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.offboard_result_ != nullptr);
    _impl_.offboard_result_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SetAttitudeRateResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> SetAttitudeRateResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SetAttitudeRateResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SetAttitudeRateResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.offboard.OffboardResult offboard_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SetAttitudeRateResponse, _impl_.offboard_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.offboard.OffboardResult offboard_result = 1;
    {PROTOBUF_FIELD_OFFSET(SetAttitudeRateResponse, _impl_.offboard_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::offboard::OffboardResult>()},
  }}, {{
  }},
};

::uint8_t* SetAttitudeRateResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.offboard.SetAttitudeRateResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.offboard.OffboardResult offboard_result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::offboard_result(this),
        _Internal::offboard_result(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.offboard.SetAttitudeRateResponse)
  return target;
}

::size_t SetAttitudeRateResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.offboard.SetAttitudeRateResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.offboard.OffboardResult offboard_result = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.offboard_result_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SetAttitudeRateResponse::_class_data_ = {
    SetAttitudeRateResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SetAttitudeRateResponse::GetClassData() const {
  return &_class_data_;
}

void SetAttitudeRateResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SetAttitudeRateResponse*>(&to_msg);
  auto& from = static_cast<const SetAttitudeRateResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.offboard.SetAttitudeRateResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_offboard_result()->::mavsdk::rpc::offboard::OffboardResult::MergeFrom(
        from._internal_offboard_result());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetAttitudeRateResponse::CopyFrom(const SetAttitudeRateResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.offboard.SetAttitudeRateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SetAttitudeRateResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SetAttitudeRateResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SetAttitudeRateResponse::InternalSwap(SetAttitudeRateResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.offboard_result_, other->_impl_.offboard_result_);
}

::google::protobuf::Metadata SetAttitudeRateResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_offboard_2foffboard_2eproto_getter, &descriptor_table_offboard_2foffboard_2eproto_once,
      file_level_metadata_offboard_2foffboard_2eproto[11]);
}
// ===================================================================

class SetPositionNedRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<SetPositionNedRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SetPositionNedRequest, _impl_._has_bits_);
  static const ::mavsdk::rpc::offboard::PositionNedYaw& position_ned_yaw(const SetPositionNedRequest* msg);
  static void set_has_position_ned_yaw(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::offboard::PositionNedYaw& SetPositionNedRequest::_Internal::position_ned_yaw(const SetPositionNedRequest* msg) {
  return *msg->_impl_.position_ned_yaw_;
}
SetPositionNedRequest::SetPositionNedRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.offboard.SetPositionNedRequest)
}
inline PROTOBUF_NDEBUG_INLINE SetPositionNedRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SetPositionNedRequest::SetPositionNedRequest(
    ::google::protobuf::Arena* arena,
    const SetPositionNedRequest& from)
    : ::google::protobuf::Message(arena) {
  SetPositionNedRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.position_ned_yaw_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::offboard::PositionNedYaw>(arena, *from._impl_.position_ned_yaw_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.offboard.SetPositionNedRequest)
}
inline PROTOBUF_NDEBUG_INLINE SetPositionNedRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetPositionNedRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.position_ned_yaw_ = {};
}
SetPositionNedRequest::~SetPositionNedRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.offboard.SetPositionNedRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SetPositionNedRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.position_ned_yaw_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SetPositionNedRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.offboard.SetPositionNedRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.position_ned_yaw_ != nullptr);
    _impl_.position_ned_yaw_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SetPositionNedRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> SetPositionNedRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SetPositionNedRequest, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SetPositionNedRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.offboard.PositionNedYaw position_ned_yaw = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SetPositionNedRequest, _impl_.position_ned_yaw_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.offboard.PositionNedYaw position_ned_yaw = 1;
    {PROTOBUF_FIELD_OFFSET(SetPositionNedRequest, _impl_.position_ned_yaw_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::offboard::PositionNedYaw>()},
  }}, {{
  }},
};

::uint8_t* SetPositionNedRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.offboard.SetPositionNedRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.offboard.PositionNedYaw position_ned_yaw = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::position_ned_yaw(this),
        _Internal::position_ned_yaw(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.offboard.SetPositionNedRequest)
  return target;
}

::size_t SetPositionNedRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.offboard.SetPositionNedRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.offboard.PositionNedYaw position_ned_yaw = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.position_ned_yaw_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SetPositionNedRequest::_class_data_ = {
    SetPositionNedRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SetPositionNedRequest::GetClassData() const {
  return &_class_data_;
}

void SetPositionNedRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SetPositionNedRequest*>(&to_msg);
  auto& from = static_cast<const SetPositionNedRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.offboard.SetPositionNedRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_position_ned_yaw()->::mavsdk::rpc::offboard::PositionNedYaw::MergeFrom(
        from._internal_position_ned_yaw());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetPositionNedRequest::CopyFrom(const SetPositionNedRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.offboard.SetPositionNedRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SetPositionNedRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SetPositionNedRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SetPositionNedRequest::InternalSwap(SetPositionNedRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.position_ned_yaw_, other->_impl_.position_ned_yaw_);
}

::google::protobuf::Metadata SetPositionNedRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_offboard_2foffboard_2eproto_getter, &descriptor_table_offboard_2foffboard_2eproto_once,
      file_level_metadata_offboard_2foffboard_2eproto[12]);
}
// ===================================================================

class SetPositionNedResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<SetPositionNedResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SetPositionNedResponse, _impl_._has_bits_);
  static const ::mavsdk::rpc::offboard::OffboardResult& offboard_result(const SetPositionNedResponse* msg);
  static void set_has_offboard_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::offboard::OffboardResult& SetPositionNedResponse::_Internal::offboard_result(const SetPositionNedResponse* msg) {
  return *msg->_impl_.offboard_result_;
}
SetPositionNedResponse::SetPositionNedResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.offboard.SetPositionNedResponse)
}
inline PROTOBUF_NDEBUG_INLINE SetPositionNedResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SetPositionNedResponse::SetPositionNedResponse(
    ::google::protobuf::Arena* arena,
    const SetPositionNedResponse& from)
    : ::google::protobuf::Message(arena) {
  SetPositionNedResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.offboard_result_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::offboard::OffboardResult>(arena, *from._impl_.offboard_result_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.offboard.SetPositionNedResponse)
}
inline PROTOBUF_NDEBUG_INLINE SetPositionNedResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetPositionNedResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.offboard_result_ = {};
}
SetPositionNedResponse::~SetPositionNedResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.offboard.SetPositionNedResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SetPositionNedResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.offboard_result_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SetPositionNedResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.offboard.SetPositionNedResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.offboard_result_ != nullptr);
    _impl_.offboard_result_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SetPositionNedResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> SetPositionNedResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SetPositionNedResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SetPositionNedResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.offboard.OffboardResult offboard_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SetPositionNedResponse, _impl_.offboard_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.offboard.OffboardResult offboard_result = 1;
    {PROTOBUF_FIELD_OFFSET(SetPositionNedResponse, _impl_.offboard_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::offboard::OffboardResult>()},
  }}, {{
  }},
};

::uint8_t* SetPositionNedResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.offboard.SetPositionNedResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.offboard.OffboardResult offboard_result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::offboard_result(this),
        _Internal::offboard_result(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.offboard.SetPositionNedResponse)
  return target;
}

::size_t SetPositionNedResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.offboard.SetPositionNedResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.offboard.OffboardResult offboard_result = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.offboard_result_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SetPositionNedResponse::_class_data_ = {
    SetPositionNedResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SetPositionNedResponse::GetClassData() const {
  return &_class_data_;
}

void SetPositionNedResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SetPositionNedResponse*>(&to_msg);
  auto& from = static_cast<const SetPositionNedResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.offboard.SetPositionNedResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_offboard_result()->::mavsdk::rpc::offboard::OffboardResult::MergeFrom(
        from._internal_offboard_result());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetPositionNedResponse::CopyFrom(const SetPositionNedResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.offboard.SetPositionNedResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SetPositionNedResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SetPositionNedResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SetPositionNedResponse::InternalSwap(SetPositionNedResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.offboard_result_, other->_impl_.offboard_result_);
}

::google::protobuf::Metadata SetPositionNedResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_offboard_2foffboard_2eproto_getter, &descriptor_table_offboard_2foffboard_2eproto_once,
      file_level_metadata_offboard_2foffboard_2eproto[13]);
}
// ===================================================================

class SetPositionGlobalRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<SetPositionGlobalRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SetPositionGlobalRequest, _impl_._has_bits_);
  static const ::mavsdk::rpc::offboard::PositionGlobalYaw& position_global_yaw(const SetPositionGlobalRequest* msg);
  static void set_has_position_global_yaw(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::offboard::PositionGlobalYaw& SetPositionGlobalRequest::_Internal::position_global_yaw(const SetPositionGlobalRequest* msg) {
  return *msg->_impl_.position_global_yaw_;
}
SetPositionGlobalRequest::SetPositionGlobalRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.offboard.SetPositionGlobalRequest)
}
inline PROTOBUF_NDEBUG_INLINE SetPositionGlobalRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SetPositionGlobalRequest::SetPositionGlobalRequest(
    ::google::protobuf::Arena* arena,
    const SetPositionGlobalRequest& from)
    : ::google::protobuf::Message(arena) {
  SetPositionGlobalRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.position_global_yaw_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::offboard::PositionGlobalYaw>(arena, *from._impl_.position_global_yaw_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.offboard.SetPositionGlobalRequest)
}
inline PROTOBUF_NDEBUG_INLINE SetPositionGlobalRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetPositionGlobalRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.position_global_yaw_ = {};
}
SetPositionGlobalRequest::~SetPositionGlobalRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.offboard.SetPositionGlobalRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SetPositionGlobalRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.position_global_yaw_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SetPositionGlobalRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.offboard.SetPositionGlobalRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.position_global_yaw_ != nullptr);
    _impl_.position_global_yaw_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SetPositionGlobalRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> SetPositionGlobalRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SetPositionGlobalRequest, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SetPositionGlobalRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.offboard.PositionGlobalYaw position_global_yaw = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SetPositionGlobalRequest, _impl_.position_global_yaw_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.offboard.PositionGlobalYaw position_global_yaw = 1;
    {PROTOBUF_FIELD_OFFSET(SetPositionGlobalRequest, _impl_.position_global_yaw_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::offboard::PositionGlobalYaw>()},
  }}, {{
  }},
};

::uint8_t* SetPositionGlobalRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.offboard.SetPositionGlobalRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.offboard.PositionGlobalYaw position_global_yaw = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::position_global_yaw(this),
        _Internal::position_global_yaw(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.offboard.SetPositionGlobalRequest)
  return target;
}

::size_t SetPositionGlobalRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.offboard.SetPositionGlobalRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.offboard.PositionGlobalYaw position_global_yaw = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.position_global_yaw_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SetPositionGlobalRequest::_class_data_ = {
    SetPositionGlobalRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SetPositionGlobalRequest::GetClassData() const {
  return &_class_data_;
}

void SetPositionGlobalRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SetPositionGlobalRequest*>(&to_msg);
  auto& from = static_cast<const SetPositionGlobalRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.offboard.SetPositionGlobalRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_position_global_yaw()->::mavsdk::rpc::offboard::PositionGlobalYaw::MergeFrom(
        from._internal_position_global_yaw());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetPositionGlobalRequest::CopyFrom(const SetPositionGlobalRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.offboard.SetPositionGlobalRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SetPositionGlobalRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SetPositionGlobalRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SetPositionGlobalRequest::InternalSwap(SetPositionGlobalRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.position_global_yaw_, other->_impl_.position_global_yaw_);
}

::google::protobuf::Metadata SetPositionGlobalRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_offboard_2foffboard_2eproto_getter, &descriptor_table_offboard_2foffboard_2eproto_once,
      file_level_metadata_offboard_2foffboard_2eproto[14]);
}
// ===================================================================

class SetPositionGlobalResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<SetPositionGlobalResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SetPositionGlobalResponse, _impl_._has_bits_);
  static const ::mavsdk::rpc::offboard::OffboardResult& offboard_result(const SetPositionGlobalResponse* msg);
  static void set_has_offboard_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::offboard::OffboardResult& SetPositionGlobalResponse::_Internal::offboard_result(const SetPositionGlobalResponse* msg) {
  return *msg->_impl_.offboard_result_;
}
SetPositionGlobalResponse::SetPositionGlobalResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.offboard.SetPositionGlobalResponse)
}
inline PROTOBUF_NDEBUG_INLINE SetPositionGlobalResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SetPositionGlobalResponse::SetPositionGlobalResponse(
    ::google::protobuf::Arena* arena,
    const SetPositionGlobalResponse& from)
    : ::google::protobuf::Message(arena) {
  SetPositionGlobalResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.offboard_result_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::offboard::OffboardResult>(arena, *from._impl_.offboard_result_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.offboard.SetPositionGlobalResponse)
}
inline PROTOBUF_NDEBUG_INLINE SetPositionGlobalResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetPositionGlobalResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.offboard_result_ = {};
}
SetPositionGlobalResponse::~SetPositionGlobalResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.offboard.SetPositionGlobalResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SetPositionGlobalResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.offboard_result_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SetPositionGlobalResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.offboard.SetPositionGlobalResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.offboard_result_ != nullptr);
    _impl_.offboard_result_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SetPositionGlobalResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> SetPositionGlobalResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SetPositionGlobalResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SetPositionGlobalResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.offboard.OffboardResult offboard_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SetPositionGlobalResponse, _impl_.offboard_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.offboard.OffboardResult offboard_result = 1;
    {PROTOBUF_FIELD_OFFSET(SetPositionGlobalResponse, _impl_.offboard_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::offboard::OffboardResult>()},
  }}, {{
  }},
};

::uint8_t* SetPositionGlobalResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.offboard.SetPositionGlobalResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.offboard.OffboardResult offboard_result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::offboard_result(this),
        _Internal::offboard_result(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.offboard.SetPositionGlobalResponse)
  return target;
}

::size_t SetPositionGlobalResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.offboard.SetPositionGlobalResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.offboard.OffboardResult offboard_result = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.offboard_result_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SetPositionGlobalResponse::_class_data_ = {
    SetPositionGlobalResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SetPositionGlobalResponse::GetClassData() const {
  return &_class_data_;
}

void SetPositionGlobalResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SetPositionGlobalResponse*>(&to_msg);
  auto& from = static_cast<const SetPositionGlobalResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.offboard.SetPositionGlobalResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_offboard_result()->::mavsdk::rpc::offboard::OffboardResult::MergeFrom(
        from._internal_offboard_result());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetPositionGlobalResponse::CopyFrom(const SetPositionGlobalResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.offboard.SetPositionGlobalResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SetPositionGlobalResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SetPositionGlobalResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SetPositionGlobalResponse::InternalSwap(SetPositionGlobalResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.offboard_result_, other->_impl_.offboard_result_);
}

::google::protobuf::Metadata SetPositionGlobalResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_offboard_2foffboard_2eproto_getter, &descriptor_table_offboard_2foffboard_2eproto_once,
      file_level_metadata_offboard_2foffboard_2eproto[15]);
}
// ===================================================================

class SetVelocityBodyRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<SetVelocityBodyRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SetVelocityBodyRequest, _impl_._has_bits_);
  static const ::mavsdk::rpc::offboard::VelocityBodyYawspeed& velocity_body_yawspeed(const SetVelocityBodyRequest* msg);
  static void set_has_velocity_body_yawspeed(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::offboard::VelocityBodyYawspeed& SetVelocityBodyRequest::_Internal::velocity_body_yawspeed(const SetVelocityBodyRequest* msg) {
  return *msg->_impl_.velocity_body_yawspeed_;
}
SetVelocityBodyRequest::SetVelocityBodyRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.offboard.SetVelocityBodyRequest)
}
inline PROTOBUF_NDEBUG_INLINE SetVelocityBodyRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SetVelocityBodyRequest::SetVelocityBodyRequest(
    ::google::protobuf::Arena* arena,
    const SetVelocityBodyRequest& from)
    : ::google::protobuf::Message(arena) {
  SetVelocityBodyRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.velocity_body_yawspeed_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::offboard::VelocityBodyYawspeed>(arena, *from._impl_.velocity_body_yawspeed_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.offboard.SetVelocityBodyRequest)
}
inline PROTOBUF_NDEBUG_INLINE SetVelocityBodyRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetVelocityBodyRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.velocity_body_yawspeed_ = {};
}
SetVelocityBodyRequest::~SetVelocityBodyRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.offboard.SetVelocityBodyRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SetVelocityBodyRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.velocity_body_yawspeed_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SetVelocityBodyRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.offboard.SetVelocityBodyRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.velocity_body_yawspeed_ != nullptr);
    _impl_.velocity_body_yawspeed_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SetVelocityBodyRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> SetVelocityBodyRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SetVelocityBodyRequest, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SetVelocityBodyRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.offboard.VelocityBodyYawspeed velocity_body_yawspeed = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SetVelocityBodyRequest, _impl_.velocity_body_yawspeed_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.offboard.VelocityBodyYawspeed velocity_body_yawspeed = 1;
    {PROTOBUF_FIELD_OFFSET(SetVelocityBodyRequest, _impl_.velocity_body_yawspeed_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::offboard::VelocityBodyYawspeed>()},
  }}, {{
  }},
};

::uint8_t* SetVelocityBodyRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.offboard.SetVelocityBodyRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.offboard.VelocityBodyYawspeed velocity_body_yawspeed = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::velocity_body_yawspeed(this),
        _Internal::velocity_body_yawspeed(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.offboard.SetVelocityBodyRequest)
  return target;
}

::size_t SetVelocityBodyRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.offboard.SetVelocityBodyRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.offboard.VelocityBodyYawspeed velocity_body_yawspeed = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.velocity_body_yawspeed_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SetVelocityBodyRequest::_class_data_ = {
    SetVelocityBodyRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SetVelocityBodyRequest::GetClassData() const {
  return &_class_data_;
}

void SetVelocityBodyRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SetVelocityBodyRequest*>(&to_msg);
  auto& from = static_cast<const SetVelocityBodyRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.offboard.SetVelocityBodyRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_velocity_body_yawspeed()->::mavsdk::rpc::offboard::VelocityBodyYawspeed::MergeFrom(
        from._internal_velocity_body_yawspeed());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetVelocityBodyRequest::CopyFrom(const SetVelocityBodyRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.offboard.SetVelocityBodyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SetVelocityBodyRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SetVelocityBodyRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SetVelocityBodyRequest::InternalSwap(SetVelocityBodyRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.velocity_body_yawspeed_, other->_impl_.velocity_body_yawspeed_);
}

::google::protobuf::Metadata SetVelocityBodyRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_offboard_2foffboard_2eproto_getter, &descriptor_table_offboard_2foffboard_2eproto_once,
      file_level_metadata_offboard_2foffboard_2eproto[16]);
}
// ===================================================================

class SetVelocityBodyResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<SetVelocityBodyResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SetVelocityBodyResponse, _impl_._has_bits_);
  static const ::mavsdk::rpc::offboard::OffboardResult& offboard_result(const SetVelocityBodyResponse* msg);
  static void set_has_offboard_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::offboard::OffboardResult& SetVelocityBodyResponse::_Internal::offboard_result(const SetVelocityBodyResponse* msg) {
  return *msg->_impl_.offboard_result_;
}
SetVelocityBodyResponse::SetVelocityBodyResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.offboard.SetVelocityBodyResponse)
}
inline PROTOBUF_NDEBUG_INLINE SetVelocityBodyResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SetVelocityBodyResponse::SetVelocityBodyResponse(
    ::google::protobuf::Arena* arena,
    const SetVelocityBodyResponse& from)
    : ::google::protobuf::Message(arena) {
  SetVelocityBodyResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.offboard_result_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::offboard::OffboardResult>(arena, *from._impl_.offboard_result_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.offboard.SetVelocityBodyResponse)
}
inline PROTOBUF_NDEBUG_INLINE SetVelocityBodyResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetVelocityBodyResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.offboard_result_ = {};
}
SetVelocityBodyResponse::~SetVelocityBodyResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.offboard.SetVelocityBodyResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SetVelocityBodyResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.offboard_result_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SetVelocityBodyResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.offboard.SetVelocityBodyResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.offboard_result_ != nullptr);
    _impl_.offboard_result_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SetVelocityBodyResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> SetVelocityBodyResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SetVelocityBodyResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SetVelocityBodyResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.offboard.OffboardResult offboard_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SetVelocityBodyResponse, _impl_.offboard_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.offboard.OffboardResult offboard_result = 1;
    {PROTOBUF_FIELD_OFFSET(SetVelocityBodyResponse, _impl_.offboard_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::offboard::OffboardResult>()},
  }}, {{
  }},
};

::uint8_t* SetVelocityBodyResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.offboard.SetVelocityBodyResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.offboard.OffboardResult offboard_result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::offboard_result(this),
        _Internal::offboard_result(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.offboard.SetVelocityBodyResponse)
  return target;
}

::size_t SetVelocityBodyResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.offboard.SetVelocityBodyResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.offboard.OffboardResult offboard_result = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.offboard_result_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SetVelocityBodyResponse::_class_data_ = {
    SetVelocityBodyResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SetVelocityBodyResponse::GetClassData() const {
  return &_class_data_;
}

void SetVelocityBodyResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SetVelocityBodyResponse*>(&to_msg);
  auto& from = static_cast<const SetVelocityBodyResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.offboard.SetVelocityBodyResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_offboard_result()->::mavsdk::rpc::offboard::OffboardResult::MergeFrom(
        from._internal_offboard_result());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetVelocityBodyResponse::CopyFrom(const SetVelocityBodyResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.offboard.SetVelocityBodyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SetVelocityBodyResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SetVelocityBodyResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SetVelocityBodyResponse::InternalSwap(SetVelocityBodyResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.offboard_result_, other->_impl_.offboard_result_);
}

::google::protobuf::Metadata SetVelocityBodyResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_offboard_2foffboard_2eproto_getter, &descriptor_table_offboard_2foffboard_2eproto_once,
      file_level_metadata_offboard_2foffboard_2eproto[17]);
}
// ===================================================================

class SetVelocityNedRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<SetVelocityNedRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SetVelocityNedRequest, _impl_._has_bits_);
  static const ::mavsdk::rpc::offboard::VelocityNedYaw& velocity_ned_yaw(const SetVelocityNedRequest* msg);
  static void set_has_velocity_ned_yaw(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::offboard::VelocityNedYaw& SetVelocityNedRequest::_Internal::velocity_ned_yaw(const SetVelocityNedRequest* msg) {
  return *msg->_impl_.velocity_ned_yaw_;
}
SetVelocityNedRequest::SetVelocityNedRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.offboard.SetVelocityNedRequest)
}
inline PROTOBUF_NDEBUG_INLINE SetVelocityNedRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SetVelocityNedRequest::SetVelocityNedRequest(
    ::google::protobuf::Arena* arena,
    const SetVelocityNedRequest& from)
    : ::google::protobuf::Message(arena) {
  SetVelocityNedRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.velocity_ned_yaw_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::offboard::VelocityNedYaw>(arena, *from._impl_.velocity_ned_yaw_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.offboard.SetVelocityNedRequest)
}
inline PROTOBUF_NDEBUG_INLINE SetVelocityNedRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetVelocityNedRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.velocity_ned_yaw_ = {};
}
SetVelocityNedRequest::~SetVelocityNedRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.offboard.SetVelocityNedRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SetVelocityNedRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.velocity_ned_yaw_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SetVelocityNedRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.offboard.SetVelocityNedRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.velocity_ned_yaw_ != nullptr);
    _impl_.velocity_ned_yaw_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SetVelocityNedRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> SetVelocityNedRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SetVelocityNedRequest, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SetVelocityNedRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.offboard.VelocityNedYaw velocity_ned_yaw = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SetVelocityNedRequest, _impl_.velocity_ned_yaw_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.offboard.VelocityNedYaw velocity_ned_yaw = 1;
    {PROTOBUF_FIELD_OFFSET(SetVelocityNedRequest, _impl_.velocity_ned_yaw_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::offboard::VelocityNedYaw>()},
  }}, {{
  }},
};

::uint8_t* SetVelocityNedRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.offboard.SetVelocityNedRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.offboard.VelocityNedYaw velocity_ned_yaw = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::velocity_ned_yaw(this),
        _Internal::velocity_ned_yaw(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.offboard.SetVelocityNedRequest)
  return target;
}

::size_t SetVelocityNedRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.offboard.SetVelocityNedRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.offboard.VelocityNedYaw velocity_ned_yaw = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.velocity_ned_yaw_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SetVelocityNedRequest::_class_data_ = {
    SetVelocityNedRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SetVelocityNedRequest::GetClassData() const {
  return &_class_data_;
}

void SetVelocityNedRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SetVelocityNedRequest*>(&to_msg);
  auto& from = static_cast<const SetVelocityNedRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.offboard.SetVelocityNedRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_velocity_ned_yaw()->::mavsdk::rpc::offboard::VelocityNedYaw::MergeFrom(
        from._internal_velocity_ned_yaw());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetVelocityNedRequest::CopyFrom(const SetVelocityNedRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.offboard.SetVelocityNedRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SetVelocityNedRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SetVelocityNedRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SetVelocityNedRequest::InternalSwap(SetVelocityNedRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.velocity_ned_yaw_, other->_impl_.velocity_ned_yaw_);
}

::google::protobuf::Metadata SetVelocityNedRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_offboard_2foffboard_2eproto_getter, &descriptor_table_offboard_2foffboard_2eproto_once,
      file_level_metadata_offboard_2foffboard_2eproto[18]);
}
// ===================================================================

class SetVelocityNedResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<SetVelocityNedResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SetVelocityNedResponse, _impl_._has_bits_);
  static const ::mavsdk::rpc::offboard::OffboardResult& offboard_result(const SetVelocityNedResponse* msg);
  static void set_has_offboard_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::offboard::OffboardResult& SetVelocityNedResponse::_Internal::offboard_result(const SetVelocityNedResponse* msg) {
  return *msg->_impl_.offboard_result_;
}
SetVelocityNedResponse::SetVelocityNedResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.offboard.SetVelocityNedResponse)
}
inline PROTOBUF_NDEBUG_INLINE SetVelocityNedResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SetVelocityNedResponse::SetVelocityNedResponse(
    ::google::protobuf::Arena* arena,
    const SetVelocityNedResponse& from)
    : ::google::protobuf::Message(arena) {
  SetVelocityNedResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.offboard_result_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::offboard::OffboardResult>(arena, *from._impl_.offboard_result_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.offboard.SetVelocityNedResponse)
}
inline PROTOBUF_NDEBUG_INLINE SetVelocityNedResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetVelocityNedResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.offboard_result_ = {};
}
SetVelocityNedResponse::~SetVelocityNedResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.offboard.SetVelocityNedResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SetVelocityNedResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.offboard_result_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SetVelocityNedResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.offboard.SetVelocityNedResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.offboard_result_ != nullptr);
    _impl_.offboard_result_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SetVelocityNedResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> SetVelocityNedResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SetVelocityNedResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SetVelocityNedResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.offboard.OffboardResult offboard_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SetVelocityNedResponse, _impl_.offboard_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.offboard.OffboardResult offboard_result = 1;
    {PROTOBUF_FIELD_OFFSET(SetVelocityNedResponse, _impl_.offboard_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::offboard::OffboardResult>()},
  }}, {{
  }},
};

::uint8_t* SetVelocityNedResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.offboard.SetVelocityNedResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.offboard.OffboardResult offboard_result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::offboard_result(this),
        _Internal::offboard_result(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.offboard.SetVelocityNedResponse)
  return target;
}

::size_t SetVelocityNedResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.offboard.SetVelocityNedResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.offboard.OffboardResult offboard_result = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.offboard_result_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SetVelocityNedResponse::_class_data_ = {
    SetVelocityNedResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SetVelocityNedResponse::GetClassData() const {
  return &_class_data_;
}

void SetVelocityNedResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SetVelocityNedResponse*>(&to_msg);
  auto& from = static_cast<const SetVelocityNedResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.offboard.SetVelocityNedResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_offboard_result()->::mavsdk::rpc::offboard::OffboardResult::MergeFrom(
        from._internal_offboard_result());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetVelocityNedResponse::CopyFrom(const SetVelocityNedResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.offboard.SetVelocityNedResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SetVelocityNedResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SetVelocityNedResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SetVelocityNedResponse::InternalSwap(SetVelocityNedResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.offboard_result_, other->_impl_.offboard_result_);
}

::google::protobuf::Metadata SetVelocityNedResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_offboard_2foffboard_2eproto_getter, &descriptor_table_offboard_2foffboard_2eproto_once,
      file_level_metadata_offboard_2foffboard_2eproto[19]);
}
// ===================================================================

class SetPositionVelocityNedRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<SetPositionVelocityNedRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SetPositionVelocityNedRequest, _impl_._has_bits_);
  static const ::mavsdk::rpc::offboard::PositionNedYaw& position_ned_yaw(const SetPositionVelocityNedRequest* msg);
  static void set_has_position_ned_yaw(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::mavsdk::rpc::offboard::VelocityNedYaw& velocity_ned_yaw(const SetPositionVelocityNedRequest* msg);
  static void set_has_velocity_ned_yaw(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::mavsdk::rpc::offboard::PositionNedYaw& SetPositionVelocityNedRequest::_Internal::position_ned_yaw(const SetPositionVelocityNedRequest* msg) {
  return *msg->_impl_.position_ned_yaw_;
}
const ::mavsdk::rpc::offboard::VelocityNedYaw& SetPositionVelocityNedRequest::_Internal::velocity_ned_yaw(const SetPositionVelocityNedRequest* msg) {
  return *msg->_impl_.velocity_ned_yaw_;
}
SetPositionVelocityNedRequest::SetPositionVelocityNedRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.offboard.SetPositionVelocityNedRequest)
}
inline PROTOBUF_NDEBUG_INLINE SetPositionVelocityNedRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SetPositionVelocityNedRequest::SetPositionVelocityNedRequest(
    ::google::protobuf::Arena* arena,
    const SetPositionVelocityNedRequest& from)
    : ::google::protobuf::Message(arena) {
  SetPositionVelocityNedRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.position_ned_yaw_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::offboard::PositionNedYaw>(arena, *from._impl_.position_ned_yaw_)
                : nullptr;
  _impl_.velocity_ned_yaw_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::mavsdk::rpc::offboard::VelocityNedYaw>(arena, *from._impl_.velocity_ned_yaw_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.offboard.SetPositionVelocityNedRequest)
}
inline PROTOBUF_NDEBUG_INLINE SetPositionVelocityNedRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetPositionVelocityNedRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, position_ned_yaw_),
           0,
           offsetof(Impl_, velocity_ned_yaw_) -
               offsetof(Impl_, position_ned_yaw_) +
               sizeof(Impl_::velocity_ned_yaw_));
}
SetPositionVelocityNedRequest::~SetPositionVelocityNedRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.offboard.SetPositionVelocityNedRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SetPositionVelocityNedRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.position_ned_yaw_;
  delete _impl_.velocity_ned_yaw_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SetPositionVelocityNedRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.offboard.SetPositionVelocityNedRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.position_ned_yaw_ != nullptr);
      _impl_.position_ned_yaw_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.velocity_ned_yaw_ != nullptr);
      _impl_.velocity_ned_yaw_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SetPositionVelocityNedRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> SetPositionVelocityNedRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SetPositionVelocityNedRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SetPositionVelocityNedRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.offboard.VelocityNedYaw velocity_ned_yaw = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(SetPositionVelocityNedRequest, _impl_.velocity_ned_yaw_)}},
    // .mavsdk.rpc.offboard.PositionNedYaw position_ned_yaw = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SetPositionVelocityNedRequest, _impl_.position_ned_yaw_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.offboard.PositionNedYaw position_ned_yaw = 1;
    {PROTOBUF_FIELD_OFFSET(SetPositionVelocityNedRequest, _impl_.position_ned_yaw_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .mavsdk.rpc.offboard.VelocityNedYaw velocity_ned_yaw = 2;
    {PROTOBUF_FIELD_OFFSET(SetPositionVelocityNedRequest, _impl_.velocity_ned_yaw_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::offboard::PositionNedYaw>()},
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::offboard::VelocityNedYaw>()},
  }}, {{
  }},
};

::uint8_t* SetPositionVelocityNedRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.offboard.SetPositionVelocityNedRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.offboard.PositionNedYaw position_ned_yaw = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::position_ned_yaw(this),
        _Internal::position_ned_yaw(this).GetCachedSize(), target, stream);
  }

  // .mavsdk.rpc.offboard.VelocityNedYaw velocity_ned_yaw = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::velocity_ned_yaw(this),
        _Internal::velocity_ned_yaw(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.offboard.SetPositionVelocityNedRequest)
  return target;
}

::size_t SetPositionVelocityNedRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.offboard.SetPositionVelocityNedRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .mavsdk.rpc.offboard.PositionNedYaw position_ned_yaw = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.position_ned_yaw_);
    }

    // .mavsdk.rpc.offboard.VelocityNedYaw velocity_ned_yaw = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.velocity_ned_yaw_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SetPositionVelocityNedRequest::_class_data_ = {
    SetPositionVelocityNedRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SetPositionVelocityNedRequest::GetClassData() const {
  return &_class_data_;
}

void SetPositionVelocityNedRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SetPositionVelocityNedRequest*>(&to_msg);
  auto& from = static_cast<const SetPositionVelocityNedRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.offboard.SetPositionVelocityNedRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_position_ned_yaw()->::mavsdk::rpc::offboard::PositionNedYaw::MergeFrom(
          from._internal_position_ned_yaw());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_velocity_ned_yaw()->::mavsdk::rpc::offboard::VelocityNedYaw::MergeFrom(
          from._internal_velocity_ned_yaw());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetPositionVelocityNedRequest::CopyFrom(const SetPositionVelocityNedRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.offboard.SetPositionVelocityNedRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SetPositionVelocityNedRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SetPositionVelocityNedRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SetPositionVelocityNedRequest::InternalSwap(SetPositionVelocityNedRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SetPositionVelocityNedRequest, _impl_.velocity_ned_yaw_)
      + sizeof(SetPositionVelocityNedRequest::_impl_.velocity_ned_yaw_)
      - PROTOBUF_FIELD_OFFSET(SetPositionVelocityNedRequest, _impl_.position_ned_yaw_)>(
          reinterpret_cast<char*>(&_impl_.position_ned_yaw_),
          reinterpret_cast<char*>(&other->_impl_.position_ned_yaw_));
}

::google::protobuf::Metadata SetPositionVelocityNedRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_offboard_2foffboard_2eproto_getter, &descriptor_table_offboard_2foffboard_2eproto_once,
      file_level_metadata_offboard_2foffboard_2eproto[20]);
}
// ===================================================================

class SetPositionVelocityAccelerationNedRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<SetPositionVelocityAccelerationNedRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SetPositionVelocityAccelerationNedRequest, _impl_._has_bits_);
  static const ::mavsdk::rpc::offboard::PositionNedYaw& position_ned_yaw(const SetPositionVelocityAccelerationNedRequest* msg);
  static void set_has_position_ned_yaw(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::mavsdk::rpc::offboard::VelocityNedYaw& velocity_ned_yaw(const SetPositionVelocityAccelerationNedRequest* msg);
  static void set_has_velocity_ned_yaw(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::mavsdk::rpc::offboard::AccelerationNed& acceleration_ned(const SetPositionVelocityAccelerationNedRequest* msg);
  static void set_has_acceleration_ned(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

const ::mavsdk::rpc::offboard::PositionNedYaw& SetPositionVelocityAccelerationNedRequest::_Internal::position_ned_yaw(const SetPositionVelocityAccelerationNedRequest* msg) {
  return *msg->_impl_.position_ned_yaw_;
}
const ::mavsdk::rpc::offboard::VelocityNedYaw& SetPositionVelocityAccelerationNedRequest::_Internal::velocity_ned_yaw(const SetPositionVelocityAccelerationNedRequest* msg) {
  return *msg->_impl_.velocity_ned_yaw_;
}
const ::mavsdk::rpc::offboard::AccelerationNed& SetPositionVelocityAccelerationNedRequest::_Internal::acceleration_ned(const SetPositionVelocityAccelerationNedRequest* msg) {
  return *msg->_impl_.acceleration_ned_;
}
SetPositionVelocityAccelerationNedRequest::SetPositionVelocityAccelerationNedRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.offboard.SetPositionVelocityAccelerationNedRequest)
}
inline PROTOBUF_NDEBUG_INLINE SetPositionVelocityAccelerationNedRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SetPositionVelocityAccelerationNedRequest::SetPositionVelocityAccelerationNedRequest(
    ::google::protobuf::Arena* arena,
    const SetPositionVelocityAccelerationNedRequest& from)
    : ::google::protobuf::Message(arena) {
  SetPositionVelocityAccelerationNedRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.position_ned_yaw_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::offboard::PositionNedYaw>(arena, *from._impl_.position_ned_yaw_)
                : nullptr;
  _impl_.velocity_ned_yaw_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::mavsdk::rpc::offboard::VelocityNedYaw>(arena, *from._impl_.velocity_ned_yaw_)
                : nullptr;
  _impl_.acceleration_ned_ = (cached_has_bits & 0x00000004u)
                ? CreateMaybeMessage<::mavsdk::rpc::offboard::AccelerationNed>(arena, *from._impl_.acceleration_ned_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.offboard.SetPositionVelocityAccelerationNedRequest)
}
inline PROTOBUF_NDEBUG_INLINE SetPositionVelocityAccelerationNedRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetPositionVelocityAccelerationNedRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, position_ned_yaw_),
           0,
           offsetof(Impl_, acceleration_ned_) -
               offsetof(Impl_, position_ned_yaw_) +
               sizeof(Impl_::acceleration_ned_));
}
SetPositionVelocityAccelerationNedRequest::~SetPositionVelocityAccelerationNedRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.offboard.SetPositionVelocityAccelerationNedRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SetPositionVelocityAccelerationNedRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.position_ned_yaw_;
  delete _impl_.velocity_ned_yaw_;
  delete _impl_.acceleration_ned_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SetPositionVelocityAccelerationNedRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.offboard.SetPositionVelocityAccelerationNedRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.position_ned_yaw_ != nullptr);
      _impl_.position_ned_yaw_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.velocity_ned_yaw_ != nullptr);
      _impl_.velocity_ned_yaw_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.acceleration_ned_ != nullptr);
      _impl_.acceleration_ned_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SetPositionVelocityAccelerationNedRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 3, 0, 2> SetPositionVelocityAccelerationNedRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SetPositionVelocityAccelerationNedRequest, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SetPositionVelocityAccelerationNedRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .mavsdk.rpc.offboard.PositionNedYaw position_ned_yaw = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SetPositionVelocityAccelerationNedRequest, _impl_.position_ned_yaw_)}},
    // .mavsdk.rpc.offboard.VelocityNedYaw velocity_ned_yaw = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(SetPositionVelocityAccelerationNedRequest, _impl_.velocity_ned_yaw_)}},
    // .mavsdk.rpc.offboard.AccelerationNed acceleration_ned = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 2, PROTOBUF_FIELD_OFFSET(SetPositionVelocityAccelerationNedRequest, _impl_.acceleration_ned_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.offboard.PositionNedYaw position_ned_yaw = 1;
    {PROTOBUF_FIELD_OFFSET(SetPositionVelocityAccelerationNedRequest, _impl_.position_ned_yaw_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .mavsdk.rpc.offboard.VelocityNedYaw velocity_ned_yaw = 2;
    {PROTOBUF_FIELD_OFFSET(SetPositionVelocityAccelerationNedRequest, _impl_.velocity_ned_yaw_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .mavsdk.rpc.offboard.AccelerationNed acceleration_ned = 3;
    {PROTOBUF_FIELD_OFFSET(SetPositionVelocityAccelerationNedRequest, _impl_.acceleration_ned_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::offboard::PositionNedYaw>()},
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::offboard::VelocityNedYaw>()},
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::offboard::AccelerationNed>()},
  }}, {{
  }},
};

::uint8_t* SetPositionVelocityAccelerationNedRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.offboard.SetPositionVelocityAccelerationNedRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.offboard.PositionNedYaw position_ned_yaw = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::position_ned_yaw(this),
        _Internal::position_ned_yaw(this).GetCachedSize(), target, stream);
  }

  // .mavsdk.rpc.offboard.VelocityNedYaw velocity_ned_yaw = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::velocity_ned_yaw(this),
        _Internal::velocity_ned_yaw(this).GetCachedSize(), target, stream);
  }

  // .mavsdk.rpc.offboard.AccelerationNed acceleration_ned = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, _Internal::acceleration_ned(this),
        _Internal::acceleration_ned(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.offboard.SetPositionVelocityAccelerationNedRequest)
  return target;
}

::size_t SetPositionVelocityAccelerationNedRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.offboard.SetPositionVelocityAccelerationNedRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // .mavsdk.rpc.offboard.PositionNedYaw position_ned_yaw = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.position_ned_yaw_);
    }

    // .mavsdk.rpc.offboard.VelocityNedYaw velocity_ned_yaw = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.velocity_ned_yaw_);
    }

    // .mavsdk.rpc.offboard.AccelerationNed acceleration_ned = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.acceleration_ned_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SetPositionVelocityAccelerationNedRequest::_class_data_ = {
    SetPositionVelocityAccelerationNedRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SetPositionVelocityAccelerationNedRequest::GetClassData() const {
  return &_class_data_;
}

void SetPositionVelocityAccelerationNedRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SetPositionVelocityAccelerationNedRequest*>(&to_msg);
  auto& from = static_cast<const SetPositionVelocityAccelerationNedRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.offboard.SetPositionVelocityAccelerationNedRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_position_ned_yaw()->::mavsdk::rpc::offboard::PositionNedYaw::MergeFrom(
          from._internal_position_ned_yaw());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_velocity_ned_yaw()->::mavsdk::rpc::offboard::VelocityNedYaw::MergeFrom(
          from._internal_velocity_ned_yaw());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_acceleration_ned()->::mavsdk::rpc::offboard::AccelerationNed::MergeFrom(
          from._internal_acceleration_ned());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetPositionVelocityAccelerationNedRequest::CopyFrom(const SetPositionVelocityAccelerationNedRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.offboard.SetPositionVelocityAccelerationNedRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SetPositionVelocityAccelerationNedRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SetPositionVelocityAccelerationNedRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SetPositionVelocityAccelerationNedRequest::InternalSwap(SetPositionVelocityAccelerationNedRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SetPositionVelocityAccelerationNedRequest, _impl_.acceleration_ned_)
      + sizeof(SetPositionVelocityAccelerationNedRequest::_impl_.acceleration_ned_)
      - PROTOBUF_FIELD_OFFSET(SetPositionVelocityAccelerationNedRequest, _impl_.position_ned_yaw_)>(
          reinterpret_cast<char*>(&_impl_.position_ned_yaw_),
          reinterpret_cast<char*>(&other->_impl_.position_ned_yaw_));
}

::google::protobuf::Metadata SetPositionVelocityAccelerationNedRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_offboard_2foffboard_2eproto_getter, &descriptor_table_offboard_2foffboard_2eproto_once,
      file_level_metadata_offboard_2foffboard_2eproto[21]);
}
// ===================================================================

class SetPositionVelocityNedResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<SetPositionVelocityNedResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SetPositionVelocityNedResponse, _impl_._has_bits_);
  static const ::mavsdk::rpc::offboard::OffboardResult& offboard_result(const SetPositionVelocityNedResponse* msg);
  static void set_has_offboard_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::offboard::OffboardResult& SetPositionVelocityNedResponse::_Internal::offboard_result(const SetPositionVelocityNedResponse* msg) {
  return *msg->_impl_.offboard_result_;
}
SetPositionVelocityNedResponse::SetPositionVelocityNedResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.offboard.SetPositionVelocityNedResponse)
}
inline PROTOBUF_NDEBUG_INLINE SetPositionVelocityNedResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SetPositionVelocityNedResponse::SetPositionVelocityNedResponse(
    ::google::protobuf::Arena* arena,
    const SetPositionVelocityNedResponse& from)
    : ::google::protobuf::Message(arena) {
  SetPositionVelocityNedResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.offboard_result_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::offboard::OffboardResult>(arena, *from._impl_.offboard_result_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.offboard.SetPositionVelocityNedResponse)
}
inline PROTOBUF_NDEBUG_INLINE SetPositionVelocityNedResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetPositionVelocityNedResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.offboard_result_ = {};
}
SetPositionVelocityNedResponse::~SetPositionVelocityNedResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.offboard.SetPositionVelocityNedResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SetPositionVelocityNedResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.offboard_result_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SetPositionVelocityNedResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.offboard.SetPositionVelocityNedResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.offboard_result_ != nullptr);
    _impl_.offboard_result_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SetPositionVelocityNedResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> SetPositionVelocityNedResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SetPositionVelocityNedResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SetPositionVelocityNedResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.offboard.OffboardResult offboard_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SetPositionVelocityNedResponse, _impl_.offboard_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.offboard.OffboardResult offboard_result = 1;
    {PROTOBUF_FIELD_OFFSET(SetPositionVelocityNedResponse, _impl_.offboard_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::offboard::OffboardResult>()},
  }}, {{
  }},
};

::uint8_t* SetPositionVelocityNedResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.offboard.SetPositionVelocityNedResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.offboard.OffboardResult offboard_result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::offboard_result(this),
        _Internal::offboard_result(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.offboard.SetPositionVelocityNedResponse)
  return target;
}

::size_t SetPositionVelocityNedResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.offboard.SetPositionVelocityNedResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.offboard.OffboardResult offboard_result = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.offboard_result_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SetPositionVelocityNedResponse::_class_data_ = {
    SetPositionVelocityNedResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SetPositionVelocityNedResponse::GetClassData() const {
  return &_class_data_;
}

void SetPositionVelocityNedResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SetPositionVelocityNedResponse*>(&to_msg);
  auto& from = static_cast<const SetPositionVelocityNedResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.offboard.SetPositionVelocityNedResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_offboard_result()->::mavsdk::rpc::offboard::OffboardResult::MergeFrom(
        from._internal_offboard_result());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetPositionVelocityNedResponse::CopyFrom(const SetPositionVelocityNedResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.offboard.SetPositionVelocityNedResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SetPositionVelocityNedResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SetPositionVelocityNedResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SetPositionVelocityNedResponse::InternalSwap(SetPositionVelocityNedResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.offboard_result_, other->_impl_.offboard_result_);
}

::google::protobuf::Metadata SetPositionVelocityNedResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_offboard_2foffboard_2eproto_getter, &descriptor_table_offboard_2foffboard_2eproto_once,
      file_level_metadata_offboard_2foffboard_2eproto[22]);
}
// ===================================================================

class SetPositionVelocityAccelerationNedResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<SetPositionVelocityAccelerationNedResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SetPositionVelocityAccelerationNedResponse, _impl_._has_bits_);
  static const ::mavsdk::rpc::offboard::OffboardResult& offboard_result(const SetPositionVelocityAccelerationNedResponse* msg);
  static void set_has_offboard_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::offboard::OffboardResult& SetPositionVelocityAccelerationNedResponse::_Internal::offboard_result(const SetPositionVelocityAccelerationNedResponse* msg) {
  return *msg->_impl_.offboard_result_;
}
SetPositionVelocityAccelerationNedResponse::SetPositionVelocityAccelerationNedResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.offboard.SetPositionVelocityAccelerationNedResponse)
}
inline PROTOBUF_NDEBUG_INLINE SetPositionVelocityAccelerationNedResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SetPositionVelocityAccelerationNedResponse::SetPositionVelocityAccelerationNedResponse(
    ::google::protobuf::Arena* arena,
    const SetPositionVelocityAccelerationNedResponse& from)
    : ::google::protobuf::Message(arena) {
  SetPositionVelocityAccelerationNedResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.offboard_result_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::offboard::OffboardResult>(arena, *from._impl_.offboard_result_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.offboard.SetPositionVelocityAccelerationNedResponse)
}
inline PROTOBUF_NDEBUG_INLINE SetPositionVelocityAccelerationNedResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetPositionVelocityAccelerationNedResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.offboard_result_ = {};
}
SetPositionVelocityAccelerationNedResponse::~SetPositionVelocityAccelerationNedResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.offboard.SetPositionVelocityAccelerationNedResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SetPositionVelocityAccelerationNedResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.offboard_result_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SetPositionVelocityAccelerationNedResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.offboard.SetPositionVelocityAccelerationNedResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.offboard_result_ != nullptr);
    _impl_.offboard_result_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SetPositionVelocityAccelerationNedResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> SetPositionVelocityAccelerationNedResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SetPositionVelocityAccelerationNedResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SetPositionVelocityAccelerationNedResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.offboard.OffboardResult offboard_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SetPositionVelocityAccelerationNedResponse, _impl_.offboard_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.offboard.OffboardResult offboard_result = 1;
    {PROTOBUF_FIELD_OFFSET(SetPositionVelocityAccelerationNedResponse, _impl_.offboard_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::offboard::OffboardResult>()},
  }}, {{
  }},
};

::uint8_t* SetPositionVelocityAccelerationNedResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.offboard.SetPositionVelocityAccelerationNedResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.offboard.OffboardResult offboard_result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::offboard_result(this),
        _Internal::offboard_result(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.offboard.SetPositionVelocityAccelerationNedResponse)
  return target;
}

::size_t SetPositionVelocityAccelerationNedResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.offboard.SetPositionVelocityAccelerationNedResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.offboard.OffboardResult offboard_result = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.offboard_result_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SetPositionVelocityAccelerationNedResponse::_class_data_ = {
    SetPositionVelocityAccelerationNedResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SetPositionVelocityAccelerationNedResponse::GetClassData() const {
  return &_class_data_;
}

void SetPositionVelocityAccelerationNedResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SetPositionVelocityAccelerationNedResponse*>(&to_msg);
  auto& from = static_cast<const SetPositionVelocityAccelerationNedResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.offboard.SetPositionVelocityAccelerationNedResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_offboard_result()->::mavsdk::rpc::offboard::OffboardResult::MergeFrom(
        from._internal_offboard_result());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetPositionVelocityAccelerationNedResponse::CopyFrom(const SetPositionVelocityAccelerationNedResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.offboard.SetPositionVelocityAccelerationNedResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SetPositionVelocityAccelerationNedResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SetPositionVelocityAccelerationNedResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SetPositionVelocityAccelerationNedResponse::InternalSwap(SetPositionVelocityAccelerationNedResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.offboard_result_, other->_impl_.offboard_result_);
}

::google::protobuf::Metadata SetPositionVelocityAccelerationNedResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_offboard_2foffboard_2eproto_getter, &descriptor_table_offboard_2foffboard_2eproto_once,
      file_level_metadata_offboard_2foffboard_2eproto[23]);
}
// ===================================================================

class SetAccelerationNedRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<SetAccelerationNedRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SetAccelerationNedRequest, _impl_._has_bits_);
  static const ::mavsdk::rpc::offboard::AccelerationNed& acceleration_ned(const SetAccelerationNedRequest* msg);
  static void set_has_acceleration_ned(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::offboard::AccelerationNed& SetAccelerationNedRequest::_Internal::acceleration_ned(const SetAccelerationNedRequest* msg) {
  return *msg->_impl_.acceleration_ned_;
}
SetAccelerationNedRequest::SetAccelerationNedRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.offboard.SetAccelerationNedRequest)
}
inline PROTOBUF_NDEBUG_INLINE SetAccelerationNedRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SetAccelerationNedRequest::SetAccelerationNedRequest(
    ::google::protobuf::Arena* arena,
    const SetAccelerationNedRequest& from)
    : ::google::protobuf::Message(arena) {
  SetAccelerationNedRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.acceleration_ned_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::offboard::AccelerationNed>(arena, *from._impl_.acceleration_ned_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.offboard.SetAccelerationNedRequest)
}
inline PROTOBUF_NDEBUG_INLINE SetAccelerationNedRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetAccelerationNedRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.acceleration_ned_ = {};
}
SetAccelerationNedRequest::~SetAccelerationNedRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.offboard.SetAccelerationNedRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SetAccelerationNedRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.acceleration_ned_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SetAccelerationNedRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.offboard.SetAccelerationNedRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.acceleration_ned_ != nullptr);
    _impl_.acceleration_ned_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SetAccelerationNedRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> SetAccelerationNedRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SetAccelerationNedRequest, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SetAccelerationNedRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.offboard.AccelerationNed acceleration_ned = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SetAccelerationNedRequest, _impl_.acceleration_ned_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.offboard.AccelerationNed acceleration_ned = 1;
    {PROTOBUF_FIELD_OFFSET(SetAccelerationNedRequest, _impl_.acceleration_ned_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::offboard::AccelerationNed>()},
  }}, {{
  }},
};

::uint8_t* SetAccelerationNedRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.offboard.SetAccelerationNedRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.offboard.AccelerationNed acceleration_ned = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::acceleration_ned(this),
        _Internal::acceleration_ned(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.offboard.SetAccelerationNedRequest)
  return target;
}

::size_t SetAccelerationNedRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.offboard.SetAccelerationNedRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.offboard.AccelerationNed acceleration_ned = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.acceleration_ned_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SetAccelerationNedRequest::_class_data_ = {
    SetAccelerationNedRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SetAccelerationNedRequest::GetClassData() const {
  return &_class_data_;
}

void SetAccelerationNedRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SetAccelerationNedRequest*>(&to_msg);
  auto& from = static_cast<const SetAccelerationNedRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.offboard.SetAccelerationNedRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_acceleration_ned()->::mavsdk::rpc::offboard::AccelerationNed::MergeFrom(
        from._internal_acceleration_ned());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetAccelerationNedRequest::CopyFrom(const SetAccelerationNedRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.offboard.SetAccelerationNedRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SetAccelerationNedRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SetAccelerationNedRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SetAccelerationNedRequest::InternalSwap(SetAccelerationNedRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.acceleration_ned_, other->_impl_.acceleration_ned_);
}

::google::protobuf::Metadata SetAccelerationNedRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_offboard_2foffboard_2eproto_getter, &descriptor_table_offboard_2foffboard_2eproto_once,
      file_level_metadata_offboard_2foffboard_2eproto[24]);
}
// ===================================================================

class SetAccelerationNedResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<SetAccelerationNedResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SetAccelerationNedResponse, _impl_._has_bits_);
  static const ::mavsdk::rpc::offboard::OffboardResult& offboard_result(const SetAccelerationNedResponse* msg);
  static void set_has_offboard_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::offboard::OffboardResult& SetAccelerationNedResponse::_Internal::offboard_result(const SetAccelerationNedResponse* msg) {
  return *msg->_impl_.offboard_result_;
}
SetAccelerationNedResponse::SetAccelerationNedResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.offboard.SetAccelerationNedResponse)
}
inline PROTOBUF_NDEBUG_INLINE SetAccelerationNedResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SetAccelerationNedResponse::SetAccelerationNedResponse(
    ::google::protobuf::Arena* arena,
    const SetAccelerationNedResponse& from)
    : ::google::protobuf::Message(arena) {
  SetAccelerationNedResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.offboard_result_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::offboard::OffboardResult>(arena, *from._impl_.offboard_result_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.offboard.SetAccelerationNedResponse)
}
inline PROTOBUF_NDEBUG_INLINE SetAccelerationNedResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetAccelerationNedResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.offboard_result_ = {};
}
SetAccelerationNedResponse::~SetAccelerationNedResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.offboard.SetAccelerationNedResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SetAccelerationNedResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.offboard_result_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SetAccelerationNedResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.offboard.SetAccelerationNedResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.offboard_result_ != nullptr);
    _impl_.offboard_result_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SetAccelerationNedResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> SetAccelerationNedResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SetAccelerationNedResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SetAccelerationNedResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.offboard.OffboardResult offboard_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SetAccelerationNedResponse, _impl_.offboard_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.offboard.OffboardResult offboard_result = 1;
    {PROTOBUF_FIELD_OFFSET(SetAccelerationNedResponse, _impl_.offboard_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::offboard::OffboardResult>()},
  }}, {{
  }},
};

::uint8_t* SetAccelerationNedResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.offboard.SetAccelerationNedResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.offboard.OffboardResult offboard_result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::offboard_result(this),
        _Internal::offboard_result(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.offboard.SetAccelerationNedResponse)
  return target;
}

::size_t SetAccelerationNedResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.offboard.SetAccelerationNedResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.offboard.OffboardResult offboard_result = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.offboard_result_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SetAccelerationNedResponse::_class_data_ = {
    SetAccelerationNedResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SetAccelerationNedResponse::GetClassData() const {
  return &_class_data_;
}

void SetAccelerationNedResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SetAccelerationNedResponse*>(&to_msg);
  auto& from = static_cast<const SetAccelerationNedResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.offboard.SetAccelerationNedResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_offboard_result()->::mavsdk::rpc::offboard::OffboardResult::MergeFrom(
        from._internal_offboard_result());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetAccelerationNedResponse::CopyFrom(const SetAccelerationNedResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.offboard.SetAccelerationNedResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SetAccelerationNedResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SetAccelerationNedResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SetAccelerationNedResponse::InternalSwap(SetAccelerationNedResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.offboard_result_, other->_impl_.offboard_result_);
}

::google::protobuf::Metadata SetAccelerationNedResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_offboard_2foffboard_2eproto_getter, &descriptor_table_offboard_2foffboard_2eproto_once,
      file_level_metadata_offboard_2foffboard_2eproto[25]);
}
// ===================================================================

class Attitude::_Internal {
 public:
};

Attitude::Attitude(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.offboard.Attitude)
}
Attitude::Attitude(
    ::google::protobuf::Arena* arena, const Attitude& from)
    : Attitude(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE Attitude::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Attitude::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, roll_deg_),
           0,
           offsetof(Impl_, thrust_value_) -
               offsetof(Impl_, roll_deg_) +
               sizeof(Impl_::thrust_value_));
}
Attitude::~Attitude() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.offboard.Attitude)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Attitude::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Attitude::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.offboard.Attitude)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.roll_deg_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.thrust_value_) -
      reinterpret_cast<char*>(&_impl_.roll_deg_)) + sizeof(_impl_.thrust_value_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Attitude::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 0, 2> Attitude::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Attitude_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // float thrust_value = 4;
    {::_pbi::TcParser::FastF32S1,
     {37, 63, 0, PROTOBUF_FIELD_OFFSET(Attitude, _impl_.thrust_value_)}},
    // float roll_deg = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 63, 0, PROTOBUF_FIELD_OFFSET(Attitude, _impl_.roll_deg_)}},
    // float pitch_deg = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 63, 0, PROTOBUF_FIELD_OFFSET(Attitude, _impl_.pitch_deg_)}},
    // float yaw_deg = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 63, 0, PROTOBUF_FIELD_OFFSET(Attitude, _impl_.yaw_deg_)}},
  }}, {{
    65535, 65535
  }}, {{
    // float roll_deg = 1;
    {PROTOBUF_FIELD_OFFSET(Attitude, _impl_.roll_deg_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float pitch_deg = 2;
    {PROTOBUF_FIELD_OFFSET(Attitude, _impl_.pitch_deg_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float yaw_deg = 3;
    {PROTOBUF_FIELD_OFFSET(Attitude, _impl_.yaw_deg_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float thrust_value = 4;
    {PROTOBUF_FIELD_OFFSET(Attitude, _impl_.thrust_value_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* Attitude::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.offboard.Attitude)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // float roll_deg = 1;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_roll_deg = this->_internal_roll_deg();
  ::uint32_t raw_roll_deg;
  memcpy(&raw_roll_deg, &tmp_roll_deg, sizeof(tmp_roll_deg));
  if (raw_roll_deg != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        1, this->_internal_roll_deg(), target);
  }

  // float pitch_deg = 2;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_pitch_deg = this->_internal_pitch_deg();
  ::uint32_t raw_pitch_deg;
  memcpy(&raw_pitch_deg, &tmp_pitch_deg, sizeof(tmp_pitch_deg));
  if (raw_pitch_deg != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        2, this->_internal_pitch_deg(), target);
  }

  // float yaw_deg = 3;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_yaw_deg = this->_internal_yaw_deg();
  ::uint32_t raw_yaw_deg;
  memcpy(&raw_yaw_deg, &tmp_yaw_deg, sizeof(tmp_yaw_deg));
  if (raw_yaw_deg != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        3, this->_internal_yaw_deg(), target);
  }

  // float thrust_value = 4;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_thrust_value = this->_internal_thrust_value();
  ::uint32_t raw_thrust_value;
  memcpy(&raw_thrust_value, &tmp_thrust_value, sizeof(tmp_thrust_value));
  if (raw_thrust_value != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        4, this->_internal_thrust_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.offboard.Attitude)
  return target;
}

::size_t Attitude::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.offboard.Attitude)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // float roll_deg = 1;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_roll_deg = this->_internal_roll_deg();
  ::uint32_t raw_roll_deg;
  memcpy(&raw_roll_deg, &tmp_roll_deg, sizeof(tmp_roll_deg));
  if (raw_roll_deg != 0) {
    total_size += 5;
  }

  // float pitch_deg = 2;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_pitch_deg = this->_internal_pitch_deg();
  ::uint32_t raw_pitch_deg;
  memcpy(&raw_pitch_deg, &tmp_pitch_deg, sizeof(tmp_pitch_deg));
  if (raw_pitch_deg != 0) {
    total_size += 5;
  }

  // float yaw_deg = 3;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_yaw_deg = this->_internal_yaw_deg();
  ::uint32_t raw_yaw_deg;
  memcpy(&raw_yaw_deg, &tmp_yaw_deg, sizeof(tmp_yaw_deg));
  if (raw_yaw_deg != 0) {
    total_size += 5;
  }

  // float thrust_value = 4;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_thrust_value = this->_internal_thrust_value();
  ::uint32_t raw_thrust_value;
  memcpy(&raw_thrust_value, &tmp_thrust_value, sizeof(tmp_thrust_value));
  if (raw_thrust_value != 0) {
    total_size += 5;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Attitude::_class_data_ = {
    Attitude::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Attitude::GetClassData() const {
  return &_class_data_;
}

void Attitude::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Attitude*>(&to_msg);
  auto& from = static_cast<const Attitude&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.offboard.Attitude)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_roll_deg = from._internal_roll_deg();
  ::uint32_t raw_roll_deg;
  memcpy(&raw_roll_deg, &tmp_roll_deg, sizeof(tmp_roll_deg));
  if (raw_roll_deg != 0) {
    _this->_internal_set_roll_deg(from._internal_roll_deg());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_pitch_deg = from._internal_pitch_deg();
  ::uint32_t raw_pitch_deg;
  memcpy(&raw_pitch_deg, &tmp_pitch_deg, sizeof(tmp_pitch_deg));
  if (raw_pitch_deg != 0) {
    _this->_internal_set_pitch_deg(from._internal_pitch_deg());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_yaw_deg = from._internal_yaw_deg();
  ::uint32_t raw_yaw_deg;
  memcpy(&raw_yaw_deg, &tmp_yaw_deg, sizeof(tmp_yaw_deg));
  if (raw_yaw_deg != 0) {
    _this->_internal_set_yaw_deg(from._internal_yaw_deg());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_thrust_value = from._internal_thrust_value();
  ::uint32_t raw_thrust_value;
  memcpy(&raw_thrust_value, &tmp_thrust_value, sizeof(tmp_thrust_value));
  if (raw_thrust_value != 0) {
    _this->_internal_set_thrust_value(from._internal_thrust_value());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Attitude::CopyFrom(const Attitude& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.offboard.Attitude)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Attitude::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Attitude::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Attitude::InternalSwap(Attitude* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Attitude, _impl_.thrust_value_)
      + sizeof(Attitude::_impl_.thrust_value_)
      - PROTOBUF_FIELD_OFFSET(Attitude, _impl_.roll_deg_)>(
          reinterpret_cast<char*>(&_impl_.roll_deg_),
          reinterpret_cast<char*>(&other->_impl_.roll_deg_));
}

::google::protobuf::Metadata Attitude::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_offboard_2foffboard_2eproto_getter, &descriptor_table_offboard_2foffboard_2eproto_once,
      file_level_metadata_offboard_2foffboard_2eproto[26]);
}
// ===================================================================

class ActuatorControlGroup::_Internal {
 public:
};

ActuatorControlGroup::ActuatorControlGroup(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.offboard.ActuatorControlGroup)
}
inline PROTOBUF_NDEBUG_INLINE ActuatorControlGroup::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : controls_{visibility, arena, from.controls_},
        _cached_size_{0} {}

ActuatorControlGroup::ActuatorControlGroup(
    ::google::protobuf::Arena* arena,
    const ActuatorControlGroup& from)
    : ::google::protobuf::Message(arena) {
  ActuatorControlGroup* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.offboard.ActuatorControlGroup)
}
inline PROTOBUF_NDEBUG_INLINE ActuatorControlGroup::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : controls_{visibility, arena},
        _cached_size_{0} {}

inline void ActuatorControlGroup::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ActuatorControlGroup::~ActuatorControlGroup() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.offboard.ActuatorControlGroup)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ActuatorControlGroup::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ActuatorControlGroup::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.offboard.ActuatorControlGroup)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.controls_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ActuatorControlGroup::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> ActuatorControlGroup::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_ActuatorControlGroup_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated float controls = 1;
    {::_pbi::TcParser::FastF32P1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ActuatorControlGroup, _impl_.controls_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated float controls = 1;
    {PROTOBUF_FIELD_OFFSET(ActuatorControlGroup, _impl_.controls_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedFloat)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* ActuatorControlGroup::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.offboard.ActuatorControlGroup)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated float controls = 1;
  if (this->_internal_controls_size() > 0) {
    target = stream->WriteFixedPacked(1, _internal_controls(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.offboard.ActuatorControlGroup)
  return target;
}

::size_t ActuatorControlGroup::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.offboard.ActuatorControlGroup)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated float controls = 1;
  {
    std::size_t data_size = std::size_t{4} *
        ::_pbi::FromIntSize(this->_internal_controls_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ActuatorControlGroup::_class_data_ = {
    ActuatorControlGroup::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ActuatorControlGroup::GetClassData() const {
  return &_class_data_;
}

void ActuatorControlGroup::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ActuatorControlGroup*>(&to_msg);
  auto& from = static_cast<const ActuatorControlGroup&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.offboard.ActuatorControlGroup)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_controls()->MergeFrom(from._internal_controls());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ActuatorControlGroup::CopyFrom(const ActuatorControlGroup& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.offboard.ActuatorControlGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ActuatorControlGroup::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ActuatorControlGroup::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ActuatorControlGroup::InternalSwap(ActuatorControlGroup* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.controls_.InternalSwap(&other->_impl_.controls_);
}

::google::protobuf::Metadata ActuatorControlGroup::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_offboard_2foffboard_2eproto_getter, &descriptor_table_offboard_2foffboard_2eproto_once,
      file_level_metadata_offboard_2foffboard_2eproto[27]);
}
// ===================================================================

class ActuatorControl::_Internal {
 public:
};

ActuatorControl::ActuatorControl(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.offboard.ActuatorControl)
}
inline PROTOBUF_NDEBUG_INLINE ActuatorControl::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : groups_{visibility, arena, from.groups_},
        _cached_size_{0} {}

ActuatorControl::ActuatorControl(
    ::google::protobuf::Arena* arena,
    const ActuatorControl& from)
    : ::google::protobuf::Message(arena) {
  ActuatorControl* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.offboard.ActuatorControl)
}
inline PROTOBUF_NDEBUG_INLINE ActuatorControl::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : groups_{visibility, arena},
        _cached_size_{0} {}

inline void ActuatorControl::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ActuatorControl::~ActuatorControl() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.offboard.ActuatorControl)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ActuatorControl::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ActuatorControl::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.offboard.ActuatorControl)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.groups_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ActuatorControl::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> ActuatorControl::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ActuatorControl_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .mavsdk.rpc.offboard.ActuatorControlGroup groups = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ActuatorControl, _impl_.groups_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .mavsdk.rpc.offboard.ActuatorControlGroup groups = 1;
    {PROTOBUF_FIELD_OFFSET(ActuatorControl, _impl_.groups_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::offboard::ActuatorControlGroup>()},
  }}, {{
  }},
};

::uint8_t* ActuatorControl::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.offboard.ActuatorControl)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .mavsdk.rpc.offboard.ActuatorControlGroup groups = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_groups_size()); i < n; i++) {
    const auto& repfield = this->_internal_groups().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.offboard.ActuatorControl)
  return target;
}

::size_t ActuatorControl::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.offboard.ActuatorControl)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .mavsdk.rpc.offboard.ActuatorControlGroup groups = 1;
  total_size += 1UL * this->_internal_groups_size();
  for (const auto& msg : this->_internal_groups()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ActuatorControl::_class_data_ = {
    ActuatorControl::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ActuatorControl::GetClassData() const {
  return &_class_data_;
}

void ActuatorControl::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ActuatorControl*>(&to_msg);
  auto& from = static_cast<const ActuatorControl&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.offboard.ActuatorControl)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_groups()->MergeFrom(
      from._internal_groups());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ActuatorControl::CopyFrom(const ActuatorControl& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.offboard.ActuatorControl)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ActuatorControl::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ActuatorControl::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ActuatorControl::InternalSwap(ActuatorControl* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.groups_.InternalSwap(&other->_impl_.groups_);
}

::google::protobuf::Metadata ActuatorControl::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_offboard_2foffboard_2eproto_getter, &descriptor_table_offboard_2foffboard_2eproto_once,
      file_level_metadata_offboard_2foffboard_2eproto[28]);
}
// ===================================================================

class AttitudeRate::_Internal {
 public:
};

AttitudeRate::AttitudeRate(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.offboard.AttitudeRate)
}
AttitudeRate::AttitudeRate(
    ::google::protobuf::Arena* arena, const AttitudeRate& from)
    : AttitudeRate(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE AttitudeRate::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void AttitudeRate::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, roll_deg_s_),
           0,
           offsetof(Impl_, thrust_value_) -
               offsetof(Impl_, roll_deg_s_) +
               sizeof(Impl_::thrust_value_));
}
AttitudeRate::~AttitudeRate() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.offboard.AttitudeRate)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AttitudeRate::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void AttitudeRate::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.offboard.AttitudeRate)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.roll_deg_s_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.thrust_value_) -
      reinterpret_cast<char*>(&_impl_.roll_deg_s_)) + sizeof(_impl_.thrust_value_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* AttitudeRate::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 0, 2> AttitudeRate::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_AttitudeRate_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // float thrust_value = 4;
    {::_pbi::TcParser::FastF32S1,
     {37, 63, 0, PROTOBUF_FIELD_OFFSET(AttitudeRate, _impl_.thrust_value_)}},
    // float roll_deg_s = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 63, 0, PROTOBUF_FIELD_OFFSET(AttitudeRate, _impl_.roll_deg_s_)}},
    // float pitch_deg_s = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 63, 0, PROTOBUF_FIELD_OFFSET(AttitudeRate, _impl_.pitch_deg_s_)}},
    // float yaw_deg_s = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 63, 0, PROTOBUF_FIELD_OFFSET(AttitudeRate, _impl_.yaw_deg_s_)}},
  }}, {{
    65535, 65535
  }}, {{
    // float roll_deg_s = 1;
    {PROTOBUF_FIELD_OFFSET(AttitudeRate, _impl_.roll_deg_s_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float pitch_deg_s = 2;
    {PROTOBUF_FIELD_OFFSET(AttitudeRate, _impl_.pitch_deg_s_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float yaw_deg_s = 3;
    {PROTOBUF_FIELD_OFFSET(AttitudeRate, _impl_.yaw_deg_s_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float thrust_value = 4;
    {PROTOBUF_FIELD_OFFSET(AttitudeRate, _impl_.thrust_value_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* AttitudeRate::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.offboard.AttitudeRate)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // float roll_deg_s = 1;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_roll_deg_s = this->_internal_roll_deg_s();
  ::uint32_t raw_roll_deg_s;
  memcpy(&raw_roll_deg_s, &tmp_roll_deg_s, sizeof(tmp_roll_deg_s));
  if (raw_roll_deg_s != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        1, this->_internal_roll_deg_s(), target);
  }

  // float pitch_deg_s = 2;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_pitch_deg_s = this->_internal_pitch_deg_s();
  ::uint32_t raw_pitch_deg_s;
  memcpy(&raw_pitch_deg_s, &tmp_pitch_deg_s, sizeof(tmp_pitch_deg_s));
  if (raw_pitch_deg_s != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        2, this->_internal_pitch_deg_s(), target);
  }

  // float yaw_deg_s = 3;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_yaw_deg_s = this->_internal_yaw_deg_s();
  ::uint32_t raw_yaw_deg_s;
  memcpy(&raw_yaw_deg_s, &tmp_yaw_deg_s, sizeof(tmp_yaw_deg_s));
  if (raw_yaw_deg_s != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        3, this->_internal_yaw_deg_s(), target);
  }

  // float thrust_value = 4;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_thrust_value = this->_internal_thrust_value();
  ::uint32_t raw_thrust_value;
  memcpy(&raw_thrust_value, &tmp_thrust_value, sizeof(tmp_thrust_value));
  if (raw_thrust_value != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        4, this->_internal_thrust_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.offboard.AttitudeRate)
  return target;
}

::size_t AttitudeRate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.offboard.AttitudeRate)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // float roll_deg_s = 1;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_roll_deg_s = this->_internal_roll_deg_s();
  ::uint32_t raw_roll_deg_s;
  memcpy(&raw_roll_deg_s, &tmp_roll_deg_s, sizeof(tmp_roll_deg_s));
  if (raw_roll_deg_s != 0) {
    total_size += 5;
  }

  // float pitch_deg_s = 2;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_pitch_deg_s = this->_internal_pitch_deg_s();
  ::uint32_t raw_pitch_deg_s;
  memcpy(&raw_pitch_deg_s, &tmp_pitch_deg_s, sizeof(tmp_pitch_deg_s));
  if (raw_pitch_deg_s != 0) {
    total_size += 5;
  }

  // float yaw_deg_s = 3;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_yaw_deg_s = this->_internal_yaw_deg_s();
  ::uint32_t raw_yaw_deg_s;
  memcpy(&raw_yaw_deg_s, &tmp_yaw_deg_s, sizeof(tmp_yaw_deg_s));
  if (raw_yaw_deg_s != 0) {
    total_size += 5;
  }

  // float thrust_value = 4;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_thrust_value = this->_internal_thrust_value();
  ::uint32_t raw_thrust_value;
  memcpy(&raw_thrust_value, &tmp_thrust_value, sizeof(tmp_thrust_value));
  if (raw_thrust_value != 0) {
    total_size += 5;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData AttitudeRate::_class_data_ = {
    AttitudeRate::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* AttitudeRate::GetClassData() const {
  return &_class_data_;
}

void AttitudeRate::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<AttitudeRate*>(&to_msg);
  auto& from = static_cast<const AttitudeRate&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.offboard.AttitudeRate)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_roll_deg_s = from._internal_roll_deg_s();
  ::uint32_t raw_roll_deg_s;
  memcpy(&raw_roll_deg_s, &tmp_roll_deg_s, sizeof(tmp_roll_deg_s));
  if (raw_roll_deg_s != 0) {
    _this->_internal_set_roll_deg_s(from._internal_roll_deg_s());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_pitch_deg_s = from._internal_pitch_deg_s();
  ::uint32_t raw_pitch_deg_s;
  memcpy(&raw_pitch_deg_s, &tmp_pitch_deg_s, sizeof(tmp_pitch_deg_s));
  if (raw_pitch_deg_s != 0) {
    _this->_internal_set_pitch_deg_s(from._internal_pitch_deg_s());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_yaw_deg_s = from._internal_yaw_deg_s();
  ::uint32_t raw_yaw_deg_s;
  memcpy(&raw_yaw_deg_s, &tmp_yaw_deg_s, sizeof(tmp_yaw_deg_s));
  if (raw_yaw_deg_s != 0) {
    _this->_internal_set_yaw_deg_s(from._internal_yaw_deg_s());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_thrust_value = from._internal_thrust_value();
  ::uint32_t raw_thrust_value;
  memcpy(&raw_thrust_value, &tmp_thrust_value, sizeof(tmp_thrust_value));
  if (raw_thrust_value != 0) {
    _this->_internal_set_thrust_value(from._internal_thrust_value());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AttitudeRate::CopyFrom(const AttitudeRate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.offboard.AttitudeRate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool AttitudeRate::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* AttitudeRate::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void AttitudeRate::InternalSwap(AttitudeRate* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AttitudeRate, _impl_.thrust_value_)
      + sizeof(AttitudeRate::_impl_.thrust_value_)
      - PROTOBUF_FIELD_OFFSET(AttitudeRate, _impl_.roll_deg_s_)>(
          reinterpret_cast<char*>(&_impl_.roll_deg_s_),
          reinterpret_cast<char*>(&other->_impl_.roll_deg_s_));
}

::google::protobuf::Metadata AttitudeRate::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_offboard_2foffboard_2eproto_getter, &descriptor_table_offboard_2foffboard_2eproto_once,
      file_level_metadata_offboard_2foffboard_2eproto[29]);
}
// ===================================================================

class PositionNedYaw::_Internal {
 public:
};

PositionNedYaw::PositionNedYaw(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.offboard.PositionNedYaw)
}
PositionNedYaw::PositionNedYaw(
    ::google::protobuf::Arena* arena, const PositionNedYaw& from)
    : PositionNedYaw(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE PositionNedYaw::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void PositionNedYaw::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, north_m_),
           0,
           offsetof(Impl_, yaw_deg_) -
               offsetof(Impl_, north_m_) +
               sizeof(Impl_::yaw_deg_));
}
PositionNedYaw::~PositionNedYaw() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.offboard.PositionNedYaw)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PositionNedYaw::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void PositionNedYaw::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.offboard.PositionNedYaw)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.north_m_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.yaw_deg_) -
      reinterpret_cast<char*>(&_impl_.north_m_)) + sizeof(_impl_.yaw_deg_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* PositionNedYaw::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 0, 2> PositionNedYaw::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_PositionNedYaw_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // float yaw_deg = 4;
    {::_pbi::TcParser::FastF32S1,
     {37, 63, 0, PROTOBUF_FIELD_OFFSET(PositionNedYaw, _impl_.yaw_deg_)}},
    // float north_m = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 63, 0, PROTOBUF_FIELD_OFFSET(PositionNedYaw, _impl_.north_m_)}},
    // float east_m = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 63, 0, PROTOBUF_FIELD_OFFSET(PositionNedYaw, _impl_.east_m_)}},
    // float down_m = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 63, 0, PROTOBUF_FIELD_OFFSET(PositionNedYaw, _impl_.down_m_)}},
  }}, {{
    65535, 65535
  }}, {{
    // float north_m = 1;
    {PROTOBUF_FIELD_OFFSET(PositionNedYaw, _impl_.north_m_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float east_m = 2;
    {PROTOBUF_FIELD_OFFSET(PositionNedYaw, _impl_.east_m_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float down_m = 3;
    {PROTOBUF_FIELD_OFFSET(PositionNedYaw, _impl_.down_m_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float yaw_deg = 4;
    {PROTOBUF_FIELD_OFFSET(PositionNedYaw, _impl_.yaw_deg_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* PositionNedYaw::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.offboard.PositionNedYaw)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // float north_m = 1;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_north_m = this->_internal_north_m();
  ::uint32_t raw_north_m;
  memcpy(&raw_north_m, &tmp_north_m, sizeof(tmp_north_m));
  if (raw_north_m != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        1, this->_internal_north_m(), target);
  }

  // float east_m = 2;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_east_m = this->_internal_east_m();
  ::uint32_t raw_east_m;
  memcpy(&raw_east_m, &tmp_east_m, sizeof(tmp_east_m));
  if (raw_east_m != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        2, this->_internal_east_m(), target);
  }

  // float down_m = 3;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_down_m = this->_internal_down_m();
  ::uint32_t raw_down_m;
  memcpy(&raw_down_m, &tmp_down_m, sizeof(tmp_down_m));
  if (raw_down_m != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        3, this->_internal_down_m(), target);
  }

  // float yaw_deg = 4;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_yaw_deg = this->_internal_yaw_deg();
  ::uint32_t raw_yaw_deg;
  memcpy(&raw_yaw_deg, &tmp_yaw_deg, sizeof(tmp_yaw_deg));
  if (raw_yaw_deg != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        4, this->_internal_yaw_deg(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.offboard.PositionNedYaw)
  return target;
}

::size_t PositionNedYaw::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.offboard.PositionNedYaw)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // float north_m = 1;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_north_m = this->_internal_north_m();
  ::uint32_t raw_north_m;
  memcpy(&raw_north_m, &tmp_north_m, sizeof(tmp_north_m));
  if (raw_north_m != 0) {
    total_size += 5;
  }

  // float east_m = 2;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_east_m = this->_internal_east_m();
  ::uint32_t raw_east_m;
  memcpy(&raw_east_m, &tmp_east_m, sizeof(tmp_east_m));
  if (raw_east_m != 0) {
    total_size += 5;
  }

  // float down_m = 3;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_down_m = this->_internal_down_m();
  ::uint32_t raw_down_m;
  memcpy(&raw_down_m, &tmp_down_m, sizeof(tmp_down_m));
  if (raw_down_m != 0) {
    total_size += 5;
  }

  // float yaw_deg = 4;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_yaw_deg = this->_internal_yaw_deg();
  ::uint32_t raw_yaw_deg;
  memcpy(&raw_yaw_deg, &tmp_yaw_deg, sizeof(tmp_yaw_deg));
  if (raw_yaw_deg != 0) {
    total_size += 5;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData PositionNedYaw::_class_data_ = {
    PositionNedYaw::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* PositionNedYaw::GetClassData() const {
  return &_class_data_;
}

void PositionNedYaw::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<PositionNedYaw*>(&to_msg);
  auto& from = static_cast<const PositionNedYaw&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.offboard.PositionNedYaw)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_north_m = from._internal_north_m();
  ::uint32_t raw_north_m;
  memcpy(&raw_north_m, &tmp_north_m, sizeof(tmp_north_m));
  if (raw_north_m != 0) {
    _this->_internal_set_north_m(from._internal_north_m());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_east_m = from._internal_east_m();
  ::uint32_t raw_east_m;
  memcpy(&raw_east_m, &tmp_east_m, sizeof(tmp_east_m));
  if (raw_east_m != 0) {
    _this->_internal_set_east_m(from._internal_east_m());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_down_m = from._internal_down_m();
  ::uint32_t raw_down_m;
  memcpy(&raw_down_m, &tmp_down_m, sizeof(tmp_down_m));
  if (raw_down_m != 0) {
    _this->_internal_set_down_m(from._internal_down_m());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_yaw_deg = from._internal_yaw_deg();
  ::uint32_t raw_yaw_deg;
  memcpy(&raw_yaw_deg, &tmp_yaw_deg, sizeof(tmp_yaw_deg));
  if (raw_yaw_deg != 0) {
    _this->_internal_set_yaw_deg(from._internal_yaw_deg());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PositionNedYaw::CopyFrom(const PositionNedYaw& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.offboard.PositionNedYaw)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PositionNedYaw::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* PositionNedYaw::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void PositionNedYaw::InternalSwap(PositionNedYaw* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PositionNedYaw, _impl_.yaw_deg_)
      + sizeof(PositionNedYaw::_impl_.yaw_deg_)
      - PROTOBUF_FIELD_OFFSET(PositionNedYaw, _impl_.north_m_)>(
          reinterpret_cast<char*>(&_impl_.north_m_),
          reinterpret_cast<char*>(&other->_impl_.north_m_));
}

::google::protobuf::Metadata PositionNedYaw::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_offboard_2foffboard_2eproto_getter, &descriptor_table_offboard_2foffboard_2eproto_once,
      file_level_metadata_offboard_2foffboard_2eproto[30]);
}
// ===================================================================

class PositionGlobalYaw::_Internal {
 public:
};

PositionGlobalYaw::PositionGlobalYaw(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.offboard.PositionGlobalYaw)
}
PositionGlobalYaw::PositionGlobalYaw(
    ::google::protobuf::Arena* arena, const PositionGlobalYaw& from)
    : PositionGlobalYaw(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE PositionGlobalYaw::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void PositionGlobalYaw::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, lat_deg_),
           0,
           offsetof(Impl_, altitude_type_) -
               offsetof(Impl_, lat_deg_) +
               sizeof(Impl_::altitude_type_));
}
PositionGlobalYaw::~PositionGlobalYaw() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.offboard.PositionGlobalYaw)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PositionGlobalYaw::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void PositionGlobalYaw::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.offboard.PositionGlobalYaw)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.lat_deg_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.altitude_type_) -
      reinterpret_cast<char*>(&_impl_.lat_deg_)) + sizeof(_impl_.altitude_type_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* PositionGlobalYaw::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 0, 2> PositionGlobalYaw::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_PositionGlobalYaw_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // double lat_deg = 1;
    {::_pbi::TcParser::FastF64S1,
     {9, 63, 0, PROTOBUF_FIELD_OFFSET(PositionGlobalYaw, _impl_.lat_deg_)}},
    // double lon_deg = 2;
    {::_pbi::TcParser::FastF64S1,
     {17, 63, 0, PROTOBUF_FIELD_OFFSET(PositionGlobalYaw, _impl_.lon_deg_)}},
    // float alt_m = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 63, 0, PROTOBUF_FIELD_OFFSET(PositionGlobalYaw, _impl_.alt_m_)}},
    // float yaw_deg = 4;
    {::_pbi::TcParser::FastF32S1,
     {37, 63, 0, PROTOBUF_FIELD_OFFSET(PositionGlobalYaw, _impl_.yaw_deg_)}},
    // .mavsdk.rpc.offboard.PositionGlobalYaw.AltitudeType altitude_type = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PositionGlobalYaw, _impl_.altitude_type_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(PositionGlobalYaw, _impl_.altitude_type_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // double lat_deg = 1;
    {PROTOBUF_FIELD_OFFSET(PositionGlobalYaw, _impl_.lat_deg_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double lon_deg = 2;
    {PROTOBUF_FIELD_OFFSET(PositionGlobalYaw, _impl_.lon_deg_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // float alt_m = 3;
    {PROTOBUF_FIELD_OFFSET(PositionGlobalYaw, _impl_.alt_m_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float yaw_deg = 4;
    {PROTOBUF_FIELD_OFFSET(PositionGlobalYaw, _impl_.yaw_deg_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // .mavsdk.rpc.offboard.PositionGlobalYaw.AltitudeType altitude_type = 5;
    {PROTOBUF_FIELD_OFFSET(PositionGlobalYaw, _impl_.altitude_type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* PositionGlobalYaw::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.offboard.PositionGlobalYaw)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // double lat_deg = 1;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_lat_deg = this->_internal_lat_deg();
  ::uint64_t raw_lat_deg;
  memcpy(&raw_lat_deg, &tmp_lat_deg, sizeof(tmp_lat_deg));
  if (raw_lat_deg != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        1, this->_internal_lat_deg(), target);
  }

  // double lon_deg = 2;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_lon_deg = this->_internal_lon_deg();
  ::uint64_t raw_lon_deg;
  memcpy(&raw_lon_deg, &tmp_lon_deg, sizeof(tmp_lon_deg));
  if (raw_lon_deg != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        2, this->_internal_lon_deg(), target);
  }

  // float alt_m = 3;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_alt_m = this->_internal_alt_m();
  ::uint32_t raw_alt_m;
  memcpy(&raw_alt_m, &tmp_alt_m, sizeof(tmp_alt_m));
  if (raw_alt_m != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        3, this->_internal_alt_m(), target);
  }

  // float yaw_deg = 4;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_yaw_deg = this->_internal_yaw_deg();
  ::uint32_t raw_yaw_deg;
  memcpy(&raw_yaw_deg, &tmp_yaw_deg, sizeof(tmp_yaw_deg));
  if (raw_yaw_deg != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        4, this->_internal_yaw_deg(), target);
  }

  // .mavsdk.rpc.offboard.PositionGlobalYaw.AltitudeType altitude_type = 5;
  if (this->_internal_altitude_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        5, this->_internal_altitude_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.offboard.PositionGlobalYaw)
  return target;
}

::size_t PositionGlobalYaw::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.offboard.PositionGlobalYaw)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // double lat_deg = 1;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_lat_deg = this->_internal_lat_deg();
  ::uint64_t raw_lat_deg;
  memcpy(&raw_lat_deg, &tmp_lat_deg, sizeof(tmp_lat_deg));
  if (raw_lat_deg != 0) {
    total_size += 9;
  }

  // double lon_deg = 2;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_lon_deg = this->_internal_lon_deg();
  ::uint64_t raw_lon_deg;
  memcpy(&raw_lon_deg, &tmp_lon_deg, sizeof(tmp_lon_deg));
  if (raw_lon_deg != 0) {
    total_size += 9;
  }

  // float alt_m = 3;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_alt_m = this->_internal_alt_m();
  ::uint32_t raw_alt_m;
  memcpy(&raw_alt_m, &tmp_alt_m, sizeof(tmp_alt_m));
  if (raw_alt_m != 0) {
    total_size += 5;
  }

  // float yaw_deg = 4;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_yaw_deg = this->_internal_yaw_deg();
  ::uint32_t raw_yaw_deg;
  memcpy(&raw_yaw_deg, &tmp_yaw_deg, sizeof(tmp_yaw_deg));
  if (raw_yaw_deg != 0) {
    total_size += 5;
  }

  // .mavsdk.rpc.offboard.PositionGlobalYaw.AltitudeType altitude_type = 5;
  if (this->_internal_altitude_type() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_altitude_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData PositionGlobalYaw::_class_data_ = {
    PositionGlobalYaw::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* PositionGlobalYaw::GetClassData() const {
  return &_class_data_;
}

void PositionGlobalYaw::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<PositionGlobalYaw*>(&to_msg);
  auto& from = static_cast<const PositionGlobalYaw&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.offboard.PositionGlobalYaw)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_lat_deg = from._internal_lat_deg();
  ::uint64_t raw_lat_deg;
  memcpy(&raw_lat_deg, &tmp_lat_deg, sizeof(tmp_lat_deg));
  if (raw_lat_deg != 0) {
    _this->_internal_set_lat_deg(from._internal_lat_deg());
  }
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_lon_deg = from._internal_lon_deg();
  ::uint64_t raw_lon_deg;
  memcpy(&raw_lon_deg, &tmp_lon_deg, sizeof(tmp_lon_deg));
  if (raw_lon_deg != 0) {
    _this->_internal_set_lon_deg(from._internal_lon_deg());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_alt_m = from._internal_alt_m();
  ::uint32_t raw_alt_m;
  memcpy(&raw_alt_m, &tmp_alt_m, sizeof(tmp_alt_m));
  if (raw_alt_m != 0) {
    _this->_internal_set_alt_m(from._internal_alt_m());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_yaw_deg = from._internal_yaw_deg();
  ::uint32_t raw_yaw_deg;
  memcpy(&raw_yaw_deg, &tmp_yaw_deg, sizeof(tmp_yaw_deg));
  if (raw_yaw_deg != 0) {
    _this->_internal_set_yaw_deg(from._internal_yaw_deg());
  }
  if (from._internal_altitude_type() != 0) {
    _this->_internal_set_altitude_type(from._internal_altitude_type());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PositionGlobalYaw::CopyFrom(const PositionGlobalYaw& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.offboard.PositionGlobalYaw)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PositionGlobalYaw::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* PositionGlobalYaw::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void PositionGlobalYaw::InternalSwap(PositionGlobalYaw* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PositionGlobalYaw, _impl_.altitude_type_)
      + sizeof(PositionGlobalYaw::_impl_.altitude_type_)
      - PROTOBUF_FIELD_OFFSET(PositionGlobalYaw, _impl_.lat_deg_)>(
          reinterpret_cast<char*>(&_impl_.lat_deg_),
          reinterpret_cast<char*>(&other->_impl_.lat_deg_));
}

::google::protobuf::Metadata PositionGlobalYaw::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_offboard_2foffboard_2eproto_getter, &descriptor_table_offboard_2foffboard_2eproto_once,
      file_level_metadata_offboard_2foffboard_2eproto[31]);
}
// ===================================================================

class VelocityBodyYawspeed::_Internal {
 public:
};

VelocityBodyYawspeed::VelocityBodyYawspeed(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.offboard.VelocityBodyYawspeed)
}
VelocityBodyYawspeed::VelocityBodyYawspeed(
    ::google::protobuf::Arena* arena, const VelocityBodyYawspeed& from)
    : VelocityBodyYawspeed(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE VelocityBodyYawspeed::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void VelocityBodyYawspeed::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, forward_m_s_),
           0,
           offsetof(Impl_, yawspeed_deg_s_) -
               offsetof(Impl_, forward_m_s_) +
               sizeof(Impl_::yawspeed_deg_s_));
}
VelocityBodyYawspeed::~VelocityBodyYawspeed() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.offboard.VelocityBodyYawspeed)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void VelocityBodyYawspeed::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void VelocityBodyYawspeed::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.offboard.VelocityBodyYawspeed)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.forward_m_s_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.yawspeed_deg_s_) -
      reinterpret_cast<char*>(&_impl_.forward_m_s_)) + sizeof(_impl_.yawspeed_deg_s_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* VelocityBodyYawspeed::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 0, 2> VelocityBodyYawspeed::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_VelocityBodyYawspeed_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // float yawspeed_deg_s = 4;
    {::_pbi::TcParser::FastF32S1,
     {37, 63, 0, PROTOBUF_FIELD_OFFSET(VelocityBodyYawspeed, _impl_.yawspeed_deg_s_)}},
    // float forward_m_s = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 63, 0, PROTOBUF_FIELD_OFFSET(VelocityBodyYawspeed, _impl_.forward_m_s_)}},
    // float right_m_s = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 63, 0, PROTOBUF_FIELD_OFFSET(VelocityBodyYawspeed, _impl_.right_m_s_)}},
    // float down_m_s = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 63, 0, PROTOBUF_FIELD_OFFSET(VelocityBodyYawspeed, _impl_.down_m_s_)}},
  }}, {{
    65535, 65535
  }}, {{
    // float forward_m_s = 1;
    {PROTOBUF_FIELD_OFFSET(VelocityBodyYawspeed, _impl_.forward_m_s_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float right_m_s = 2;
    {PROTOBUF_FIELD_OFFSET(VelocityBodyYawspeed, _impl_.right_m_s_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float down_m_s = 3;
    {PROTOBUF_FIELD_OFFSET(VelocityBodyYawspeed, _impl_.down_m_s_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float yawspeed_deg_s = 4;
    {PROTOBUF_FIELD_OFFSET(VelocityBodyYawspeed, _impl_.yawspeed_deg_s_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* VelocityBodyYawspeed::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.offboard.VelocityBodyYawspeed)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // float forward_m_s = 1;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_forward_m_s = this->_internal_forward_m_s();
  ::uint32_t raw_forward_m_s;
  memcpy(&raw_forward_m_s, &tmp_forward_m_s, sizeof(tmp_forward_m_s));
  if (raw_forward_m_s != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        1, this->_internal_forward_m_s(), target);
  }

  // float right_m_s = 2;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_right_m_s = this->_internal_right_m_s();
  ::uint32_t raw_right_m_s;
  memcpy(&raw_right_m_s, &tmp_right_m_s, sizeof(tmp_right_m_s));
  if (raw_right_m_s != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        2, this->_internal_right_m_s(), target);
  }

  // float down_m_s = 3;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_down_m_s = this->_internal_down_m_s();
  ::uint32_t raw_down_m_s;
  memcpy(&raw_down_m_s, &tmp_down_m_s, sizeof(tmp_down_m_s));
  if (raw_down_m_s != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        3, this->_internal_down_m_s(), target);
  }

  // float yawspeed_deg_s = 4;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_yawspeed_deg_s = this->_internal_yawspeed_deg_s();
  ::uint32_t raw_yawspeed_deg_s;
  memcpy(&raw_yawspeed_deg_s, &tmp_yawspeed_deg_s, sizeof(tmp_yawspeed_deg_s));
  if (raw_yawspeed_deg_s != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        4, this->_internal_yawspeed_deg_s(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.offboard.VelocityBodyYawspeed)
  return target;
}

::size_t VelocityBodyYawspeed::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.offboard.VelocityBodyYawspeed)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // float forward_m_s = 1;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_forward_m_s = this->_internal_forward_m_s();
  ::uint32_t raw_forward_m_s;
  memcpy(&raw_forward_m_s, &tmp_forward_m_s, sizeof(tmp_forward_m_s));
  if (raw_forward_m_s != 0) {
    total_size += 5;
  }

  // float right_m_s = 2;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_right_m_s = this->_internal_right_m_s();
  ::uint32_t raw_right_m_s;
  memcpy(&raw_right_m_s, &tmp_right_m_s, sizeof(tmp_right_m_s));
  if (raw_right_m_s != 0) {
    total_size += 5;
  }

  // float down_m_s = 3;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_down_m_s = this->_internal_down_m_s();
  ::uint32_t raw_down_m_s;
  memcpy(&raw_down_m_s, &tmp_down_m_s, sizeof(tmp_down_m_s));
  if (raw_down_m_s != 0) {
    total_size += 5;
  }

  // float yawspeed_deg_s = 4;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_yawspeed_deg_s = this->_internal_yawspeed_deg_s();
  ::uint32_t raw_yawspeed_deg_s;
  memcpy(&raw_yawspeed_deg_s, &tmp_yawspeed_deg_s, sizeof(tmp_yawspeed_deg_s));
  if (raw_yawspeed_deg_s != 0) {
    total_size += 5;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData VelocityBodyYawspeed::_class_data_ = {
    VelocityBodyYawspeed::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* VelocityBodyYawspeed::GetClassData() const {
  return &_class_data_;
}

void VelocityBodyYawspeed::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<VelocityBodyYawspeed*>(&to_msg);
  auto& from = static_cast<const VelocityBodyYawspeed&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.offboard.VelocityBodyYawspeed)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_forward_m_s = from._internal_forward_m_s();
  ::uint32_t raw_forward_m_s;
  memcpy(&raw_forward_m_s, &tmp_forward_m_s, sizeof(tmp_forward_m_s));
  if (raw_forward_m_s != 0) {
    _this->_internal_set_forward_m_s(from._internal_forward_m_s());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_right_m_s = from._internal_right_m_s();
  ::uint32_t raw_right_m_s;
  memcpy(&raw_right_m_s, &tmp_right_m_s, sizeof(tmp_right_m_s));
  if (raw_right_m_s != 0) {
    _this->_internal_set_right_m_s(from._internal_right_m_s());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_down_m_s = from._internal_down_m_s();
  ::uint32_t raw_down_m_s;
  memcpy(&raw_down_m_s, &tmp_down_m_s, sizeof(tmp_down_m_s));
  if (raw_down_m_s != 0) {
    _this->_internal_set_down_m_s(from._internal_down_m_s());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_yawspeed_deg_s = from._internal_yawspeed_deg_s();
  ::uint32_t raw_yawspeed_deg_s;
  memcpy(&raw_yawspeed_deg_s, &tmp_yawspeed_deg_s, sizeof(tmp_yawspeed_deg_s));
  if (raw_yawspeed_deg_s != 0) {
    _this->_internal_set_yawspeed_deg_s(from._internal_yawspeed_deg_s());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void VelocityBodyYawspeed::CopyFrom(const VelocityBodyYawspeed& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.offboard.VelocityBodyYawspeed)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool VelocityBodyYawspeed::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* VelocityBodyYawspeed::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void VelocityBodyYawspeed::InternalSwap(VelocityBodyYawspeed* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(VelocityBodyYawspeed, _impl_.yawspeed_deg_s_)
      + sizeof(VelocityBodyYawspeed::_impl_.yawspeed_deg_s_)
      - PROTOBUF_FIELD_OFFSET(VelocityBodyYawspeed, _impl_.forward_m_s_)>(
          reinterpret_cast<char*>(&_impl_.forward_m_s_),
          reinterpret_cast<char*>(&other->_impl_.forward_m_s_));
}

::google::protobuf::Metadata VelocityBodyYawspeed::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_offboard_2foffboard_2eproto_getter, &descriptor_table_offboard_2foffboard_2eproto_once,
      file_level_metadata_offboard_2foffboard_2eproto[32]);
}
// ===================================================================

class VelocityNedYaw::_Internal {
 public:
};

VelocityNedYaw::VelocityNedYaw(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.offboard.VelocityNedYaw)
}
VelocityNedYaw::VelocityNedYaw(
    ::google::protobuf::Arena* arena, const VelocityNedYaw& from)
    : VelocityNedYaw(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE VelocityNedYaw::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void VelocityNedYaw::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, north_m_s_),
           0,
           offsetof(Impl_, yaw_deg_) -
               offsetof(Impl_, north_m_s_) +
               sizeof(Impl_::yaw_deg_));
}
VelocityNedYaw::~VelocityNedYaw() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.offboard.VelocityNedYaw)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void VelocityNedYaw::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void VelocityNedYaw::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.offboard.VelocityNedYaw)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.north_m_s_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.yaw_deg_) -
      reinterpret_cast<char*>(&_impl_.north_m_s_)) + sizeof(_impl_.yaw_deg_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* VelocityNedYaw::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 0, 2> VelocityNedYaw::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_VelocityNedYaw_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // float yaw_deg = 4;
    {::_pbi::TcParser::FastF32S1,
     {37, 63, 0, PROTOBUF_FIELD_OFFSET(VelocityNedYaw, _impl_.yaw_deg_)}},
    // float north_m_s = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 63, 0, PROTOBUF_FIELD_OFFSET(VelocityNedYaw, _impl_.north_m_s_)}},
    // float east_m_s = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 63, 0, PROTOBUF_FIELD_OFFSET(VelocityNedYaw, _impl_.east_m_s_)}},
    // float down_m_s = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 63, 0, PROTOBUF_FIELD_OFFSET(VelocityNedYaw, _impl_.down_m_s_)}},
  }}, {{
    65535, 65535
  }}, {{
    // float north_m_s = 1;
    {PROTOBUF_FIELD_OFFSET(VelocityNedYaw, _impl_.north_m_s_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float east_m_s = 2;
    {PROTOBUF_FIELD_OFFSET(VelocityNedYaw, _impl_.east_m_s_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float down_m_s = 3;
    {PROTOBUF_FIELD_OFFSET(VelocityNedYaw, _impl_.down_m_s_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float yaw_deg = 4;
    {PROTOBUF_FIELD_OFFSET(VelocityNedYaw, _impl_.yaw_deg_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* VelocityNedYaw::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.offboard.VelocityNedYaw)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // float north_m_s = 1;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_north_m_s = this->_internal_north_m_s();
  ::uint32_t raw_north_m_s;
  memcpy(&raw_north_m_s, &tmp_north_m_s, sizeof(tmp_north_m_s));
  if (raw_north_m_s != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        1, this->_internal_north_m_s(), target);
  }

  // float east_m_s = 2;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_east_m_s = this->_internal_east_m_s();
  ::uint32_t raw_east_m_s;
  memcpy(&raw_east_m_s, &tmp_east_m_s, sizeof(tmp_east_m_s));
  if (raw_east_m_s != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        2, this->_internal_east_m_s(), target);
  }

  // float down_m_s = 3;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_down_m_s = this->_internal_down_m_s();
  ::uint32_t raw_down_m_s;
  memcpy(&raw_down_m_s, &tmp_down_m_s, sizeof(tmp_down_m_s));
  if (raw_down_m_s != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        3, this->_internal_down_m_s(), target);
  }

  // float yaw_deg = 4;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_yaw_deg = this->_internal_yaw_deg();
  ::uint32_t raw_yaw_deg;
  memcpy(&raw_yaw_deg, &tmp_yaw_deg, sizeof(tmp_yaw_deg));
  if (raw_yaw_deg != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        4, this->_internal_yaw_deg(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.offboard.VelocityNedYaw)
  return target;
}

::size_t VelocityNedYaw::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.offboard.VelocityNedYaw)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // float north_m_s = 1;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_north_m_s = this->_internal_north_m_s();
  ::uint32_t raw_north_m_s;
  memcpy(&raw_north_m_s, &tmp_north_m_s, sizeof(tmp_north_m_s));
  if (raw_north_m_s != 0) {
    total_size += 5;
  }

  // float east_m_s = 2;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_east_m_s = this->_internal_east_m_s();
  ::uint32_t raw_east_m_s;
  memcpy(&raw_east_m_s, &tmp_east_m_s, sizeof(tmp_east_m_s));
  if (raw_east_m_s != 0) {
    total_size += 5;
  }

  // float down_m_s = 3;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_down_m_s = this->_internal_down_m_s();
  ::uint32_t raw_down_m_s;
  memcpy(&raw_down_m_s, &tmp_down_m_s, sizeof(tmp_down_m_s));
  if (raw_down_m_s != 0) {
    total_size += 5;
  }

  // float yaw_deg = 4;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_yaw_deg = this->_internal_yaw_deg();
  ::uint32_t raw_yaw_deg;
  memcpy(&raw_yaw_deg, &tmp_yaw_deg, sizeof(tmp_yaw_deg));
  if (raw_yaw_deg != 0) {
    total_size += 5;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData VelocityNedYaw::_class_data_ = {
    VelocityNedYaw::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* VelocityNedYaw::GetClassData() const {
  return &_class_data_;
}

void VelocityNedYaw::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<VelocityNedYaw*>(&to_msg);
  auto& from = static_cast<const VelocityNedYaw&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.offboard.VelocityNedYaw)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_north_m_s = from._internal_north_m_s();
  ::uint32_t raw_north_m_s;
  memcpy(&raw_north_m_s, &tmp_north_m_s, sizeof(tmp_north_m_s));
  if (raw_north_m_s != 0) {
    _this->_internal_set_north_m_s(from._internal_north_m_s());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_east_m_s = from._internal_east_m_s();
  ::uint32_t raw_east_m_s;
  memcpy(&raw_east_m_s, &tmp_east_m_s, sizeof(tmp_east_m_s));
  if (raw_east_m_s != 0) {
    _this->_internal_set_east_m_s(from._internal_east_m_s());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_down_m_s = from._internal_down_m_s();
  ::uint32_t raw_down_m_s;
  memcpy(&raw_down_m_s, &tmp_down_m_s, sizeof(tmp_down_m_s));
  if (raw_down_m_s != 0) {
    _this->_internal_set_down_m_s(from._internal_down_m_s());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_yaw_deg = from._internal_yaw_deg();
  ::uint32_t raw_yaw_deg;
  memcpy(&raw_yaw_deg, &tmp_yaw_deg, sizeof(tmp_yaw_deg));
  if (raw_yaw_deg != 0) {
    _this->_internal_set_yaw_deg(from._internal_yaw_deg());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void VelocityNedYaw::CopyFrom(const VelocityNedYaw& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.offboard.VelocityNedYaw)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool VelocityNedYaw::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* VelocityNedYaw::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void VelocityNedYaw::InternalSwap(VelocityNedYaw* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(VelocityNedYaw, _impl_.yaw_deg_)
      + sizeof(VelocityNedYaw::_impl_.yaw_deg_)
      - PROTOBUF_FIELD_OFFSET(VelocityNedYaw, _impl_.north_m_s_)>(
          reinterpret_cast<char*>(&_impl_.north_m_s_),
          reinterpret_cast<char*>(&other->_impl_.north_m_s_));
}

::google::protobuf::Metadata VelocityNedYaw::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_offboard_2foffboard_2eproto_getter, &descriptor_table_offboard_2foffboard_2eproto_once,
      file_level_metadata_offboard_2foffboard_2eproto[33]);
}
// ===================================================================

class AccelerationNed::_Internal {
 public:
};

AccelerationNed::AccelerationNed(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.offboard.AccelerationNed)
}
AccelerationNed::AccelerationNed(
    ::google::protobuf::Arena* arena, const AccelerationNed& from)
    : AccelerationNed(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE AccelerationNed::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void AccelerationNed::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, north_m_s2_),
           0,
           offsetof(Impl_, down_m_s2_) -
               offsetof(Impl_, north_m_s2_) +
               sizeof(Impl_::down_m_s2_));
}
AccelerationNed::~AccelerationNed() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.offboard.AccelerationNed)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AccelerationNed::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void AccelerationNed::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.offboard.AccelerationNed)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.north_m_s2_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.down_m_s2_) -
      reinterpret_cast<char*>(&_impl_.north_m_s2_)) + sizeof(_impl_.down_m_s2_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* AccelerationNed::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> AccelerationNed::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_AccelerationNed_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // float north_m_s2 = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 63, 0, PROTOBUF_FIELD_OFFSET(AccelerationNed, _impl_.north_m_s2_)}},
    // float east_m_s2 = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 63, 0, PROTOBUF_FIELD_OFFSET(AccelerationNed, _impl_.east_m_s2_)}},
    // float down_m_s2 = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 63, 0, PROTOBUF_FIELD_OFFSET(AccelerationNed, _impl_.down_m_s2_)}},
  }}, {{
    65535, 65535
  }}, {{
    // float north_m_s2 = 1;
    {PROTOBUF_FIELD_OFFSET(AccelerationNed, _impl_.north_m_s2_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float east_m_s2 = 2;
    {PROTOBUF_FIELD_OFFSET(AccelerationNed, _impl_.east_m_s2_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float down_m_s2 = 3;
    {PROTOBUF_FIELD_OFFSET(AccelerationNed, _impl_.down_m_s2_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* AccelerationNed::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.offboard.AccelerationNed)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // float north_m_s2 = 1;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_north_m_s2 = this->_internal_north_m_s2();
  ::uint32_t raw_north_m_s2;
  memcpy(&raw_north_m_s2, &tmp_north_m_s2, sizeof(tmp_north_m_s2));
  if (raw_north_m_s2 != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        1, this->_internal_north_m_s2(), target);
  }

  // float east_m_s2 = 2;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_east_m_s2 = this->_internal_east_m_s2();
  ::uint32_t raw_east_m_s2;
  memcpy(&raw_east_m_s2, &tmp_east_m_s2, sizeof(tmp_east_m_s2));
  if (raw_east_m_s2 != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        2, this->_internal_east_m_s2(), target);
  }

  // float down_m_s2 = 3;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_down_m_s2 = this->_internal_down_m_s2();
  ::uint32_t raw_down_m_s2;
  memcpy(&raw_down_m_s2, &tmp_down_m_s2, sizeof(tmp_down_m_s2));
  if (raw_down_m_s2 != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        3, this->_internal_down_m_s2(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.offboard.AccelerationNed)
  return target;
}

::size_t AccelerationNed::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.offboard.AccelerationNed)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // float north_m_s2 = 1;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_north_m_s2 = this->_internal_north_m_s2();
  ::uint32_t raw_north_m_s2;
  memcpy(&raw_north_m_s2, &tmp_north_m_s2, sizeof(tmp_north_m_s2));
  if (raw_north_m_s2 != 0) {
    total_size += 5;
  }

  // float east_m_s2 = 2;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_east_m_s2 = this->_internal_east_m_s2();
  ::uint32_t raw_east_m_s2;
  memcpy(&raw_east_m_s2, &tmp_east_m_s2, sizeof(tmp_east_m_s2));
  if (raw_east_m_s2 != 0) {
    total_size += 5;
  }

  // float down_m_s2 = 3;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_down_m_s2 = this->_internal_down_m_s2();
  ::uint32_t raw_down_m_s2;
  memcpy(&raw_down_m_s2, &tmp_down_m_s2, sizeof(tmp_down_m_s2));
  if (raw_down_m_s2 != 0) {
    total_size += 5;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData AccelerationNed::_class_data_ = {
    AccelerationNed::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* AccelerationNed::GetClassData() const {
  return &_class_data_;
}

void AccelerationNed::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<AccelerationNed*>(&to_msg);
  auto& from = static_cast<const AccelerationNed&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.offboard.AccelerationNed)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_north_m_s2 = from._internal_north_m_s2();
  ::uint32_t raw_north_m_s2;
  memcpy(&raw_north_m_s2, &tmp_north_m_s2, sizeof(tmp_north_m_s2));
  if (raw_north_m_s2 != 0) {
    _this->_internal_set_north_m_s2(from._internal_north_m_s2());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_east_m_s2 = from._internal_east_m_s2();
  ::uint32_t raw_east_m_s2;
  memcpy(&raw_east_m_s2, &tmp_east_m_s2, sizeof(tmp_east_m_s2));
  if (raw_east_m_s2 != 0) {
    _this->_internal_set_east_m_s2(from._internal_east_m_s2());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_down_m_s2 = from._internal_down_m_s2();
  ::uint32_t raw_down_m_s2;
  memcpy(&raw_down_m_s2, &tmp_down_m_s2, sizeof(tmp_down_m_s2));
  if (raw_down_m_s2 != 0) {
    _this->_internal_set_down_m_s2(from._internal_down_m_s2());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AccelerationNed::CopyFrom(const AccelerationNed& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.offboard.AccelerationNed)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool AccelerationNed::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* AccelerationNed::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void AccelerationNed::InternalSwap(AccelerationNed* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AccelerationNed, _impl_.down_m_s2_)
      + sizeof(AccelerationNed::_impl_.down_m_s2_)
      - PROTOBUF_FIELD_OFFSET(AccelerationNed, _impl_.north_m_s2_)>(
          reinterpret_cast<char*>(&_impl_.north_m_s2_),
          reinterpret_cast<char*>(&other->_impl_.north_m_s2_));
}

::google::protobuf::Metadata AccelerationNed::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_offboard_2foffboard_2eproto_getter, &descriptor_table_offboard_2foffboard_2eproto_once,
      file_level_metadata_offboard_2foffboard_2eproto[34]);
}
// ===================================================================

class OffboardResult::_Internal {
 public:
};

OffboardResult::OffboardResult(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.offboard.OffboardResult)
}
inline PROTOBUF_NDEBUG_INLINE OffboardResult::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : result_str_(arena, from.result_str_),
        _cached_size_{0} {}

OffboardResult::OffboardResult(
    ::google::protobuf::Arena* arena,
    const OffboardResult& from)
    : ::google::protobuf::Message(arena) {
  OffboardResult* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.result_ = from._impl_.result_;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.offboard.OffboardResult)
}
inline PROTOBUF_NDEBUG_INLINE OffboardResult::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : result_str_(arena),
        _cached_size_{0} {}

inline void OffboardResult::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.result_ = {};
}
OffboardResult::~OffboardResult() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.offboard.OffboardResult)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void OffboardResult::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.result_str_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void OffboardResult::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.offboard.OffboardResult)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.result_str_.ClearToEmpty();
  _impl_.result_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* OffboardResult::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 53, 2> OffboardResult::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_OffboardResult_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string result_str = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(OffboardResult, _impl_.result_str_)}},
    // .mavsdk.rpc.offboard.OffboardResult.Result result = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(OffboardResult, _impl_.result_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(OffboardResult, _impl_.result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.offboard.OffboardResult.Result result = 1;
    {PROTOBUF_FIELD_OFFSET(OffboardResult, _impl_.result_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string result_str = 2;
    {PROTOBUF_FIELD_OFFSET(OffboardResult, _impl_.result_str_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\42\0\12\0\0\0\0\0"
    "mavsdk.rpc.offboard.OffboardResult"
    "result_str"
  }},
};

::uint8_t* OffboardResult::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.offboard.OffboardResult)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .mavsdk.rpc.offboard.OffboardResult.Result result = 1;
  if (this->_internal_result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_result(), target);
  }

  // string result_str = 2;
  if (!this->_internal_result_str().empty()) {
    const std::string& _s = this->_internal_result_str();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mavsdk.rpc.offboard.OffboardResult.result_str");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.offboard.OffboardResult)
  return target;
}

::size_t OffboardResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.offboard.OffboardResult)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string result_str = 2;
  if (!this->_internal_result_str().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_result_str());
  }

  // .mavsdk.rpc.offboard.OffboardResult.Result result = 1;
  if (this->_internal_result() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_result());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData OffboardResult::_class_data_ = {
    OffboardResult::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* OffboardResult::GetClassData() const {
  return &_class_data_;
}

void OffboardResult::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<OffboardResult*>(&to_msg);
  auto& from = static_cast<const OffboardResult&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.offboard.OffboardResult)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_result_str().empty()) {
    _this->_internal_set_result_str(from._internal_result_str());
  }
  if (from._internal_result() != 0) {
    _this->_internal_set_result(from._internal_result());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void OffboardResult::CopyFrom(const OffboardResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.offboard.OffboardResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool OffboardResult::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* OffboardResult::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void OffboardResult::InternalSwap(OffboardResult* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.result_str_, &other->_impl_.result_str_, arena);
  swap(_impl_.result_, other->_impl_.result_);
}

::google::protobuf::Metadata OffboardResult::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_offboard_2foffboard_2eproto_getter, &descriptor_table_offboard_2foffboard_2eproto_once,
      file_level_metadata_offboard_2foffboard_2eproto[35]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace offboard
}  // namespace rpc
}  // namespace mavsdk
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ftp/ftp.proto

#include "ftp/ftp.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace mavsdk {
namespace rpc {
namespace ftp {

inline constexpr SubscribeUploadRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : local_file_path_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        remote_dir_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SubscribeUploadRequest::SubscribeUploadRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SubscribeUploadRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscribeUploadRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscribeUploadRequestDefaultTypeInternal() {}
  union {
    SubscribeUploadRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscribeUploadRequestDefaultTypeInternal _SubscribeUploadRequest_default_instance_;

inline constexpr SubscribeDownloadRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : remote_file_path_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        local_dir_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        use_burst_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SubscribeDownloadRequest::SubscribeDownloadRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SubscribeDownloadRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscribeDownloadRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscribeDownloadRequestDefaultTypeInternal() {}
  union {
    SubscribeDownloadRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscribeDownloadRequestDefaultTypeInternal _SubscribeDownloadRequest_default_instance_;

inline constexpr SetTargetCompidRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : compid_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SetTargetCompidRequest::SetTargetCompidRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SetTargetCompidRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetTargetCompidRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetTargetCompidRequestDefaultTypeInternal() {}
  union {
    SetTargetCompidRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetTargetCompidRequestDefaultTypeInternal _SetTargetCompidRequest_default_instance_;

inline constexpr RenameRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : remote_from_path_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        remote_to_path_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR RenameRequest::RenameRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RenameRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RenameRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RenameRequestDefaultTypeInternal() {}
  union {
    RenameRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RenameRequestDefaultTypeInternal _RenameRequest_default_instance_;

inline constexpr RemoveFileRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : remote_file_path_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR RemoveFileRequest::RemoveFileRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RemoveFileRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RemoveFileRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RemoveFileRequestDefaultTypeInternal() {}
  union {
    RemoveFileRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RemoveFileRequestDefaultTypeInternal _RemoveFileRequest_default_instance_;

inline constexpr RemoveDirectoryRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : remote_dir_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR RemoveDirectoryRequest::RemoveDirectoryRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RemoveDirectoryRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RemoveDirectoryRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RemoveDirectoryRequestDefaultTypeInternal() {}
  union {
    RemoveDirectoryRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RemoveDirectoryRequestDefaultTypeInternal _RemoveDirectoryRequest_default_instance_;

inline constexpr ProgressData::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : bytes_transferred_{0u},
        total_bytes_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ProgressData::ProgressData(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ProgressDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ProgressDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ProgressDataDefaultTypeInternal() {}
  union {
    ProgressData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ProgressDataDefaultTypeInternal _ProgressData_default_instance_;

inline constexpr ListDirectoryRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : remote_dir_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ListDirectoryRequest::ListDirectoryRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ListDirectoryRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListDirectoryRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListDirectoryRequestDefaultTypeInternal() {}
  union {
    ListDirectoryRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListDirectoryRequestDefaultTypeInternal _ListDirectoryRequest_default_instance_;

inline constexpr FtpResult::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : result_str_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        result_{static_cast< ::mavsdk::rpc::ftp::FtpResult_Result >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR FtpResult::FtpResult(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct FtpResultDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FtpResultDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FtpResultDefaultTypeInternal() {}
  union {
    FtpResult _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FtpResultDefaultTypeInternal _FtpResult_default_instance_;

inline constexpr CreateDirectoryRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : remote_dir_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CreateDirectoryRequest::CreateDirectoryRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CreateDirectoryRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateDirectoryRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateDirectoryRequestDefaultTypeInternal() {}
  union {
    CreateDirectoryRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateDirectoryRequestDefaultTypeInternal _CreateDirectoryRequest_default_instance_;

inline constexpr AreFilesIdenticalRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : local_file_path_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        remote_file_path_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR AreFilesIdenticalRequest::AreFilesIdenticalRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct AreFilesIdenticalRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AreFilesIdenticalRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AreFilesIdenticalRequestDefaultTypeInternal() {}
  union {
    AreFilesIdenticalRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AreFilesIdenticalRequestDefaultTypeInternal _AreFilesIdenticalRequest_default_instance_;

inline constexpr UploadResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        ftp_result_{nullptr},
        progress_data_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR UploadResponse::UploadResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct UploadResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UploadResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UploadResponseDefaultTypeInternal() {}
  union {
    UploadResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UploadResponseDefaultTypeInternal _UploadResponse_default_instance_;

inline constexpr SetTargetCompidResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        ftp_result_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR SetTargetCompidResponse::SetTargetCompidResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SetTargetCompidResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetTargetCompidResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetTargetCompidResponseDefaultTypeInternal() {}
  union {
    SetTargetCompidResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetTargetCompidResponseDefaultTypeInternal _SetTargetCompidResponse_default_instance_;

inline constexpr RenameResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        ftp_result_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR RenameResponse::RenameResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RenameResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RenameResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RenameResponseDefaultTypeInternal() {}
  union {
    RenameResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RenameResponseDefaultTypeInternal _RenameResponse_default_instance_;

inline constexpr RemoveFileResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        ftp_result_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR RemoveFileResponse::RemoveFileResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RemoveFileResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RemoveFileResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RemoveFileResponseDefaultTypeInternal() {}
  union {
    RemoveFileResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RemoveFileResponseDefaultTypeInternal _RemoveFileResponse_default_instance_;

inline constexpr RemoveDirectoryResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        ftp_result_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR RemoveDirectoryResponse::RemoveDirectoryResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RemoveDirectoryResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RemoveDirectoryResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RemoveDirectoryResponseDefaultTypeInternal() {}
  union {
    RemoveDirectoryResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RemoveDirectoryResponseDefaultTypeInternal _RemoveDirectoryResponse_default_instance_;

inline constexpr ListDirectoryResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        paths_{},
        ftp_result_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR ListDirectoryResponse::ListDirectoryResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ListDirectoryResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListDirectoryResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListDirectoryResponseDefaultTypeInternal() {}
  union {
    ListDirectoryResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListDirectoryResponseDefaultTypeInternal _ListDirectoryResponse_default_instance_;

inline constexpr DownloadResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        ftp_result_{nullptr},
        progress_data_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR DownloadResponse::DownloadResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct DownloadResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DownloadResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DownloadResponseDefaultTypeInternal() {}
  union {
    DownloadResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DownloadResponseDefaultTypeInternal _DownloadResponse_default_instance_;

inline constexpr CreateDirectoryResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        ftp_result_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR CreateDirectoryResponse::CreateDirectoryResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CreateDirectoryResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateDirectoryResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateDirectoryResponseDefaultTypeInternal() {}
  union {
    CreateDirectoryResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateDirectoryResponseDefaultTypeInternal _CreateDirectoryResponse_default_instance_;

inline constexpr AreFilesIdenticalResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        ftp_result_{nullptr},
        are_identical_{false} {}

template <typename>
PROTOBUF_CONSTEXPR AreFilesIdenticalResponse::AreFilesIdenticalResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct AreFilesIdenticalResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AreFilesIdenticalResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AreFilesIdenticalResponseDefaultTypeInternal() {}
  union {
    AreFilesIdenticalResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AreFilesIdenticalResponseDefaultTypeInternal _AreFilesIdenticalResponse_default_instance_;
}  // namespace ftp
}  // namespace rpc
}  // namespace mavsdk
static ::_pb::Metadata file_level_metadata_ftp_2fftp_2eproto[20];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_ftp_2fftp_2eproto[1];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_ftp_2fftp_2eproto = nullptr;
const ::uint32_t TableStruct_ftp_2fftp_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::ftp::SubscribeDownloadRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::ftp::SubscribeDownloadRequest, _impl_.remote_file_path_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::ftp::SubscribeDownloadRequest, _impl_.local_dir_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::ftp::SubscribeDownloadRequest, _impl_.use_burst_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::ftp::DownloadResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::ftp::DownloadResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::ftp::DownloadResponse, _impl_.ftp_result_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::ftp::DownloadResponse, _impl_.progress_data_),
    0,
    1,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::ftp::SubscribeUploadRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::ftp::SubscribeUploadRequest, _impl_.local_file_path_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::ftp::SubscribeUploadRequest, _impl_.remote_dir_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::ftp::UploadResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::ftp::UploadResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::ftp::UploadResponse, _impl_.ftp_result_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::ftp::UploadResponse, _impl_.progress_data_),
    0,
    1,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::ftp::ListDirectoryRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::ftp::ListDirectoryRequest, _impl_.remote_dir_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::ftp::ListDirectoryResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::ftp::ListDirectoryResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::ftp::ListDirectoryResponse, _impl_.ftp_result_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::ftp::ListDirectoryResponse, _impl_.paths_),
    0,
    ~0u,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::ftp::CreateDirectoryRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::ftp::CreateDirectoryRequest, _impl_.remote_dir_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::ftp::CreateDirectoryResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::ftp::CreateDirectoryResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::ftp::CreateDirectoryResponse, _impl_.ftp_result_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::ftp::RemoveDirectoryRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::ftp::RemoveDirectoryRequest, _impl_.remote_dir_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::ftp::RemoveDirectoryResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::ftp::RemoveDirectoryResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::ftp::RemoveDirectoryResponse, _impl_.ftp_result_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::ftp::RemoveFileRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::ftp::RemoveFileRequest, _impl_.remote_file_path_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::ftp::RemoveFileResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::ftp::RemoveFileResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::ftp::RemoveFileResponse, _impl_.ftp_result_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::ftp::RenameRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::ftp::RenameRequest, _impl_.remote_from_path_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::ftp::RenameRequest, _impl_.remote_to_path_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::ftp::RenameResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::ftp::RenameResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::ftp::RenameResponse, _impl_.ftp_result_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::ftp::AreFilesIdenticalRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::ftp::AreFilesIdenticalRequest, _impl_.local_file_path_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::ftp::AreFilesIdenticalRequest, _impl_.remote_file_path_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::ftp::AreFilesIdenticalResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::ftp::AreFilesIdenticalResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::ftp::AreFilesIdenticalResponse, _impl_.ftp_result_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::ftp::AreFilesIdenticalResponse, _impl_.are_identical_),
    0,
    ~0u,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::ftp::SetTargetCompidRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::ftp::SetTargetCompidRequest, _impl_.compid_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::ftp::SetTargetCompidResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::ftp::SetTargetCompidResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::ftp::SetTargetCompidResponse, _impl_.ftp_result_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::ftp::ProgressData, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::ftp::ProgressData, _impl_.bytes_transferred_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::ftp::ProgressData, _impl_.total_bytes_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::ftp::FtpResult, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::ftp::FtpResult, _impl_.result_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::ftp::FtpResult, _impl_.result_str_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::mavsdk::rpc::ftp::SubscribeDownloadRequest)},
        {11, 21, -1, sizeof(::mavsdk::rpc::ftp::DownloadResponse)},
        {23, -1, -1, sizeof(::mavsdk::rpc::ftp::SubscribeUploadRequest)},
        {33, 43, -1, sizeof(::mavsdk::rpc::ftp::UploadResponse)},
        {45, -1, -1, sizeof(::mavsdk::rpc::ftp::ListDirectoryRequest)},
        {54, 64, -1, sizeof(::mavsdk::rpc::ftp::ListDirectoryResponse)},
        {66, -1, -1, sizeof(::mavsdk::rpc::ftp::CreateDirectoryRequest)},
        {75, 84, -1, sizeof(::mavsdk::rpc::ftp::CreateDirectoryResponse)},
        {85, -1, -1, sizeof(::mavsdk::rpc::ftp::RemoveDirectoryRequest)},
        {94, 103, -1, sizeof(::mavsdk::rpc::ftp::RemoveDirectoryResponse)},
        {104, -1, -1, sizeof(::mavsdk::rpc::ftp::RemoveFileRequest)},
        {113, 122, -1, sizeof(::mavsdk::rpc::ftp::RemoveFileResponse)},
        {123, -1, -1, sizeof(::mavsdk::rpc::ftp::RenameRequest)},
        {133, 142, -1, sizeof(::mavsdk::rpc::ftp::RenameResponse)},
        {143, -1, -1, sizeof(::mavsdk::rpc::ftp::AreFilesIdenticalRequest)},
        {153, 163, -1, sizeof(::mavsdk::rpc::ftp::AreFilesIdenticalResponse)},
        {165, -1, -1, sizeof(::mavsdk::rpc::ftp::SetTargetCompidRequest)},
        {174, 183, -1, sizeof(::mavsdk::rpc::ftp::SetTargetCompidResponse)},
        {184, -1, -1, sizeof(::mavsdk::rpc::ftp::ProgressData)},
        {194, -1, -1, sizeof(::mavsdk::rpc::ftp::FtpResult)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::mavsdk::rpc::ftp::_SubscribeDownloadRequest_default_instance_._instance,
    &::mavsdk::rpc::ftp::_DownloadResponse_default_instance_._instance,
    &::mavsdk::rpc::ftp::_SubscribeUploadRequest_default_instance_._instance,
    &::mavsdk::rpc::ftp::_UploadResponse_default_instance_._instance,
    &::mavsdk::rpc::ftp::_ListDirectoryRequest_default_instance_._instance,
    &::mavsdk::rpc::ftp::_ListDirectoryResponse_default_instance_._instance,
    &::mavsdk::rpc::ftp::_CreateDirectoryRequest_default_instance_._instance,
    &::mavsdk::rpc::ftp::_CreateDirectoryResponse_default_instance_._instance,
    &::mavsdk::rpc::ftp::_RemoveDirectoryRequest_default_instance_._instance,
    &::mavsdk::rpc::ftp::_RemoveDirectoryResponse_default_instance_._instance,
    &::mavsdk::rpc::ftp::_RemoveFileRequest_default_instance_._instance,
    &::mavsdk::rpc::ftp::_RemoveFileResponse_default_instance_._instance,
    &::mavsdk::rpc::ftp::_RenameRequest_default_instance_._instance,
    &::mavsdk::rpc::ftp::_RenameResponse_default_instance_._instance,
    &::mavsdk::rpc::ftp::_AreFilesIdenticalRequest_default_instance_._instance,
    &::mavsdk::rpc::ftp::_AreFilesIdenticalResponse_default_instance_._instance,
    &::mavsdk::rpc::ftp::_SetTargetCompidRequest_default_instance_._instance,
    &::mavsdk::rpc::ftp::_SetTargetCompidResponse_default_instance_._instance,
    &::mavsdk::rpc::ftp::_ProgressData_default_instance_._instance,
    &::mavsdk::rpc::ftp::_FtpResult_default_instance_._instance,
};
const char descriptor_table_protodef_ftp_2fftp_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\rftp/ftp.proto\022\016mavsdk.rpc.ftp\032\024mavsdk_"
    "options.proto\"Z\n\030SubscribeDownloadReques"
    "t\022\030\n\020remote_file_path\030\001 \001(\t\022\021\n\tlocal_dir"
    "\030\002 \001(\t\022\021\n\tuse_burst\030\003 \001(\010\"v\n\020DownloadRes"
    "ponse\022-\n\nftp_result\030\001 \001(\0132\031.mavsdk.rpc.f"
    "tp.FtpResult\0223\n\rprogress_data\030\002 \001(\0132\034.ma"
    "vsdk.rpc.ftp.ProgressData\"E\n\026SubscribeUp"
    "loadRequest\022\027\n\017local_file_path\030\001 \001(\t\022\022\n\n"
    "remote_dir\030\002 \001(\t\"t\n\016UploadResponse\022-\n\nft"
    "p_result\030\001 \001(\0132\031.mavsdk.rpc.ftp.FtpResul"
    "t\0223\n\rprogress_data\030\002 \001(\0132\034.mavsdk.rpc.ft"
    "p.ProgressData\"*\n\024ListDirectoryRequest\022\022"
    "\n\nremote_dir\030\001 \001(\t\"U\n\025ListDirectoryRespo"
    "nse\022-\n\nftp_result\030\001 \001(\0132\031.mavsdk.rpc.ftp"
    ".FtpResult\022\r\n\005paths\030\002 \003(\t\",\n\026CreateDirec"
    "toryRequest\022\022\n\nremote_dir\030\001 \001(\t\"H\n\027Creat"
    "eDirectoryResponse\022-\n\nftp_result\030\001 \001(\0132\031"
    ".mavsdk.rpc.ftp.FtpResult\",\n\026RemoveDirec"
    "toryRequest\022\022\n\nremote_dir\030\001 \001(\t\"H\n\027Remov"
    "eDirectoryResponse\022-\n\nftp_result\030\001 \001(\0132\031"
    ".mavsdk.rpc.ftp.FtpResult\"-\n\021RemoveFileR"
    "equest\022\030\n\020remote_file_path\030\001 \001(\t\"C\n\022Remo"
    "veFileResponse\022-\n\nftp_result\030\001 \001(\0132\031.mav"
    "sdk.rpc.ftp.FtpResult\"A\n\rRenameRequest\022\030"
    "\n\020remote_from_path\030\001 \001(\t\022\026\n\016remote_to_pa"
    "th\030\002 \001(\t\"\?\n\016RenameResponse\022-\n\nftp_result"
    "\030\001 \001(\0132\031.mavsdk.rpc.ftp.FtpResult\"M\n\030Are"
    "FilesIdenticalRequest\022\027\n\017local_file_path"
    "\030\001 \001(\t\022\030\n\020remote_file_path\030\002 \001(\t\"a\n\031AreF"
    "ilesIdenticalResponse\022-\n\nftp_result\030\001 \001("
    "\0132\031.mavsdk.rpc.ftp.FtpResult\022\025\n\rare_iden"
    "tical\030\002 \001(\010\"(\n\026SetTargetCompidRequest\022\016\n"
    "\006compid\030\001 \001(\r\"H\n\027SetTargetCompidResponse"
    "\022-\n\nftp_result\030\001 \001(\0132\031.mavsdk.rpc.ftp.Ft"
    "pResult\">\n\014ProgressData\022\031\n\021bytes_transfe"
    "rred\030\001 \001(\r\022\023\n\013total_bytes\030\002 \001(\r\"\216\003\n\tFtpR"
    "esult\0220\n\006result\030\001 \001(\0162 .mavsdk.rpc.ftp.F"
    "tpResult.Result\022\022\n\nresult_str\030\002 \001(\t\"\272\002\n\006"
    "Result\022\022\n\016RESULT_UNKNOWN\020\000\022\022\n\016RESULT_SUC"
    "CESS\020\001\022\017\n\013RESULT_NEXT\020\002\022\022\n\016RESULT_TIMEOU"
    "T\020\003\022\017\n\013RESULT_BUSY\020\004\022\030\n\024RESULT_FILE_IO_E"
    "RROR\020\005\022\026\n\022RESULT_FILE_EXISTS\020\006\022\036\n\032RESULT"
    "_FILE_DOES_NOT_EXIST\020\007\022\031\n\025RESULT_FILE_PR"
    "OTECTED\020\010\022\034\n\030RESULT_INVALID_PARAMETER\020\t\022"
    "\026\n\022RESULT_UNSUPPORTED\020\n\022\031\n\025RESULT_PROTOC"
    "OL_ERROR\020\013\022\024\n\020RESULT_NO_SYSTEM\020\0142\204\007\n\nFtp"
    "Service\022k\n\021SubscribeDownload\022(.mavsdk.rp"
    "c.ftp.SubscribeDownloadRequest\032 .mavsdk."
    "rpc.ftp.DownloadResponse\"\010\200\265\030\000\210\265\030\0010\001\022e\n\017"
    "SubscribeUpload\022&.mavsdk.rpc.ftp.Subscri"
    "beUploadRequest\032\036.mavsdk.rpc.ftp.UploadR"
    "esponse\"\010\200\265\030\000\210\265\030\0010\001\022^\n\rListDirectory\022$.m"
    "avsdk.rpc.ftp.ListDirectoryRequest\032%.mav"
    "sdk.rpc.ftp.ListDirectoryResponse\"\000\022d\n\017C"
    "reateDirectory\022&.mavsdk.rpc.ftp.CreateDi"
    "rectoryRequest\032\'.mavsdk.rpc.ftp.CreateDi"
    "rectoryResponse\"\000\022d\n\017RemoveDirectory\022&.m"
    "avsdk.rpc.ftp.RemoveDirectoryRequest\032\'.m"
    "avsdk.rpc.ftp.RemoveDirectoryResponse\"\000\022"
    "U\n\nRemoveFile\022!.mavsdk.rpc.ftp.RemoveFil"
    "eRequest\032\".mavsdk.rpc.ftp.RemoveFileResp"
    "onse\"\000\022I\n\006Rename\022\035.mavsdk.rpc.ftp.Rename"
    "Request\032\036.mavsdk.rpc.ftp.RenameResponse\""
    "\000\022j\n\021AreFilesIdentical\022(.mavsdk.rpc.ftp."
    "AreFilesIdenticalRequest\032).mavsdk.rpc.ft"
    "p.AreFilesIdenticalResponse\"\000\022h\n\017SetTarg"
    "etCompid\022&.mavsdk.rpc.ftp.SetTargetCompi"
    "dRequest\032\'.mavsdk.rpc.ftp.SetTargetCompi"
    "dResponse\"\004\200\265\030\001B\031\n\rio.mavsdk.ftpB\010FtpPro"
    "tob\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_ftp_2fftp_2eproto_deps[1] =
    {
        &::descriptor_table_mavsdk_5foptions_2eproto,
};
static ::absl::once_flag descriptor_table_ftp_2fftp_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_ftp_2fftp_2eproto = {
    false,
    false,
    2770,
    descriptor_table_protodef_ftp_2fftp_2eproto,
    "ftp/ftp.proto",
    &descriptor_table_ftp_2fftp_2eproto_once,
    descriptor_table_ftp_2fftp_2eproto_deps,
    1,
    20,
    schemas,
    file_default_instances,
    TableStruct_ftp_2fftp_2eproto::offsets,
    file_level_metadata_ftp_2fftp_2eproto,
    file_level_enum_descriptors_ftp_2fftp_2eproto,
    file_level_service_descriptors_ftp_2fftp_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_ftp_2fftp_2eproto_getter() {
  return &descriptor_table_ftp_2fftp_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_ftp_2fftp_2eproto(&descriptor_table_ftp_2fftp_2eproto);
namespace mavsdk {
namespace rpc {
namespace ftp {
const ::google::protobuf::EnumDescriptor* FtpResult_Result_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_ftp_2fftp_2eproto);
  return file_level_enum_descriptors_ftp_2fftp_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t FtpResult_Result_internal_data_[] = {
    851968u, 0u, };
bool FtpResult_Result_IsValid(int value) {
  return 0 <= value && value <= 12;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr FtpResult_Result FtpResult::RESULT_UNKNOWN;
constexpr FtpResult_Result FtpResult::RESULT_SUCCESS;
constexpr FtpResult_Result FtpResult::RESULT_NEXT;
constexpr FtpResult_Result FtpResult::RESULT_TIMEOUT;
constexpr FtpResult_Result FtpResult::RESULT_BUSY;
constexpr FtpResult_Result FtpResult::RESULT_FILE_IO_ERROR;
constexpr FtpResult_Result FtpResult::RESULT_FILE_EXISTS;
constexpr FtpResult_Result FtpResult::RESULT_FILE_DOES_NOT_EXIST;
constexpr FtpResult_Result FtpResult::RESULT_FILE_PROTECTED;
constexpr FtpResult_Result FtpResult::RESULT_INVALID_PARAMETER;
constexpr FtpResult_Result FtpResult::RESULT_UNSUPPORTED;
constexpr FtpResult_Result FtpResult::RESULT_PROTOCOL_ERROR;
constexpr FtpResult_Result FtpResult::RESULT_NO_SYSTEM;
constexpr FtpResult_Result FtpResult::Result_MIN;
constexpr FtpResult_Result FtpResult::Result_MAX;
constexpr int FtpResult::Result_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
// ===================================================================

class SubscribeDownloadRequest::_Internal {
 public:
};

SubscribeDownloadRequest::SubscribeDownloadRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.ftp.SubscribeDownloadRequest)
}
inline PROTOBUF_NDEBUG_INLINE SubscribeDownloadRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : remote_file_path_(arena, from.remote_file_path_),
        local_dir_(arena, from.local_dir_),
        _cached_size_{0} {}

SubscribeDownloadRequest::SubscribeDownloadRequest(
    ::google::protobuf::Arena* arena,
    const SubscribeDownloadRequest& from)
    : ::google::protobuf::Message(arena) {
  SubscribeDownloadRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.use_burst_ = from._impl_.use_burst_;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.ftp.SubscribeDownloadRequest)
}
inline PROTOBUF_NDEBUG_INLINE SubscribeDownloadRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : remote_file_path_(arena),
        local_dir_(arena),
        _cached_size_{0} {}

inline void SubscribeDownloadRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.use_burst_ = {};
}
SubscribeDownloadRequest::~SubscribeDownloadRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.ftp.SubscribeDownloadRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SubscribeDownloadRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.remote_file_path_.Destroy();
  _impl_.local_dir_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SubscribeDownloadRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.ftp.SubscribeDownloadRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.remote_file_path_.ClearToEmpty();
  _impl_.local_dir_.ClearToEmpty();
  _impl_.use_burst_ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SubscribeDownloadRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 73, 2> SubscribeDownloadRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_SubscribeDownloadRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string remote_file_path = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SubscribeDownloadRequest, _impl_.remote_file_path_)}},
    // string local_dir = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(SubscribeDownloadRequest, _impl_.local_dir_)}},
    // bool use_burst = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(SubscribeDownloadRequest, _impl_.use_burst_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(SubscribeDownloadRequest, _impl_.use_burst_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string remote_file_path = 1;
    {PROTOBUF_FIELD_OFFSET(SubscribeDownloadRequest, _impl_.remote_file_path_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string local_dir = 2;
    {PROTOBUF_FIELD_OFFSET(SubscribeDownloadRequest, _impl_.local_dir_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool use_burst = 3;
    {PROTOBUF_FIELD_OFFSET(SubscribeDownloadRequest, _impl_.use_burst_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
    "\47\20\11\0\0\0\0\0"
    "mavsdk.rpc.ftp.SubscribeDownloadRequest"
    "remote_file_path"
    "local_dir"
  }},
};

::uint8_t* SubscribeDownloadRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.ftp.SubscribeDownloadRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string remote_file_path = 1;
  if (!this->_internal_remote_file_path().empty()) {
    const std::string& _s = this->_internal_remote_file_path();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mavsdk.rpc.ftp.SubscribeDownloadRequest.remote_file_path");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string local_dir = 2;
  if (!this->_internal_local_dir().empty()) {
    const std::string& _s = this->_internal_local_dir();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mavsdk.rpc.ftp.SubscribeDownloadRequest.local_dir");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // bool use_burst = 3;
  if (this->_internal_use_burst() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        3, this->_internal_use_burst(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.ftp.SubscribeDownloadRequest)
  return target;
}

::size_t SubscribeDownloadRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.ftp.SubscribeDownloadRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string remote_file_path = 1;
  if (!this->_internal_remote_file_path().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_remote_file_path());
  }

  // string local_dir = 2;
  if (!this->_internal_local_dir().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_local_dir());
  }

  // bool use_burst = 3;
  if (this->_internal_use_burst() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SubscribeDownloadRequest::_class_data_ = {
    SubscribeDownloadRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SubscribeDownloadRequest::GetClassData() const {
  return &_class_data_;
}

void SubscribeDownloadRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SubscribeDownloadRequest*>(&to_msg);
  auto& from = static_cast<const SubscribeDownloadRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.ftp.SubscribeDownloadRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_remote_file_path().empty()) {
    _this->_internal_set_remote_file_path(from._internal_remote_file_path());
  }
  if (!from._internal_local_dir().empty()) {
    _this->_internal_set_local_dir(from._internal_local_dir());
  }
  if (from._internal_use_burst() != 0) {
    _this->_internal_set_use_burst(from._internal_use_burst());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SubscribeDownloadRequest::CopyFrom(const SubscribeDownloadRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.ftp.SubscribeDownloadRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SubscribeDownloadRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SubscribeDownloadRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SubscribeDownloadRequest::InternalSwap(SubscribeDownloadRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.remote_file_path_, &other->_impl_.remote_file_path_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.local_dir_, &other->_impl_.local_dir_, arena);
        swap(_impl_.use_burst_, other->_impl_.use_burst_);
}

::google::protobuf::Metadata SubscribeDownloadRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ftp_2fftp_2eproto_getter, &descriptor_table_ftp_2fftp_2eproto_once,
      file_level_metadata_ftp_2fftp_2eproto[0]);
}
// ===================================================================

class DownloadResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<DownloadResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(DownloadResponse, _impl_._has_bits_);
  static const ::mavsdk::rpc::ftp::FtpResult& ftp_result(const DownloadResponse* msg);
  static void set_has_ftp_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::mavsdk::rpc::ftp::ProgressData& progress_data(const DownloadResponse* msg);
  static void set_has_progress_data(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::mavsdk::rpc::ftp::FtpResult& DownloadResponse::_Internal::ftp_result(const DownloadResponse* msg) {
  return *msg->_impl_.ftp_result_;
}
const ::mavsdk::rpc::ftp::ProgressData& DownloadResponse::_Internal::progress_data(const DownloadResponse* msg) {
  return *msg->_impl_.progress_data_;
}
DownloadResponse::DownloadResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.ftp.DownloadResponse)
}
inline PROTOBUF_NDEBUG_INLINE DownloadResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

DownloadResponse::DownloadResponse(
    ::google::protobuf::Arena* arena,
    const DownloadResponse& from)
    : ::google::protobuf::Message(arena) {
  DownloadResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.ftp_result_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::ftp::FtpResult>(arena, *from._impl_.ftp_result_)
                : nullptr;
  _impl_.progress_data_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::mavsdk::rpc::ftp::ProgressData>(arena, *from._impl_.progress_data_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.ftp.DownloadResponse)
}
inline PROTOBUF_NDEBUG_INLINE DownloadResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void DownloadResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, ftp_result_),
           0,
           offsetof(Impl_, progress_data_) -
               offsetof(Impl_, ftp_result_) +
               sizeof(Impl_::progress_data_));
}
DownloadResponse::~DownloadResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.ftp.DownloadResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void DownloadResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.ftp_result_;
  delete _impl_.progress_data_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void DownloadResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.ftp.DownloadResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.ftp_result_ != nullptr);
      _impl_.ftp_result_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.progress_data_ != nullptr);
      _impl_.progress_data_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* DownloadResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> DownloadResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(DownloadResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_DownloadResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.ftp.ProgressData progress_data = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(DownloadResponse, _impl_.progress_data_)}},
    // .mavsdk.rpc.ftp.FtpResult ftp_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(DownloadResponse, _impl_.ftp_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.ftp.FtpResult ftp_result = 1;
    {PROTOBUF_FIELD_OFFSET(DownloadResponse, _impl_.ftp_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .mavsdk.rpc.ftp.ProgressData progress_data = 2;
    {PROTOBUF_FIELD_OFFSET(DownloadResponse, _impl_.progress_data_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::ftp::FtpResult>()},
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::ftp::ProgressData>()},
  }}, {{
  }},
};

::uint8_t* DownloadResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.ftp.DownloadResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.ftp.FtpResult ftp_result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::ftp_result(this),
        _Internal::ftp_result(this).GetCachedSize(), target, stream);
  }

  // .mavsdk.rpc.ftp.ProgressData progress_data = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::progress_data(this),
        _Internal::progress_data(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.ftp.DownloadResponse)
  return target;
}

::size_t DownloadResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.ftp.DownloadResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .mavsdk.rpc.ftp.FtpResult ftp_result = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.ftp_result_);
    }

    // .mavsdk.rpc.ftp.ProgressData progress_data = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.progress_data_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData DownloadResponse::_class_data_ = {
    DownloadResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* DownloadResponse::GetClassData() const {
  return &_class_data_;
}

void DownloadResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<DownloadResponse*>(&to_msg);
  auto& from = static_cast<const DownloadResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.ftp.DownloadResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_ftp_result()->::mavsdk::rpc::ftp::FtpResult::MergeFrom(
          from._internal_ftp_result());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_progress_data()->::mavsdk::rpc::ftp::ProgressData::MergeFrom(
          from._internal_progress_data());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DownloadResponse::CopyFrom(const DownloadResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.ftp.DownloadResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool DownloadResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* DownloadResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void DownloadResponse::InternalSwap(DownloadResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DownloadResponse, _impl_.progress_data_)
      + sizeof(DownloadResponse::_impl_.progress_data_)
      - PROTOBUF_FIELD_OFFSET(DownloadResponse, _impl_.ftp_result_)>(
          reinterpret_cast<char*>(&_impl_.ftp_result_),
          reinterpret_cast<char*>(&other->_impl_.ftp_result_));
}

::google::protobuf::Metadata DownloadResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ftp_2fftp_2eproto_getter, &descriptor_table_ftp_2fftp_2eproto_once,
      file_level_metadata_ftp_2fftp_2eproto[1]);
}
// ===================================================================

class SubscribeUploadRequest::_Internal {
 public:
};

SubscribeUploadRequest::SubscribeUploadRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.ftp.SubscribeUploadRequest)
}
inline PROTOBUF_NDEBUG_INLINE SubscribeUploadRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : local_file_path_(arena, from.local_file_path_),
        remote_dir_(arena, from.remote_dir_),
        _cached_size_{0} {}

SubscribeUploadRequest::SubscribeUploadRequest(
    ::google::protobuf::Arena* arena,
    const SubscribeUploadRequest& from)
    : ::google::protobuf::Message(arena) {
  SubscribeUploadRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.ftp.SubscribeUploadRequest)
}
inline PROTOBUF_NDEBUG_INLINE SubscribeUploadRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : local_file_path_(arena),
        remote_dir_(arena),
        _cached_size_{0} {}

inline void SubscribeUploadRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
SubscribeUploadRequest::~SubscribeUploadRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.ftp.SubscribeUploadRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SubscribeUploadRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.local_file_path_.Destroy();
  _impl_.remote_dir_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SubscribeUploadRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.ftp.SubscribeUploadRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.local_file_path_.ClearToEmpty();
  _impl_.remote_dir_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SubscribeUploadRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 71, 2> SubscribeUploadRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_SubscribeUploadRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string remote_dir = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(SubscribeUploadRequest, _impl_.remote_dir_)}},
    // string local_file_path = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SubscribeUploadRequest, _impl_.local_file_path_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string local_file_path = 1;
    {PROTOBUF_FIELD_OFFSET(SubscribeUploadRequest, _impl_.local_file_path_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string remote_dir = 2;
    {PROTOBUF_FIELD_OFFSET(SubscribeUploadRequest, _impl_.remote_dir_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\45\17\12\0\0\0\0\0"
    "mavsdk.rpc.ftp.SubscribeUploadRequest"
    "local_file_path"
    "remote_dir"
  }},
};

::uint8_t* SubscribeUploadRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.ftp.SubscribeUploadRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string local_file_path = 1;
  if (!this->_internal_local_file_path().empty()) {
    const std::string& _s = this->_internal_local_file_path();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mavsdk.rpc.ftp.SubscribeUploadRequest.local_file_path");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string remote_dir = 2;
  if (!this->_internal_remote_dir().empty()) {
    const std::string& _s = this->_internal_remote_dir();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mavsdk.rpc.ftp.SubscribeUploadRequest.remote_dir");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.ftp.SubscribeUploadRequest)
  return target;
}

::size_t SubscribeUploadRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.ftp.SubscribeUploadRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string local_file_path = 1;
  if (!this->_internal_local_file_path().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_local_file_path());
  }

  // string remote_dir = 2;
  if (!this->_internal_remote_dir().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_remote_dir());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SubscribeUploadRequest::_class_data_ = {
    SubscribeUploadRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SubscribeUploadRequest::GetClassData() const {
  return &_class_data_;
}

void SubscribeUploadRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SubscribeUploadRequest*>(&to_msg);
  auto& from = static_cast<const SubscribeUploadRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.ftp.SubscribeUploadRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_local_file_path().empty()) {
    _this->_internal_set_local_file_path(from._internal_local_file_path());
  }
  if (!from._internal_remote_dir().empty()) {
    _this->_internal_set_remote_dir(from._internal_remote_dir());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SubscribeUploadRequest::CopyFrom(const SubscribeUploadRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.ftp.SubscribeUploadRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SubscribeUploadRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SubscribeUploadRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SubscribeUploadRequest::InternalSwap(SubscribeUploadRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.local_file_path_, &other->_impl_.local_file_path_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.remote_dir_, &other->_impl_.remote_dir_, arena);
}

::google::protobuf::Metadata SubscribeUploadRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ftp_2fftp_2eproto_getter, &descriptor_table_ftp_2fftp_2eproto_once,
      file_level_metadata_ftp_2fftp_2eproto[2]);
}
// ===================================================================

class UploadResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<UploadResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(UploadResponse, _impl_._has_bits_);
  static const ::mavsdk::rpc::ftp::FtpResult& ftp_result(const UploadResponse* msg);
  static void set_has_ftp_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::mavsdk::rpc::ftp::ProgressData& progress_data(const UploadResponse* msg);
  static void set_has_progress_data(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::mavsdk::rpc::ftp::FtpResult& UploadResponse::_Internal::ftp_result(const UploadResponse* msg) {
  return *msg->_impl_.ftp_result_;
}
const ::mavsdk::rpc::ftp::ProgressData& UploadResponse::_Internal::progress_data(const UploadResponse* msg) {
  return *msg->_impl_.progress_data_;
}
UploadResponse::UploadResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.ftp.UploadResponse)
}
inline PROTOBUF_NDEBUG_INLINE UploadResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

UploadResponse::UploadResponse(
    ::google::protobuf::Arena* arena,
    const UploadResponse& from)
    : ::google::protobuf::Message(arena) {
  UploadResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.ftp_result_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::ftp::FtpResult>(arena, *from._impl_.ftp_result_)
                : nullptr;
  _impl_.progress_data_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::mavsdk::rpc::ftp::ProgressData>(arena, *from._impl_.progress_data_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.ftp.UploadResponse)
}
inline PROTOBUF_NDEBUG_INLINE UploadResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void UploadResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, ftp_result_),
           0,
           offsetof(Impl_, progress_data_) -
               offsetof(Impl_, ftp_result_) +
               sizeof(Impl_::progress_data_));
}
UploadResponse::~UploadResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.ftp.UploadResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void UploadResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.ftp_result_;
  delete _impl_.progress_data_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void UploadResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.ftp.UploadResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.ftp_result_ != nullptr);
      _impl_.ftp_result_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.progress_data_ != nullptr);
      _impl_.progress_data_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* UploadResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> UploadResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(UploadResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_UploadResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.ftp.ProgressData progress_data = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(UploadResponse, _impl_.progress_data_)}},
    // .mavsdk.rpc.ftp.FtpResult ftp_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(UploadResponse, _impl_.ftp_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.ftp.FtpResult ftp_result = 1;
    {PROTOBUF_FIELD_OFFSET(UploadResponse, _impl_.ftp_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .mavsdk.rpc.ftp.ProgressData progress_data = 2;
    {PROTOBUF_FIELD_OFFSET(UploadResponse, _impl_.progress_data_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::ftp::FtpResult>()},
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::ftp::ProgressData>()},
  }}, {{
  }},
};

::uint8_t* UploadResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.ftp.UploadResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.ftp.FtpResult ftp_result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::ftp_result(this),
        _Internal::ftp_result(this).GetCachedSize(), target, stream);
  }

  // .mavsdk.rpc.ftp.ProgressData progress_data = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::progress_data(this),
        _Internal::progress_data(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.ftp.UploadResponse)
  return target;
}

::size_t UploadResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.ftp.UploadResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .mavsdk.rpc.ftp.FtpResult ftp_result = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.ftp_result_);
    }

    // .mavsdk.rpc.ftp.ProgressData progress_data = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.progress_data_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData UploadResponse::_class_data_ = {
    UploadResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* UploadResponse::GetClassData() const {
  return &_class_data_;
}

void UploadResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<UploadResponse*>(&to_msg);
  auto& from = static_cast<const UploadResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.ftp.UploadResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_ftp_result()->::mavsdk::rpc::ftp::FtpResult::MergeFrom(
          from._internal_ftp_result());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_progress_data()->::mavsdk::rpc::ftp::ProgressData::MergeFrom(
          from._internal_progress_data());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UploadResponse::CopyFrom(const UploadResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.ftp.UploadResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool UploadResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* UploadResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void UploadResponse::InternalSwap(UploadResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UploadResponse, _impl_.progress_data_)
      + sizeof(UploadResponse::_impl_.progress_data_)
      - PROTOBUF_FIELD_OFFSET(UploadResponse, _impl_.ftp_result_)>(
          reinterpret_cast<char*>(&_impl_.ftp_result_),
          reinterpret_cast<char*>(&other->_impl_.ftp_result_));
}

::google::protobuf::Metadata UploadResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ftp_2fftp_2eproto_getter, &descriptor_table_ftp_2fftp_2eproto_once,
      file_level_metadata_ftp_2fftp_2eproto[3]);
}
// ===================================================================

class ListDirectoryRequest::_Internal {
 public:
};

ListDirectoryRequest::ListDirectoryRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.ftp.ListDirectoryRequest)
}
inline PROTOBUF_NDEBUG_INLINE ListDirectoryRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : remote_dir_(arena, from.remote_dir_),
        _cached_size_{0} {}

ListDirectoryRequest::ListDirectoryRequest(
    ::google::protobuf::Arena* arena,
    const ListDirectoryRequest& from)
    : ::google::protobuf::Message(arena) {
  ListDirectoryRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.ftp.ListDirectoryRequest)
}
inline PROTOBUF_NDEBUG_INLINE ListDirectoryRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : remote_dir_(arena),
        _cached_size_{0} {}

inline void ListDirectoryRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ListDirectoryRequest::~ListDirectoryRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.ftp.ListDirectoryRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ListDirectoryRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.remote_dir_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ListDirectoryRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.ftp.ListDirectoryRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.remote_dir_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ListDirectoryRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 54, 2> ListDirectoryRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_ListDirectoryRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string remote_dir = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ListDirectoryRequest, _impl_.remote_dir_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string remote_dir = 1;
    {PROTOBUF_FIELD_OFFSET(ListDirectoryRequest, _impl_.remote_dir_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\43\12\0\0\0\0\0\0"
    "mavsdk.rpc.ftp.ListDirectoryRequest"
    "remote_dir"
  }},
};

::uint8_t* ListDirectoryRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.ftp.ListDirectoryRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string remote_dir = 1;
  if (!this->_internal_remote_dir().empty()) {
    const std::string& _s = this->_internal_remote_dir();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mavsdk.rpc.ftp.ListDirectoryRequest.remote_dir");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.ftp.ListDirectoryRequest)
  return target;
}

::size_t ListDirectoryRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.ftp.ListDirectoryRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string remote_dir = 1;
  if (!this->_internal_remote_dir().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_remote_dir());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ListDirectoryRequest::_class_data_ = {
    ListDirectoryRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ListDirectoryRequest::GetClassData() const {
  return &_class_data_;
}

void ListDirectoryRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ListDirectoryRequest*>(&to_msg);
  auto& from = static_cast<const ListDirectoryRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.ftp.ListDirectoryRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_remote_dir().empty()) {
    _this->_internal_set_remote_dir(from._internal_remote_dir());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ListDirectoryRequest::CopyFrom(const ListDirectoryRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.ftp.ListDirectoryRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ListDirectoryRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ListDirectoryRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ListDirectoryRequest::InternalSwap(ListDirectoryRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.remote_dir_, &other->_impl_.remote_dir_, arena);
}

::google::protobuf::Metadata ListDirectoryRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ftp_2fftp_2eproto_getter, &descriptor_table_ftp_2fftp_2eproto_once,
      file_level_metadata_ftp_2fftp_2eproto[4]);
}
// ===================================================================

class ListDirectoryResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<ListDirectoryResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ListDirectoryResponse, _impl_._has_bits_);
  static const ::mavsdk::rpc::ftp::FtpResult& ftp_result(const ListDirectoryResponse* msg);
  static void set_has_ftp_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::ftp::FtpResult& ListDirectoryResponse::_Internal::ftp_result(const ListDirectoryResponse* msg) {
  return *msg->_impl_.ftp_result_;
}
ListDirectoryResponse::ListDirectoryResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.ftp.ListDirectoryResponse)
}
inline PROTOBUF_NDEBUG_INLINE ListDirectoryResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        paths_{visibility, arena, from.paths_} {}

ListDirectoryResponse::ListDirectoryResponse(
    ::google::protobuf::Arena* arena,
    const ListDirectoryResponse& from)
    : ::google::protobuf::Message(arena) {
  ListDirectoryResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.ftp_result_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::ftp::FtpResult>(arena, *from._impl_.ftp_result_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.ftp.ListDirectoryResponse)
}
inline PROTOBUF_NDEBUG_INLINE ListDirectoryResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        paths_{visibility, arena} {}

inline void ListDirectoryResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.ftp_result_ = {};
}
ListDirectoryResponse::~ListDirectoryResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.ftp.ListDirectoryResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ListDirectoryResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.ftp_result_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ListDirectoryResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.ftp.ListDirectoryResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.paths_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.ftp_result_ != nullptr);
    _impl_.ftp_result_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ListDirectoryResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 50, 2> ListDirectoryResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ListDirectoryResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ListDirectoryResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated string paths = 2;
    {::_pbi::TcParser::FastUR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ListDirectoryResponse, _impl_.paths_)}},
    // .mavsdk.rpc.ftp.FtpResult ftp_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ListDirectoryResponse, _impl_.ftp_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.ftp.FtpResult ftp_result = 1;
    {PROTOBUF_FIELD_OFFSET(ListDirectoryResponse, _impl_.ftp_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated string paths = 2;
    {PROTOBUF_FIELD_OFFSET(ListDirectoryResponse, _impl_.paths_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::ftp::FtpResult>()},
  }}, {{
    "\44\0\5\0\0\0\0\0"
    "mavsdk.rpc.ftp.ListDirectoryResponse"
    "paths"
  }},
};

::uint8_t* ListDirectoryResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.ftp.ListDirectoryResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.ftp.FtpResult ftp_result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::ftp_result(this),
        _Internal::ftp_result(this).GetCachedSize(), target, stream);
  }

  // repeated string paths = 2;
  for (int i = 0, n = this->_internal_paths_size(); i < n; ++i) {
    const auto& s = this->_internal_paths().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mavsdk.rpc.ftp.ListDirectoryResponse.paths");
    target = stream->WriteString(2, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.ftp.ListDirectoryResponse)
  return target;
}

::size_t ListDirectoryResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.ftp.ListDirectoryResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string paths = 2;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_paths().size());
  for (int i = 0, n = _internal_paths().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_paths().Get(i));
  }
  // .mavsdk.rpc.ftp.FtpResult ftp_result = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.ftp_result_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ListDirectoryResponse::_class_data_ = {
    ListDirectoryResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ListDirectoryResponse::GetClassData() const {
  return &_class_data_;
}

void ListDirectoryResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ListDirectoryResponse*>(&to_msg);
  auto& from = static_cast<const ListDirectoryResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.ftp.ListDirectoryResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_paths()->MergeFrom(from._internal_paths());
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_ftp_result()->::mavsdk::rpc::ftp::FtpResult::MergeFrom(
        from._internal_ftp_result());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ListDirectoryResponse::CopyFrom(const ListDirectoryResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.ftp.ListDirectoryResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ListDirectoryResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ListDirectoryResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ListDirectoryResponse::InternalSwap(ListDirectoryResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.paths_.InternalSwap(&other->_impl_.paths_);
  swap(_impl_.ftp_result_, other->_impl_.ftp_result_);
}

::google::protobuf::Metadata ListDirectoryResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ftp_2fftp_2eproto_getter, &descriptor_table_ftp_2fftp_2eproto_once,
      file_level_metadata_ftp_2fftp_2eproto[5]);
}
// ===================================================================

class CreateDirectoryRequest::_Internal {
 public:
};

CreateDirectoryRequest::CreateDirectoryRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.ftp.CreateDirectoryRequest)
}
inline PROTOBUF_NDEBUG_INLINE CreateDirectoryRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : remote_dir_(arena, from.remote_dir_),
        _cached_size_{0} {}

CreateDirectoryRequest::CreateDirectoryRequest(
    ::google::protobuf::Arena* arena,
    const CreateDirectoryRequest& from)
    : ::google::protobuf::Message(arena) {
  CreateDirectoryRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.ftp.CreateDirectoryRequest)
}
inline PROTOBUF_NDEBUG_INLINE CreateDirectoryRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : remote_dir_(arena),
        _cached_size_{0} {}

inline void CreateDirectoryRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
CreateDirectoryRequest::~CreateDirectoryRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.ftp.CreateDirectoryRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CreateDirectoryRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.remote_dir_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void CreateDirectoryRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.ftp.CreateDirectoryRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.remote_dir_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CreateDirectoryRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 56, 2> CreateDirectoryRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CreateDirectoryRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string remote_dir = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(CreateDirectoryRequest, _impl_.remote_dir_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string remote_dir = 1;
    {PROTOBUF_FIELD_OFFSET(CreateDirectoryRequest, _impl_.remote_dir_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\45\12\0\0\0\0\0\0"
    "mavsdk.rpc.ftp.CreateDirectoryRequest"
    "remote_dir"
  }},
};

::uint8_t* CreateDirectoryRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.ftp.CreateDirectoryRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string remote_dir = 1;
  if (!this->_internal_remote_dir().empty()) {
    const std::string& _s = this->_internal_remote_dir();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mavsdk.rpc.ftp.CreateDirectoryRequest.remote_dir");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.ftp.CreateDirectoryRequest)
  return target;
}

::size_t CreateDirectoryRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.ftp.CreateDirectoryRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string remote_dir = 1;
  if (!this->_internal_remote_dir().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_remote_dir());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CreateDirectoryRequest::_class_data_ = {
    CreateDirectoryRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* CreateDirectoryRequest::GetClassData() const {
  return &_class_data_;
}

void CreateDirectoryRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CreateDirectoryRequest*>(&to_msg);
  auto& from = static_cast<const CreateDirectoryRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.ftp.CreateDirectoryRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_remote_dir().empty()) {
    _this->_internal_set_remote_dir(from._internal_remote_dir());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CreateDirectoryRequest::CopyFrom(const CreateDirectoryRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.ftp.CreateDirectoryRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CreateDirectoryRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* CreateDirectoryRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void CreateDirectoryRequest::InternalSwap(CreateDirectoryRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.remote_dir_, &other->_impl_.remote_dir_, arena);
}

::google::protobuf::Metadata CreateDirectoryRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ftp_2fftp_2eproto_getter, &descriptor_table_ftp_2fftp_2eproto_once,
      file_level_metadata_ftp_2fftp_2eproto[6]);
}
// ===================================================================

class CreateDirectoryResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CreateDirectoryResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CreateDirectoryResponse, _impl_._has_bits_);
  static const ::mavsdk::rpc::ftp::FtpResult& ftp_result(const CreateDirectoryResponse* msg);
  static void set_has_ftp_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::ftp::FtpResult& CreateDirectoryResponse::_Internal::ftp_result(const CreateDirectoryResponse* msg) {
  return *msg->_impl_.ftp_result_;
}
CreateDirectoryResponse::CreateDirectoryResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.ftp.CreateDirectoryResponse)
}
inline PROTOBUF_NDEBUG_INLINE CreateDirectoryResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

CreateDirectoryResponse::CreateDirectoryResponse(
    ::google::protobuf::Arena* arena,
    const CreateDirectoryResponse& from)
    : ::google::protobuf::Message(arena) {
  CreateDirectoryResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.ftp_result_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::ftp::FtpResult>(arena, *from._impl_.ftp_result_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.ftp.CreateDirectoryResponse)
}
inline PROTOBUF_NDEBUG_INLINE CreateDirectoryResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void CreateDirectoryResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.ftp_result_ = {};
}
CreateDirectoryResponse::~CreateDirectoryResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.ftp.CreateDirectoryResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CreateDirectoryResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.ftp_result_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void CreateDirectoryResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.ftp.CreateDirectoryResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.ftp_result_ != nullptr);
    _impl_.ftp_result_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CreateDirectoryResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> CreateDirectoryResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CreateDirectoryResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CreateDirectoryResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.ftp.FtpResult ftp_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CreateDirectoryResponse, _impl_.ftp_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.ftp.FtpResult ftp_result = 1;
    {PROTOBUF_FIELD_OFFSET(CreateDirectoryResponse, _impl_.ftp_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::ftp::FtpResult>()},
  }}, {{
  }},
};

::uint8_t* CreateDirectoryResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.ftp.CreateDirectoryResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.ftp.FtpResult ftp_result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::ftp_result(this),
        _Internal::ftp_result(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.ftp.CreateDirectoryResponse)
  return target;
}

::size_t CreateDirectoryResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.ftp.CreateDirectoryResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.ftp.FtpResult ftp_result = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.ftp_result_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CreateDirectoryResponse::_class_data_ = {
    CreateDirectoryResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* CreateDirectoryResponse::GetClassData() const {
  return &_class_data_;
}

void CreateDirectoryResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CreateDirectoryResponse*>(&to_msg);
  auto& from = static_cast<const CreateDirectoryResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.ftp.CreateDirectoryResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_ftp_result()->::mavsdk::rpc::ftp::FtpResult::MergeFrom(
        from._internal_ftp_result());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CreateDirectoryResponse::CopyFrom(const CreateDirectoryResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.ftp.CreateDirectoryResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CreateDirectoryResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* CreateDirectoryResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void CreateDirectoryResponse::InternalSwap(CreateDirectoryResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.ftp_result_, other->_impl_.ftp_result_);
}

::google::protobuf::Metadata CreateDirectoryResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ftp_2fftp_2eproto_getter, &descriptor_table_ftp_2fftp_2eproto_once,
      file_level_metadata_ftp_2fftp_2eproto[7]);
}
// ===================================================================

class RemoveDirectoryRequest::_Internal {
 public:
};

RemoveDirectoryRequest::RemoveDirectoryRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.ftp.RemoveDirectoryRequest)
}
inline PROTOBUF_NDEBUG_INLINE RemoveDirectoryRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : remote_dir_(arena, from.remote_dir_),
        _cached_size_{0} {}

RemoveDirectoryRequest::RemoveDirectoryRequest(
    ::google::protobuf::Arena* arena,
    const RemoveDirectoryRequest& from)
    : ::google::protobuf::Message(arena) {
  RemoveDirectoryRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.ftp.RemoveDirectoryRequest)
}
inline PROTOBUF_NDEBUG_INLINE RemoveDirectoryRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : remote_dir_(arena),
        _cached_size_{0} {}

inline void RemoveDirectoryRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
RemoveDirectoryRequest::~RemoveDirectoryRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.ftp.RemoveDirectoryRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RemoveDirectoryRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.remote_dir_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void RemoveDirectoryRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.ftp.RemoveDirectoryRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.remote_dir_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RemoveDirectoryRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 56, 2> RemoveDirectoryRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_RemoveDirectoryRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string remote_dir = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(RemoveDirectoryRequest, _impl_.remote_dir_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string remote_dir = 1;
    {PROTOBUF_FIELD_OFFSET(RemoveDirectoryRequest, _impl_.remote_dir_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\45\12\0\0\0\0\0\0"
    "mavsdk.rpc.ftp.RemoveDirectoryRequest"
    "remote_dir"
  }},
};

::uint8_t* RemoveDirectoryRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.ftp.RemoveDirectoryRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string remote_dir = 1;
  if (!this->_internal_remote_dir().empty()) {
    const std::string& _s = this->_internal_remote_dir();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mavsdk.rpc.ftp.RemoveDirectoryRequest.remote_dir");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.ftp.RemoveDirectoryRequest)
  return target;
}

::size_t RemoveDirectoryRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.ftp.RemoveDirectoryRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string remote_dir = 1;
  if (!this->_internal_remote_dir().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_remote_dir());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData RemoveDirectoryRequest::_class_data_ = {
    RemoveDirectoryRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* RemoveDirectoryRequest::GetClassData() const {
  return &_class_data_;
}

void RemoveDirectoryRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<RemoveDirectoryRequest*>(&to_msg);
  auto& from = static_cast<const RemoveDirectoryRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.ftp.RemoveDirectoryRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_remote_dir().empty()) {
    _this->_internal_set_remote_dir(from._internal_remote_dir());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RemoveDirectoryRequest::CopyFrom(const RemoveDirectoryRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.ftp.RemoveDirectoryRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RemoveDirectoryRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* RemoveDirectoryRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void RemoveDirectoryRequest::InternalSwap(RemoveDirectoryRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.remote_dir_, &other->_impl_.remote_dir_, arena);
}

::google::protobuf::Metadata RemoveDirectoryRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ftp_2fftp_2eproto_getter, &descriptor_table_ftp_2fftp_2eproto_once,
      file_level_metadata_ftp_2fftp_2eproto[8]);
}
// ===================================================================

class RemoveDirectoryResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<RemoveDirectoryResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(RemoveDirectoryResponse, _impl_._has_bits_);
  static const ::mavsdk::rpc::ftp::FtpResult& ftp_result(const RemoveDirectoryResponse* msg);
  static void set_has_ftp_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::ftp::FtpResult& RemoveDirectoryResponse::_Internal::ftp_result(const RemoveDirectoryResponse* msg) {
  return *msg->_impl_.ftp_result_;
}
RemoveDirectoryResponse::RemoveDirectoryResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.ftp.RemoveDirectoryResponse)
}
inline PROTOBUF_NDEBUG_INLINE RemoveDirectoryResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

RemoveDirectoryResponse::RemoveDirectoryResponse(
    ::google::protobuf::Arena* arena,
    const RemoveDirectoryResponse& from)
    : ::google::protobuf::Message(arena) {
  RemoveDirectoryResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.ftp_result_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::ftp::FtpResult>(arena, *from._impl_.ftp_result_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.ftp.RemoveDirectoryResponse)
}
inline PROTOBUF_NDEBUG_INLINE RemoveDirectoryResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void RemoveDirectoryResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.ftp_result_ = {};
}
RemoveDirectoryResponse::~RemoveDirectoryResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.ftp.RemoveDirectoryResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RemoveDirectoryResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.ftp_result_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void RemoveDirectoryResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.ftp.RemoveDirectoryResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.ftp_result_ != nullptr);
    _impl_.ftp_result_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RemoveDirectoryResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> RemoveDirectoryResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RemoveDirectoryResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_RemoveDirectoryResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.ftp.FtpResult ftp_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RemoveDirectoryResponse, _impl_.ftp_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.ftp.FtpResult ftp_result = 1;
    {PROTOBUF_FIELD_OFFSET(RemoveDirectoryResponse, _impl_.ftp_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::ftp::FtpResult>()},
  }}, {{
  }},
};

::uint8_t* RemoveDirectoryResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.ftp.RemoveDirectoryResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.ftp.FtpResult ftp_result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::ftp_result(this),
        _Internal::ftp_result(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.ftp.RemoveDirectoryResponse)
  return target;
}

::size_t RemoveDirectoryResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.ftp.RemoveDirectoryResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.ftp.FtpResult ftp_result = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.ftp_result_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData RemoveDirectoryResponse::_class_data_ = {
    RemoveDirectoryResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* RemoveDirectoryResponse::GetClassData() const {
  return &_class_data_;
}

void RemoveDirectoryResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<RemoveDirectoryResponse*>(&to_msg);
  auto& from = static_cast<const RemoveDirectoryResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.ftp.RemoveDirectoryResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_ftp_result()->::mavsdk::rpc::ftp::FtpResult::MergeFrom(
        from._internal_ftp_result());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RemoveDirectoryResponse::CopyFrom(const RemoveDirectoryResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.ftp.RemoveDirectoryResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RemoveDirectoryResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* RemoveDirectoryResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void RemoveDirectoryResponse::InternalSwap(RemoveDirectoryResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.ftp_result_, other->_impl_.ftp_result_);
}

::google::protobuf::Metadata RemoveDirectoryResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ftp_2fftp_2eproto_getter, &descriptor_table_ftp_2fftp_2eproto_once,
      file_level_metadata_ftp_2fftp_2eproto[9]);
}
// ===================================================================

class RemoveFileRequest::_Internal {
 public:
};

RemoveFileRequest::RemoveFileRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.ftp.RemoveFileRequest)
}
inline PROTOBUF_NDEBUG_INLINE RemoveFileRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : remote_file_path_(arena, from.remote_file_path_),
        _cached_size_{0} {}

RemoveFileRequest::RemoveFileRequest(
    ::google::protobuf::Arena* arena,
    const RemoveFileRequest& from)
    : ::google::protobuf::Message(arena) {
  RemoveFileRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.ftp.RemoveFileRequest)
}
inline PROTOBUF_NDEBUG_INLINE RemoveFileRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : remote_file_path_(arena),
        _cached_size_{0} {}

inline void RemoveFileRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
RemoveFileRequest::~RemoveFileRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.ftp.RemoveFileRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RemoveFileRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.remote_file_path_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void RemoveFileRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.ftp.RemoveFileRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.remote_file_path_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RemoveFileRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 57, 2> RemoveFileRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_RemoveFileRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string remote_file_path = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(RemoveFileRequest, _impl_.remote_file_path_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string remote_file_path = 1;
    {PROTOBUF_FIELD_OFFSET(RemoveFileRequest, _impl_.remote_file_path_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\40\20\0\0\0\0\0\0"
    "mavsdk.rpc.ftp.RemoveFileRequest"
    "remote_file_path"
  }},
};

::uint8_t* RemoveFileRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.ftp.RemoveFileRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string remote_file_path = 1;
  if (!this->_internal_remote_file_path().empty()) {
    const std::string& _s = this->_internal_remote_file_path();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mavsdk.rpc.ftp.RemoveFileRequest.remote_file_path");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.ftp.RemoveFileRequest)
  return target;
}

::size_t RemoveFileRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.ftp.RemoveFileRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string remote_file_path = 1;
  if (!this->_internal_remote_file_path().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_remote_file_path());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData RemoveFileRequest::_class_data_ = {
    RemoveFileRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* RemoveFileRequest::GetClassData() const {
  return &_class_data_;
}

void RemoveFileRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<RemoveFileRequest*>(&to_msg);
  auto& from = static_cast<const RemoveFileRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.ftp.RemoveFileRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_remote_file_path().empty()) {
    _this->_internal_set_remote_file_path(from._internal_remote_file_path());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RemoveFileRequest::CopyFrom(const RemoveFileRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.ftp.RemoveFileRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RemoveFileRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* RemoveFileRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void RemoveFileRequest::InternalSwap(RemoveFileRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.remote_file_path_, &other->_impl_.remote_file_path_, arena);
}

::google::protobuf::Metadata RemoveFileRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ftp_2fftp_2eproto_getter, &descriptor_table_ftp_2fftp_2eproto_once,
      file_level_metadata_ftp_2fftp_2eproto[10]);
}
// ===================================================================

class RemoveFileResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<RemoveFileResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(RemoveFileResponse, _impl_._has_bits_);
  static const ::mavsdk::rpc::ftp::FtpResult& ftp_result(const RemoveFileResponse* msg);
  static void set_has_ftp_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::ftp::FtpResult& RemoveFileResponse::_Internal::ftp_result(const RemoveFileResponse* msg) {
  return *msg->_impl_.ftp_result_;
}
RemoveFileResponse::RemoveFileResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.ftp.RemoveFileResponse)
}
inline PROTOBUF_NDEBUG_INLINE RemoveFileResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

RemoveFileResponse::RemoveFileResponse(
    ::google::protobuf::Arena* arena,
    const RemoveFileResponse& from)
    : ::google::protobuf::Message(arena) {
  RemoveFileResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.ftp_result_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::ftp::FtpResult>(arena, *from._impl_.ftp_result_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.ftp.RemoveFileResponse)
}
inline PROTOBUF_NDEBUG_INLINE RemoveFileResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void RemoveFileResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.ftp_result_ = {};
}
RemoveFileResponse::~RemoveFileResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.ftp.RemoveFileResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RemoveFileResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.ftp_result_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void RemoveFileResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.ftp.RemoveFileResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.ftp_result_ != nullptr);
    _impl_.ftp_result_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RemoveFileResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> RemoveFileResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RemoveFileResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_RemoveFileResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.ftp.FtpResult ftp_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RemoveFileResponse, _impl_.ftp_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.ftp.FtpResult ftp_result = 1;
    {PROTOBUF_FIELD_OFFSET(RemoveFileResponse, _impl_.ftp_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::ftp::FtpResult>()},
  }}, {{
  }},
};

::uint8_t* RemoveFileResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.ftp.RemoveFileResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.ftp.FtpResult ftp_result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::ftp_result(this),
        _Internal::ftp_result(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.ftp.RemoveFileResponse)
  return target;
}

::size_t RemoveFileResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.ftp.RemoveFileResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.ftp.FtpResult ftp_result = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.ftp_result_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData RemoveFileResponse::_class_data_ = {
    RemoveFileResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* RemoveFileResponse::GetClassData() const {
  return &_class_data_;
}

void RemoveFileResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<RemoveFileResponse*>(&to_msg);
  auto& from = static_cast<const RemoveFileResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.ftp.RemoveFileResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_ftp_result()->::mavsdk::rpc::ftp::FtpResult::MergeFrom(
        from._internal_ftp_result());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RemoveFileResponse::CopyFrom(const RemoveFileResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.ftp.RemoveFileResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RemoveFileResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* RemoveFileResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void RemoveFileResponse::InternalSwap(RemoveFileResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.ftp_result_, other->_impl_.ftp_result_);
}

::google::protobuf::Metadata RemoveFileResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ftp_2fftp_2eproto_getter, &descriptor_table_ftp_2fftp_2eproto_once,
      file_level_metadata_ftp_2fftp_2eproto[11]);
}
// ===================================================================

class RenameRequest::_Internal {
 public:
};

RenameRequest::RenameRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.ftp.RenameRequest)
}
inline PROTOBUF_NDEBUG_INLINE RenameRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : remote_from_path_(arena, from.remote_from_path_),
        remote_to_path_(arena, from.remote_to_path_),
        _cached_size_{0} {}

RenameRequest::RenameRequest(
    ::google::protobuf::Arena* arena,
    const RenameRequest& from)
    : ::google::protobuf::Message(arena) {
  RenameRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.ftp.RenameRequest)
}
inline PROTOBUF_NDEBUG_INLINE RenameRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : remote_from_path_(arena),
        remote_to_path_(arena),
        _cached_size_{0} {}

inline void RenameRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
RenameRequest::~RenameRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.ftp.RenameRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RenameRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.remote_from_path_.Destroy();
  _impl_.remote_to_path_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void RenameRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.ftp.RenameRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.remote_from_path_.ClearToEmpty();
  _impl_.remote_to_path_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RenameRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 67, 2> RenameRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_RenameRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string remote_to_path = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(RenameRequest, _impl_.remote_to_path_)}},
    // string remote_from_path = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(RenameRequest, _impl_.remote_from_path_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string remote_from_path = 1;
    {PROTOBUF_FIELD_OFFSET(RenameRequest, _impl_.remote_from_path_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string remote_to_path = 2;
    {PROTOBUF_FIELD_OFFSET(RenameRequest, _impl_.remote_to_path_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\34\20\16\0\0\0\0\0"
    "mavsdk.rpc.ftp.RenameRequest"
    "remote_from_path"
    "remote_to_path"
  }},
};

::uint8_t* RenameRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.ftp.RenameRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string remote_from_path = 1;
  if (!this->_internal_remote_from_path().empty()) {
    const std::string& _s = this->_internal_remote_from_path();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mavsdk.rpc.ftp.RenameRequest.remote_from_path");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string remote_to_path = 2;
  if (!this->_internal_remote_to_path().empty()) {
    const std::string& _s = this->_internal_remote_to_path();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mavsdk.rpc.ftp.RenameRequest.remote_to_path");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.ftp.RenameRequest)
  return target;
}

::size_t RenameRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.ftp.RenameRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string remote_from_path = 1;
  if (!this->_internal_remote_from_path().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_remote_from_path());
  }

  // string remote_to_path = 2;
  if (!this->_internal_remote_to_path().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_remote_to_path());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData RenameRequest::_class_data_ = {
    RenameRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* RenameRequest::GetClassData() const {
  return &_class_data_;
}

void RenameRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<RenameRequest*>(&to_msg);
  auto& from = static_cast<const RenameRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.ftp.RenameRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_remote_from_path().empty()) {
    _this->_internal_set_remote_from_path(from._internal_remote_from_path());
  }
  if (!from._internal_remote_to_path().empty()) {
    _this->_internal_set_remote_to_path(from._internal_remote_to_path());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RenameRequest::CopyFrom(const RenameRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.ftp.RenameRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RenameRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* RenameRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void RenameRequest::InternalSwap(RenameRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.remote_from_path_, &other->_impl_.remote_from_path_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.remote_to_path_, &other->_impl_.remote_to_path_, arena);
}

::google::protobuf::Metadata RenameRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ftp_2fftp_2eproto_getter, &descriptor_table_ftp_2fftp_2eproto_once,
      file_level_metadata_ftp_2fftp_2eproto[12]);
}
// ===================================================================

class RenameResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<RenameResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(RenameResponse, _impl_._has_bits_);
  static const ::mavsdk::rpc::ftp::FtpResult& ftp_result(const RenameResponse* msg);
  static void set_has_ftp_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::ftp::FtpResult& RenameResponse::_Internal::ftp_result(const RenameResponse* msg) {
  return *msg->_impl_.ftp_result_;
}
RenameResponse::RenameResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.ftp.RenameResponse)
}
inline PROTOBUF_NDEBUG_INLINE RenameResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

RenameResponse::RenameResponse(
    ::google::protobuf::Arena* arena,
    const RenameResponse& from)
    : ::google::protobuf::Message(arena) {
  RenameResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.ftp_result_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::ftp::FtpResult>(arena, *from._impl_.ftp_result_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.ftp.RenameResponse)
}
inline PROTOBUF_NDEBUG_INLINE RenameResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void RenameResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.ftp_result_ = {};
}
RenameResponse::~RenameResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.ftp.RenameResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RenameResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.ftp_result_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void RenameResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.ftp.RenameResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.ftp_result_ != nullptr);
    _impl_.ftp_result_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RenameResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> RenameResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RenameResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_RenameResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.ftp.FtpResult ftp_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RenameResponse, _impl_.ftp_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.ftp.FtpResult ftp_result = 1;
    {PROTOBUF_FIELD_OFFSET(RenameResponse, _impl_.ftp_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::ftp::FtpResult>()},
  }}, {{
  }},
};

::uint8_t* RenameResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.ftp.RenameResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.ftp.FtpResult ftp_result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::ftp_result(this),
        _Internal::ftp_result(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.ftp.RenameResponse)
  return target;
}

::size_t RenameResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.ftp.RenameResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.ftp.FtpResult ftp_result = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.ftp_result_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData RenameResponse::_class_data_ = {
    RenameResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* RenameResponse::GetClassData() const {
  return &_class_data_;
}

void RenameResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<RenameResponse*>(&to_msg);
  auto& from = static_cast<const RenameResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.ftp.RenameResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_ftp_result()->::mavsdk::rpc::ftp::FtpResult::MergeFrom(
        from._internal_ftp_result());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RenameResponse::CopyFrom(const RenameResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.ftp.RenameResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RenameResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* RenameResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void RenameResponse::InternalSwap(RenameResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.ftp_result_, other->_impl_.ftp_result_);
}

::google::protobuf::Metadata RenameResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ftp_2fftp_2eproto_getter, &descriptor_table_ftp_2fftp_2eproto_once,
      file_level_metadata_ftp_2fftp_2eproto[13]);
}
// ===================================================================

class AreFilesIdenticalRequest::_Internal {
 public:
};

AreFilesIdenticalRequest::AreFilesIdenticalRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.ftp.AreFilesIdenticalRequest)
}
inline PROTOBUF_NDEBUG_INLINE AreFilesIdenticalRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : local_file_path_(arena, from.local_file_path_),
        remote_file_path_(arena, from.remote_file_path_),
        _cached_size_{0} {}

AreFilesIdenticalRequest::AreFilesIdenticalRequest(
    ::google::protobuf::Arena* arena,
    const AreFilesIdenticalRequest& from)
    : ::google::protobuf::Message(arena) {
  AreFilesIdenticalRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.ftp.AreFilesIdenticalRequest)
}
inline PROTOBUF_NDEBUG_INLINE AreFilesIdenticalRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : local_file_path_(arena),
        remote_file_path_(arena),
        _cached_size_{0} {}

inline void AreFilesIdenticalRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
AreFilesIdenticalRequest::~AreFilesIdenticalRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.ftp.AreFilesIdenticalRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AreFilesIdenticalRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.local_file_path_.Destroy();
  _impl_.remote_file_path_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void AreFilesIdenticalRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.ftp.AreFilesIdenticalRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.local_file_path_.ClearToEmpty();
  _impl_.remote_file_path_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* AreFilesIdenticalRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 79, 2> AreFilesIdenticalRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_AreFilesIdenticalRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string remote_file_path = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(AreFilesIdenticalRequest, _impl_.remote_file_path_)}},
    // string local_file_path = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(AreFilesIdenticalRequest, _impl_.local_file_path_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string local_file_path = 1;
    {PROTOBUF_FIELD_OFFSET(AreFilesIdenticalRequest, _impl_.local_file_path_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string remote_file_path = 2;
    {PROTOBUF_FIELD_OFFSET(AreFilesIdenticalRequest, _impl_.remote_file_path_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\47\17\20\0\0\0\0\0"
    "mavsdk.rpc.ftp.AreFilesIdenticalRequest"
    "local_file_path"
    "remote_file_path"
  }},
};

::uint8_t* AreFilesIdenticalRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.ftp.AreFilesIdenticalRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string local_file_path = 1;
  if (!this->_internal_local_file_path().empty()) {
    const std::string& _s = this->_internal_local_file_path();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mavsdk.rpc.ftp.AreFilesIdenticalRequest.local_file_path");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string remote_file_path = 2;
  if (!this->_internal_remote_file_path().empty()) {
    const std::string& _s = this->_internal_remote_file_path();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mavsdk.rpc.ftp.AreFilesIdenticalRequest.remote_file_path");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.ftp.AreFilesIdenticalRequest)
  return target;
}

::size_t AreFilesIdenticalRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.ftp.AreFilesIdenticalRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string local_file_path = 1;
  if (!this->_internal_local_file_path().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_local_file_path());
  }

  // string remote_file_path = 2;
  if (!this->_internal_remote_file_path().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_remote_file_path());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData AreFilesIdenticalRequest::_class_data_ = {
    AreFilesIdenticalRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* AreFilesIdenticalRequest::GetClassData() const {
  return &_class_data_;
}

void AreFilesIdenticalRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<AreFilesIdenticalRequest*>(&to_msg);
  auto& from = static_cast<const AreFilesIdenticalRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.ftp.AreFilesIdenticalRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_local_file_path().empty()) {
    _this->_internal_set_local_file_path(from._internal_local_file_path());
  }
  if (!from._internal_remote_file_path().empty()) {
    _this->_internal_set_remote_file_path(from._internal_remote_file_path());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AreFilesIdenticalRequest::CopyFrom(const AreFilesIdenticalRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.ftp.AreFilesIdenticalRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool AreFilesIdenticalRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* AreFilesIdenticalRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void AreFilesIdenticalRequest::InternalSwap(AreFilesIdenticalRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.local_file_path_, &other->_impl_.local_file_path_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.remote_file_path_, &other->_impl_.remote_file_path_, arena);
}

::google::protobuf::Metadata AreFilesIdenticalRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ftp_2fftp_2eproto_getter, &descriptor_table_ftp_2fftp_2eproto_once,
      file_level_metadata_ftp_2fftp_2eproto[14]);
}
// ===================================================================

class AreFilesIdenticalResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<AreFilesIdenticalResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(AreFilesIdenticalResponse, _impl_._has_bits_);
  static const ::mavsdk::rpc::ftp::FtpResult& ftp_result(const AreFilesIdenticalResponse* msg);
  static void set_has_ftp_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::ftp::FtpResult& AreFilesIdenticalResponse::_Internal::ftp_result(const AreFilesIdenticalResponse* msg) {
  return *msg->_impl_.ftp_result_;
}
AreFilesIdenticalResponse::AreFilesIdenticalResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.ftp.AreFilesIdenticalResponse)
}
inline PROTOBUF_NDEBUG_INLINE AreFilesIdenticalResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

AreFilesIdenticalResponse::AreFilesIdenticalResponse(
    ::google::protobuf::Arena* arena,
    const AreFilesIdenticalResponse& from)
    : ::google::protobuf::Message(arena) {
  AreFilesIdenticalResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.ftp_result_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::ftp::FtpResult>(arena, *from._impl_.ftp_result_)
                : nullptr;
  _impl_.are_identical_ = from._impl_.are_identical_;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.ftp.AreFilesIdenticalResponse)
}
inline PROTOBUF_NDEBUG_INLINE AreFilesIdenticalResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void AreFilesIdenticalResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, ftp_result_),
           0,
           offsetof(Impl_, are_identical_) -
               offsetof(Impl_, ftp_result_) +
               sizeof(Impl_::are_identical_));
}
AreFilesIdenticalResponse::~AreFilesIdenticalResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.ftp.AreFilesIdenticalResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AreFilesIdenticalResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.ftp_result_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void AreFilesIdenticalResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.ftp.AreFilesIdenticalResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.ftp_result_ != nullptr);
    _impl_.ftp_result_->Clear();
  }
  _impl_.are_identical_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* AreFilesIdenticalResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> AreFilesIdenticalResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AreFilesIdenticalResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_AreFilesIdenticalResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // bool are_identical = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(AreFilesIdenticalResponse, _impl_.are_identical_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(AreFilesIdenticalResponse, _impl_.are_identical_)}},
    // .mavsdk.rpc.ftp.FtpResult ftp_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(AreFilesIdenticalResponse, _impl_.ftp_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.ftp.FtpResult ftp_result = 1;
    {PROTOBUF_FIELD_OFFSET(AreFilesIdenticalResponse, _impl_.ftp_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // bool are_identical = 2;
    {PROTOBUF_FIELD_OFFSET(AreFilesIdenticalResponse, _impl_.are_identical_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::ftp::FtpResult>()},
  }}, {{
  }},
};

::uint8_t* AreFilesIdenticalResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.ftp.AreFilesIdenticalResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.ftp.FtpResult ftp_result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::ftp_result(this),
        _Internal::ftp_result(this).GetCachedSize(), target, stream);
  }

  // bool are_identical = 2;
  if (this->_internal_are_identical() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        2, this->_internal_are_identical(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.ftp.AreFilesIdenticalResponse)
  return target;
}

::size_t AreFilesIdenticalResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.ftp.AreFilesIdenticalResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.ftp.FtpResult ftp_result = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.ftp_result_);
  }

  // bool are_identical = 2;
  if (this->_internal_are_identical() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData AreFilesIdenticalResponse::_class_data_ = {
    AreFilesIdenticalResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* AreFilesIdenticalResponse::GetClassData() const {
  return &_class_data_;
}

void AreFilesIdenticalResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<AreFilesIdenticalResponse*>(&to_msg);
  auto& from = static_cast<const AreFilesIdenticalResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.ftp.AreFilesIdenticalResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_ftp_result()->::mavsdk::rpc::ftp::FtpResult::MergeFrom(
        from._internal_ftp_result());
  }
  if (from._internal_are_identical() != 0) {
    _this->_internal_set_are_identical(from._internal_are_identical());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AreFilesIdenticalResponse::CopyFrom(const AreFilesIdenticalResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.ftp.AreFilesIdenticalResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool AreFilesIdenticalResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* AreFilesIdenticalResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void AreFilesIdenticalResponse::InternalSwap(AreFilesIdenticalResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AreFilesIdenticalResponse, _impl_.are_identical_)
      + sizeof(AreFilesIdenticalResponse::_impl_.are_identical_)
      - PROTOBUF_FIELD_OFFSET(AreFilesIdenticalResponse, _impl_.ftp_result_)>(
          reinterpret_cast<char*>(&_impl_.ftp_result_),
          reinterpret_cast<char*>(&other->_impl_.ftp_result_));
}

::google::protobuf::Metadata AreFilesIdenticalResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ftp_2fftp_2eproto_getter, &descriptor_table_ftp_2fftp_2eproto_once,
      file_level_metadata_ftp_2fftp_2eproto[15]);
}
// ===================================================================

class SetTargetCompidRequest::_Internal {
 public:
};

SetTargetCompidRequest::SetTargetCompidRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.ftp.SetTargetCompidRequest)
}
SetTargetCompidRequest::SetTargetCompidRequest(
    ::google::protobuf::Arena* arena, const SetTargetCompidRequest& from)
    : SetTargetCompidRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE SetTargetCompidRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetTargetCompidRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.compid_ = {};
}
SetTargetCompidRequest::~SetTargetCompidRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.ftp.SetTargetCompidRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SetTargetCompidRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SetTargetCompidRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.ftp.SetTargetCompidRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.compid_ = 0u;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SetTargetCompidRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> SetTargetCompidRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_SetTargetCompidRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // uint32 compid = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SetTargetCompidRequest, _impl_.compid_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(SetTargetCompidRequest, _impl_.compid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 compid = 1;
    {PROTOBUF_FIELD_OFFSET(SetTargetCompidRequest, _impl_.compid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* SetTargetCompidRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.ftp.SetTargetCompidRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 compid = 1;
  if (this->_internal_compid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_compid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.ftp.SetTargetCompidRequest)
  return target;
}

::size_t SetTargetCompidRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.ftp.SetTargetCompidRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 compid = 1;
  if (this->_internal_compid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_compid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SetTargetCompidRequest::_class_data_ = {
    SetTargetCompidRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SetTargetCompidRequest::GetClassData() const {
  return &_class_data_;
}

void SetTargetCompidRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SetTargetCompidRequest*>(&to_msg);
  auto& from = static_cast<const SetTargetCompidRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.ftp.SetTargetCompidRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_compid() != 0) {
    _this->_internal_set_compid(from._internal_compid());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetTargetCompidRequest::CopyFrom(const SetTargetCompidRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.ftp.SetTargetCompidRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SetTargetCompidRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SetTargetCompidRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SetTargetCompidRequest::InternalSwap(SetTargetCompidRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.compid_, other->_impl_.compid_);
}

::google::protobuf::Metadata SetTargetCompidRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ftp_2fftp_2eproto_getter, &descriptor_table_ftp_2fftp_2eproto_once,
      file_level_metadata_ftp_2fftp_2eproto[16]);
}
// ===================================================================

class SetTargetCompidResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<SetTargetCompidResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SetTargetCompidResponse, _impl_._has_bits_);
  static const ::mavsdk::rpc::ftp::FtpResult& ftp_result(const SetTargetCompidResponse* msg);
  static void set_has_ftp_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::ftp::FtpResult& SetTargetCompidResponse::_Internal::ftp_result(const SetTargetCompidResponse* msg) {
  return *msg->_impl_.ftp_result_;
}
SetTargetCompidResponse::SetTargetCompidResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.ftp.SetTargetCompidResponse)
}
inline PROTOBUF_NDEBUG_INLINE SetTargetCompidResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SetTargetCompidResponse::SetTargetCompidResponse(
    ::google::protobuf::Arena* arena,
    const SetTargetCompidResponse& from)
    : ::google::protobuf::Message(arena) {
  SetTargetCompidResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.ftp_result_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::ftp::FtpResult>(arena, *from._impl_.ftp_result_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.ftp.SetTargetCompidResponse)
}
inline PROTOBUF_NDEBUG_INLINE SetTargetCompidResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetTargetCompidResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.ftp_result_ = {};
}
SetTargetCompidResponse::~SetTargetCompidResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.ftp.SetTargetCompidResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SetTargetCompidResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.ftp_result_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SetTargetCompidResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.ftp.SetTargetCompidResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.ftp_result_ != nullptr);
    _impl_.ftp_result_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SetTargetCompidResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> SetTargetCompidResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SetTargetCompidResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SetTargetCompidResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.ftp.FtpResult ftp_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SetTargetCompidResponse, _impl_.ftp_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.ftp.FtpResult ftp_result = 1;
    {PROTOBUF_FIELD_OFFSET(SetTargetCompidResponse, _impl_.ftp_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::ftp::FtpResult>()},
  }}, {{
  }},
};

::uint8_t* SetTargetCompidResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.ftp.SetTargetCompidResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.ftp.FtpResult ftp_result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::ftp_result(this),
        _Internal::ftp_result(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.ftp.SetTargetCompidResponse)
  return target;
}

::size_t SetTargetCompidResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.ftp.SetTargetCompidResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.ftp.FtpResult ftp_result = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.ftp_result_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SetTargetCompidResponse::_class_data_ = {
    SetTargetCompidResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SetTargetCompidResponse::GetClassData() const {
  return &_class_data_;
}

void SetTargetCompidResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SetTargetCompidResponse*>(&to_msg);
  auto& from = static_cast<const SetTargetCompidResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.ftp.SetTargetCompidResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_ftp_result()->::mavsdk::rpc::ftp::FtpResult::MergeFrom(
        from._internal_ftp_result());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetTargetCompidResponse::CopyFrom(const SetTargetCompidResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.ftp.SetTargetCompidResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SetTargetCompidResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SetTargetCompidResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SetTargetCompidResponse::InternalSwap(SetTargetCompidResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.ftp_result_, other->_impl_.ftp_result_);
}

::google::protobuf::Metadata SetTargetCompidResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ftp_2fftp_2eproto_getter, &descriptor_table_ftp_2fftp_2eproto_once,
      file_level_metadata_ftp_2fftp_2eproto[17]);
}
// ===================================================================

class ProgressData::_Internal {
 public:
};

ProgressData::ProgressData(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.ftp.ProgressData)
}
ProgressData::ProgressData(
    ::google::protobuf::Arena* arena, const ProgressData& from)
    : ProgressData(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE ProgressData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ProgressData::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, bytes_transferred_),
           0,
           offsetof(Impl_, total_bytes_) -
               offsetof(Impl_, bytes_transferred_) +
               sizeof(Impl_::total_bytes_));
}
ProgressData::~ProgressData() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.ftp.ProgressData)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ProgressData::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ProgressData::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.ftp.ProgressData)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.bytes_transferred_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.total_bytes_) -
      reinterpret_cast<char*>(&_impl_.bytes_transferred_)) + sizeof(_impl_.total_bytes_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ProgressData::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> ProgressData::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_ProgressData_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // uint32 total_bytes = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ProgressData, _impl_.total_bytes_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(ProgressData, _impl_.total_bytes_)}},
    // uint32 bytes_transferred = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ProgressData, _impl_.bytes_transferred_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(ProgressData, _impl_.bytes_transferred_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 bytes_transferred = 1;
    {PROTOBUF_FIELD_OFFSET(ProgressData, _impl_.bytes_transferred_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 total_bytes = 2;
    {PROTOBUF_FIELD_OFFSET(ProgressData, _impl_.total_bytes_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* ProgressData::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.ftp.ProgressData)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 bytes_transferred = 1;
  if (this->_internal_bytes_transferred() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_bytes_transferred(), target);
  }

  // uint32 total_bytes = 2;
  if (this->_internal_total_bytes() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_total_bytes(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.ftp.ProgressData)
  return target;
}

::size_t ProgressData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.ftp.ProgressData)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 bytes_transferred = 1;
  if (this->_internal_bytes_transferred() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_bytes_transferred());
  }

  // uint32 total_bytes = 2;
  if (this->_internal_total_bytes() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_total_bytes());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ProgressData::_class_data_ = {
    ProgressData::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ProgressData::GetClassData() const {
  return &_class_data_;
}

void ProgressData::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ProgressData*>(&to_msg);
  auto& from = static_cast<const ProgressData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.ftp.ProgressData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_bytes_transferred() != 0) {
    _this->_internal_set_bytes_transferred(from._internal_bytes_transferred());
  }
  if (from._internal_total_bytes() != 0) {
    _this->_internal_set_total_bytes(from._internal_total_bytes());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ProgressData::CopyFrom(const ProgressData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.ftp.ProgressData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ProgressData::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ProgressData::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ProgressData::InternalSwap(ProgressData* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ProgressData, _impl_.total_bytes_)
      + sizeof(ProgressData::_impl_.total_bytes_)
      - PROTOBUF_FIELD_OFFSET(ProgressData, _impl_.bytes_transferred_)>(
          reinterpret_cast<char*>(&_impl_.bytes_transferred_),
          reinterpret_cast<char*>(&other->_impl_.bytes_transferred_));
}

::google::protobuf::Metadata ProgressData::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ftp_2fftp_2eproto_getter, &descriptor_table_ftp_2fftp_2eproto_once,
      file_level_metadata_ftp_2fftp_2eproto[18]);
}
// ===================================================================

class FtpResult::_Internal {
 public:
};

FtpResult::FtpResult(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.ftp.FtpResult)
}
inline PROTOBUF_NDEBUG_INLINE FtpResult::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : result_str_(arena, from.result_str_),
        _cached_size_{0} {}

FtpResult::FtpResult(
    ::google::protobuf::Arena* arena,
    const FtpResult& from)
    : ::google::protobuf::Message(arena) {
  FtpResult* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.result_ = from._impl_.result_;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.ftp.FtpResult)
}
inline PROTOBUF_NDEBUG_INLINE FtpResult::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : result_str_(arena),
        _cached_size_{0} {}

inline void FtpResult::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.result_ = {};
}
FtpResult::~FtpResult() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.ftp.FtpResult)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void FtpResult::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.result_str_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void FtpResult::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.ftp.FtpResult)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.result_str_.ClearToEmpty();
  _impl_.result_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* FtpResult::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 43, 2> FtpResult::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_FtpResult_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string result_str = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(FtpResult, _impl_.result_str_)}},
    // .mavsdk.rpc.ftp.FtpResult.Result result = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(FtpResult, _impl_.result_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(FtpResult, _impl_.result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.ftp.FtpResult.Result result = 1;
    {PROTOBUF_FIELD_OFFSET(FtpResult, _impl_.result_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string result_str = 2;
    {PROTOBUF_FIELD_OFFSET(FtpResult, _impl_.result_str_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\30\0\12\0\0\0\0\0"
    "mavsdk.rpc.ftp.FtpResult"
    "result_str"
  }},
};

::uint8_t* FtpResult::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.ftp.FtpResult)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .mavsdk.rpc.ftp.FtpResult.Result result = 1;
  if (this->_internal_result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_result(), target);
  }

  // string result_str = 2;
  if (!this->_internal_result_str().empty()) {
    const std::string& _s = this->_internal_result_str();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mavsdk.rpc.ftp.FtpResult.result_str");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.ftp.FtpResult)
  return target;
}

::size_t FtpResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.ftp.FtpResult)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string result_str = 2;
  if (!this->_internal_result_str().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_result_str());
  }

  // .mavsdk.rpc.ftp.FtpResult.Result result = 1;
  if (this->_internal_result() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_result());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData FtpResult::_class_data_ = {
    FtpResult::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* FtpResult::GetClassData() const {
  return &_class_data_;
}

void FtpResult::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<FtpResult*>(&to_msg);
  auto& from = static_cast<const FtpResult&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.ftp.FtpResult)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_result_str().empty()) {
    _this->_internal_set_result_str(from._internal_result_str());
  }
  if (from._internal_result() != 0) {
    _this->_internal_set_result(from._internal_result());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void FtpResult::CopyFrom(const FtpResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.ftp.FtpResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool FtpResult::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* FtpResult::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void FtpResult::InternalSwap(FtpResult* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.result_str_, &other->_impl_.result_str_, arena);
  swap(_impl_.result_, other->_impl_.result_);
}

::google::protobuf::Metadata FtpResult::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ftp_2fftp_2eproto_getter, &descriptor_table_ftp_2fftp_2eproto_once,
      file_level_metadata_ftp_2fftp_2eproto[19]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace ftp
}  // namespace rpc
}  // namespace mavsdk
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"

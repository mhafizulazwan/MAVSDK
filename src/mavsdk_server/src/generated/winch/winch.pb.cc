// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: winch/winch.proto

#include "winch/winch.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace mavsdk {
namespace rpc {
namespace winch {

inline constexpr WinchResult::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : result_str_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        result_{static_cast< ::mavsdk::rpc::winch::WinchResult_Result >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR WinchResult::WinchResult(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct WinchResultDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WinchResultDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~WinchResultDefaultTypeInternal() {}
  union {
    WinchResult _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WinchResultDefaultTypeInternal _WinchResult_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR SubscribeStatusRequest::SubscribeStatusRequest(::_pbi::ConstantInitialized) {}
struct SubscribeStatusRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscribeStatusRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscribeStatusRequestDefaultTypeInternal() {}
  union {
    SubscribeStatusRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscribeStatusRequestDefaultTypeInternal _SubscribeStatusRequest_default_instance_;

inline constexpr StatusFlags::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : healthy_{false},
        fully_retracted_{false},
        moving_{false},
        clutch_engaged_{false},
        locked_{false},
        dropping_{false},
        arresting_{false},
        ground_sense_{false},
        retracting_{false},
        redeliver_{false},
        abandon_line_{false},
        locking_{false},
        load_line_{false},
        load_payload_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR StatusFlags::StatusFlags(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct StatusFlagsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StatusFlagsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StatusFlagsDefaultTypeInternal() {}
  union {
    StatusFlags _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StatusFlagsDefaultTypeInternal _StatusFlags_default_instance_;

inline constexpr RetractRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : instance_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR RetractRequest::RetractRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RetractRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RetractRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RetractRequestDefaultTypeInternal() {}
  union {
    RetractRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RetractRequestDefaultTypeInternal _RetractRequest_default_instance_;

inline constexpr RelaxRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : instance_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR RelaxRequest::RelaxRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RelaxRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RelaxRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RelaxRequestDefaultTypeInternal() {}
  union {
    RelaxRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RelaxRequestDefaultTypeInternal _RelaxRequest_default_instance_;

inline constexpr RelativeLengthControlRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : instance_{0u},
        length_m_{0},
        rate_m_s_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR RelativeLengthControlRequest::RelativeLengthControlRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RelativeLengthControlRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RelativeLengthControlRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RelativeLengthControlRequestDefaultTypeInternal() {}
  union {
    RelativeLengthControlRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RelativeLengthControlRequestDefaultTypeInternal _RelativeLengthControlRequest_default_instance_;

inline constexpr RateControlRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : instance_{0u},
        rate_m_s_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR RateControlRequest::RateControlRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RateControlRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RateControlRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RateControlRequestDefaultTypeInternal() {}
  union {
    RateControlRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RateControlRequestDefaultTypeInternal _RateControlRequest_default_instance_;

inline constexpr LockRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : instance_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR LockRequest::LockRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct LockRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LockRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LockRequestDefaultTypeInternal() {}
  union {
    LockRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LockRequestDefaultTypeInternal _LockRequest_default_instance_;

inline constexpr LoadPayloadRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : instance_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR LoadPayloadRequest::LoadPayloadRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct LoadPayloadRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LoadPayloadRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LoadPayloadRequestDefaultTypeInternal() {}
  union {
    LoadPayloadRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LoadPayloadRequestDefaultTypeInternal _LoadPayloadRequest_default_instance_;

inline constexpr LoadLineRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : instance_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR LoadLineRequest::LoadLineRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct LoadLineRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LoadLineRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LoadLineRequestDefaultTypeInternal() {}
  union {
    LoadLineRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LoadLineRequestDefaultTypeInternal _LoadLineRequest_default_instance_;

inline constexpr HoldRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : instance_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR HoldRequest::HoldRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct HoldRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HoldRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~HoldRequestDefaultTypeInternal() {}
  union {
    HoldRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HoldRequestDefaultTypeInternal _HoldRequest_default_instance_;

inline constexpr DeliverRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : instance_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR DeliverRequest::DeliverRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct DeliverRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeliverRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeliverRequestDefaultTypeInternal() {}
  union {
    DeliverRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeliverRequestDefaultTypeInternal _DeliverRequest_default_instance_;

inline constexpr AbandonLineRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : instance_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR AbandonLineRequest::AbandonLineRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct AbandonLineRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AbandonLineRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AbandonLineRequestDefaultTypeInternal() {}
  union {
    AbandonLineRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AbandonLineRequestDefaultTypeInternal _AbandonLineRequest_default_instance_;

inline constexpr Status::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        status_flags_{nullptr},
        time_usec_{::uint64_t{0u}},
        line_length_m_{0},
        speed_m_s_{0},
        tension_kg_{0},
        voltage_v_{0},
        current_a_{0},
        temperature_c_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Status::Status(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct StatusDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StatusDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StatusDefaultTypeInternal() {}
  union {
    Status _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StatusDefaultTypeInternal _Status_default_instance_;

inline constexpr RetractResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        winch_result_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR RetractResponse::RetractResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RetractResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RetractResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RetractResponseDefaultTypeInternal() {}
  union {
    RetractResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RetractResponseDefaultTypeInternal _RetractResponse_default_instance_;

inline constexpr RelaxResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        winch_result_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR RelaxResponse::RelaxResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RelaxResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RelaxResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RelaxResponseDefaultTypeInternal() {}
  union {
    RelaxResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RelaxResponseDefaultTypeInternal _RelaxResponse_default_instance_;

inline constexpr RelativeLengthControlResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        winch_result_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR RelativeLengthControlResponse::RelativeLengthControlResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RelativeLengthControlResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RelativeLengthControlResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RelativeLengthControlResponseDefaultTypeInternal() {}
  union {
    RelativeLengthControlResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RelativeLengthControlResponseDefaultTypeInternal _RelativeLengthControlResponse_default_instance_;

inline constexpr RateControlResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        winch_result_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR RateControlResponse::RateControlResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RateControlResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RateControlResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RateControlResponseDefaultTypeInternal() {}
  union {
    RateControlResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RateControlResponseDefaultTypeInternal _RateControlResponse_default_instance_;

inline constexpr LockResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        winch_result_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR LockResponse::LockResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct LockResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LockResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LockResponseDefaultTypeInternal() {}
  union {
    LockResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LockResponseDefaultTypeInternal _LockResponse_default_instance_;

inline constexpr LoadPayloadResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        winch_result_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR LoadPayloadResponse::LoadPayloadResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct LoadPayloadResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LoadPayloadResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LoadPayloadResponseDefaultTypeInternal() {}
  union {
    LoadPayloadResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LoadPayloadResponseDefaultTypeInternal _LoadPayloadResponse_default_instance_;

inline constexpr LoadLineResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        winch_result_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR LoadLineResponse::LoadLineResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct LoadLineResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LoadLineResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LoadLineResponseDefaultTypeInternal() {}
  union {
    LoadLineResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LoadLineResponseDefaultTypeInternal _LoadLineResponse_default_instance_;

inline constexpr HoldResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        winch_result_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR HoldResponse::HoldResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct HoldResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HoldResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~HoldResponseDefaultTypeInternal() {}
  union {
    HoldResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HoldResponseDefaultTypeInternal _HoldResponse_default_instance_;

inline constexpr DeliverResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        winch_result_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR DeliverResponse::DeliverResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct DeliverResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeliverResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeliverResponseDefaultTypeInternal() {}
  union {
    DeliverResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeliverResponseDefaultTypeInternal _DeliverResponse_default_instance_;

inline constexpr AbandonLineResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        winch_result_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR AbandonLineResponse::AbandonLineResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct AbandonLineResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AbandonLineResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AbandonLineResponseDefaultTypeInternal() {}
  union {
    AbandonLineResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AbandonLineResponseDefaultTypeInternal _AbandonLineResponse_default_instance_;

inline constexpr StatusResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        status_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR StatusResponse::StatusResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct StatusResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StatusResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StatusResponseDefaultTypeInternal() {}
  union {
    StatusResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StatusResponseDefaultTypeInternal _StatusResponse_default_instance_;
}  // namespace winch
}  // namespace rpc
}  // namespace mavsdk
static ::_pb::Metadata file_level_metadata_winch_2fwinch_2eproto[25];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_winch_2fwinch_2eproto[2];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_winch_2fwinch_2eproto = nullptr;
const ::uint32_t TableStruct_winch_2fwinch_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::winch::SubscribeStatusRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::winch::StatusResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::winch::StatusResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::winch::StatusResponse, _impl_.status_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::winch::StatusFlags, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::winch::StatusFlags, _impl_.healthy_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::winch::StatusFlags, _impl_.fully_retracted_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::winch::StatusFlags, _impl_.moving_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::winch::StatusFlags, _impl_.clutch_engaged_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::winch::StatusFlags, _impl_.locked_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::winch::StatusFlags, _impl_.dropping_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::winch::StatusFlags, _impl_.arresting_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::winch::StatusFlags, _impl_.ground_sense_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::winch::StatusFlags, _impl_.retracting_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::winch::StatusFlags, _impl_.redeliver_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::winch::StatusFlags, _impl_.abandon_line_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::winch::StatusFlags, _impl_.locking_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::winch::StatusFlags, _impl_.load_line_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::winch::StatusFlags, _impl_.load_payload_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::winch::Status, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::winch::Status, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::winch::Status, _impl_.time_usec_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::winch::Status, _impl_.line_length_m_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::winch::Status, _impl_.speed_m_s_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::winch::Status, _impl_.tension_kg_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::winch::Status, _impl_.voltage_v_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::winch::Status, _impl_.current_a_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::winch::Status, _impl_.temperature_c_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::winch::Status, _impl_.status_flags_),
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::winch::RelaxRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::winch::RelaxRequest, _impl_.instance_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::winch::RelaxResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::winch::RelaxResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::winch::RelaxResponse, _impl_.winch_result_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::winch::RelativeLengthControlRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::winch::RelativeLengthControlRequest, _impl_.instance_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::winch::RelativeLengthControlRequest, _impl_.length_m_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::winch::RelativeLengthControlRequest, _impl_.rate_m_s_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::winch::RelativeLengthControlResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::winch::RelativeLengthControlResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::winch::RelativeLengthControlResponse, _impl_.winch_result_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::winch::RateControlRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::winch::RateControlRequest, _impl_.instance_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::winch::RateControlRequest, _impl_.rate_m_s_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::winch::RateControlResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::winch::RateControlResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::winch::RateControlResponse, _impl_.winch_result_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::winch::LockRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::winch::LockRequest, _impl_.instance_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::winch::LockResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::winch::LockResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::winch::LockResponse, _impl_.winch_result_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::winch::DeliverRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::winch::DeliverRequest, _impl_.instance_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::winch::DeliverResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::winch::DeliverResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::winch::DeliverResponse, _impl_.winch_result_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::winch::HoldRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::winch::HoldRequest, _impl_.instance_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::winch::HoldResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::winch::HoldResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::winch::HoldResponse, _impl_.winch_result_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::winch::RetractRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::winch::RetractRequest, _impl_.instance_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::winch::RetractResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::winch::RetractResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::winch::RetractResponse, _impl_.winch_result_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::winch::LoadLineRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::winch::LoadLineRequest, _impl_.instance_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::winch::LoadLineResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::winch::LoadLineResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::winch::LoadLineResponse, _impl_.winch_result_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::winch::AbandonLineRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::winch::AbandonLineRequest, _impl_.instance_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::winch::AbandonLineResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::winch::AbandonLineResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::winch::AbandonLineResponse, _impl_.winch_result_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::winch::LoadPayloadRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::winch::LoadPayloadRequest, _impl_.instance_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::winch::LoadPayloadResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::winch::LoadPayloadResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::winch::LoadPayloadResponse, _impl_.winch_result_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::winch::WinchResult, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::winch::WinchResult, _impl_.result_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::winch::WinchResult, _impl_.result_str_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::mavsdk::rpc::winch::SubscribeStatusRequest)},
        {8, 17, -1, sizeof(::mavsdk::rpc::winch::StatusResponse)},
        {18, -1, -1, sizeof(::mavsdk::rpc::winch::StatusFlags)},
        {40, 56, -1, sizeof(::mavsdk::rpc::winch::Status)},
        {64, -1, -1, sizeof(::mavsdk::rpc::winch::RelaxRequest)},
        {73, 82, -1, sizeof(::mavsdk::rpc::winch::RelaxResponse)},
        {83, -1, -1, sizeof(::mavsdk::rpc::winch::RelativeLengthControlRequest)},
        {94, 103, -1, sizeof(::mavsdk::rpc::winch::RelativeLengthControlResponse)},
        {104, -1, -1, sizeof(::mavsdk::rpc::winch::RateControlRequest)},
        {114, 123, -1, sizeof(::mavsdk::rpc::winch::RateControlResponse)},
        {124, -1, -1, sizeof(::mavsdk::rpc::winch::LockRequest)},
        {133, 142, -1, sizeof(::mavsdk::rpc::winch::LockResponse)},
        {143, -1, -1, sizeof(::mavsdk::rpc::winch::DeliverRequest)},
        {152, 161, -1, sizeof(::mavsdk::rpc::winch::DeliverResponse)},
        {162, -1, -1, sizeof(::mavsdk::rpc::winch::HoldRequest)},
        {171, 180, -1, sizeof(::mavsdk::rpc::winch::HoldResponse)},
        {181, -1, -1, sizeof(::mavsdk::rpc::winch::RetractRequest)},
        {190, 199, -1, sizeof(::mavsdk::rpc::winch::RetractResponse)},
        {200, -1, -1, sizeof(::mavsdk::rpc::winch::LoadLineRequest)},
        {209, 218, -1, sizeof(::mavsdk::rpc::winch::LoadLineResponse)},
        {219, -1, -1, sizeof(::mavsdk::rpc::winch::AbandonLineRequest)},
        {228, 237, -1, sizeof(::mavsdk::rpc::winch::AbandonLineResponse)},
        {238, -1, -1, sizeof(::mavsdk::rpc::winch::LoadPayloadRequest)},
        {247, 256, -1, sizeof(::mavsdk::rpc::winch::LoadPayloadResponse)},
        {257, -1, -1, sizeof(::mavsdk::rpc::winch::WinchResult)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::mavsdk::rpc::winch::_SubscribeStatusRequest_default_instance_._instance,
    &::mavsdk::rpc::winch::_StatusResponse_default_instance_._instance,
    &::mavsdk::rpc::winch::_StatusFlags_default_instance_._instance,
    &::mavsdk::rpc::winch::_Status_default_instance_._instance,
    &::mavsdk::rpc::winch::_RelaxRequest_default_instance_._instance,
    &::mavsdk::rpc::winch::_RelaxResponse_default_instance_._instance,
    &::mavsdk::rpc::winch::_RelativeLengthControlRequest_default_instance_._instance,
    &::mavsdk::rpc::winch::_RelativeLengthControlResponse_default_instance_._instance,
    &::mavsdk::rpc::winch::_RateControlRequest_default_instance_._instance,
    &::mavsdk::rpc::winch::_RateControlResponse_default_instance_._instance,
    &::mavsdk::rpc::winch::_LockRequest_default_instance_._instance,
    &::mavsdk::rpc::winch::_LockResponse_default_instance_._instance,
    &::mavsdk::rpc::winch::_DeliverRequest_default_instance_._instance,
    &::mavsdk::rpc::winch::_DeliverResponse_default_instance_._instance,
    &::mavsdk::rpc::winch::_HoldRequest_default_instance_._instance,
    &::mavsdk::rpc::winch::_HoldResponse_default_instance_._instance,
    &::mavsdk::rpc::winch::_RetractRequest_default_instance_._instance,
    &::mavsdk::rpc::winch::_RetractResponse_default_instance_._instance,
    &::mavsdk::rpc::winch::_LoadLineRequest_default_instance_._instance,
    &::mavsdk::rpc::winch::_LoadLineResponse_default_instance_._instance,
    &::mavsdk::rpc::winch::_AbandonLineRequest_default_instance_._instance,
    &::mavsdk::rpc::winch::_AbandonLineResponse_default_instance_._instance,
    &::mavsdk::rpc::winch::_LoadPayloadRequest_default_instance_._instance,
    &::mavsdk::rpc::winch::_LoadPayloadResponse_default_instance_._instance,
    &::mavsdk::rpc::winch::_WinchResult_default_instance_._instance,
};
const char descriptor_table_protodef_winch_2fwinch_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\021winch/winch.proto\022\020mavsdk.rpc.winch\032\024m"
    "avsdk_options.proto\"\030\n\026SubscribeStatusRe"
    "quest\":\n\016StatusResponse\022(\n\006status\030\001 \001(\0132"
    "\030.mavsdk.rpc.winch.Status\"\241\002\n\013StatusFlag"
    "s\022\017\n\007healthy\030\001 \001(\010\022\027\n\017fully_retracted\030\002 "
    "\001(\010\022\016\n\006moving\030\003 \001(\010\022\026\n\016clutch_engaged\030\004 "
    "\001(\010\022\016\n\006locked\030\005 \001(\010\022\020\n\010dropping\030\006 \001(\010\022\021\n"
    "\tarresting\030\007 \001(\010\022\024\n\014ground_sense\030\010 \001(\010\022\022"
    "\n\nretracting\030\t \001(\010\022\021\n\tredeliver\030\n \001(\010\022\024\n"
    "\014abandon_line\030\013 \001(\010\022\017\n\007locking\030\014 \001(\010\022\021\n\t"
    "load_line\030\r \001(\010\022\024\n\014load_payload\030\016 \001(\010\"\313\001"
    "\n\006Status\022\021\n\ttime_usec\030\001 \001(\004\022\025\n\rline_leng"
    "th_m\030\002 \001(\002\022\021\n\tspeed_m_s\030\003 \001(\002\022\022\n\ntension"
    "_kg\030\004 \001(\002\022\021\n\tvoltage_v\030\005 \001(\002\022\021\n\tcurrent_"
    "a\030\006 \001(\002\022\025\n\rtemperature_c\030\007 \001(\005\0223\n\014status"
    "_flags\030\010 \001(\0132\035.mavsdk.rpc.winch.StatusFl"
    "ags\" \n\014RelaxRequest\022\020\n\010instance\030\001 \001(\r\"D\n"
    "\rRelaxResponse\0223\n\014winch_result\030\001 \001(\0132\035.m"
    "avsdk.rpc.winch.WinchResult\"]\n\034RelativeL"
    "engthControlRequest\022\020\n\010instance\030\001 \001(\r\022\020\n"
    "\010length_m\030\002 \001(\002\022\031\n\010rate_m_s\030\003 \001(\002B\007\202\265\030\003N"
    "aN\"T\n\035RelativeLengthControlResponse\0223\n\014w"
    "inch_result\030\001 \001(\0132\035.mavsdk.rpc.winch.Win"
    "chResult\"8\n\022RateControlRequest\022\020\n\010instan"
    "ce\030\001 \001(\r\022\020\n\010rate_m_s\030\002 \001(\002\"J\n\023RateContro"
    "lResponse\0223\n\014winch_result\030\001 \001(\0132\035.mavsdk"
    ".rpc.winch.WinchResult\"\037\n\013LockRequest\022\020\n"
    "\010instance\030\001 \001(\r\"C\n\014LockResponse\0223\n\014winch"
    "_result\030\001 \001(\0132\035.mavsdk.rpc.winch.WinchRe"
    "sult\"\"\n\016DeliverRequest\022\020\n\010instance\030\001 \001(\r"
    "\"F\n\017DeliverResponse\0223\n\014winch_result\030\001 \001("
    "\0132\035.mavsdk.rpc.winch.WinchResult\"\037\n\013Hold"
    "Request\022\020\n\010instance\030\001 \001(\r\"C\n\014HoldRespons"
    "e\0223\n\014winch_result\030\001 \001(\0132\035.mavsdk.rpc.win"
    "ch.WinchResult\"\"\n\016RetractRequest\022\020\n\010inst"
    "ance\030\001 \001(\r\"F\n\017RetractResponse\0223\n\014winch_r"
    "esult\030\001 \001(\0132\035.mavsdk.rpc.winch.WinchResu"
    "lt\"#\n\017LoadLineRequest\022\020\n\010instance\030\001 \001(\r\""
    "G\n\020LoadLineResponse\0223\n\014winch_result\030\001 \001("
    "\0132\035.mavsdk.rpc.winch.WinchResult\"&\n\022Aban"
    "donLineRequest\022\020\n\010instance\030\001 \001(\r\"J\n\023Aban"
    "donLineResponse\0223\n\014winch_result\030\001 \001(\0132\035."
    "mavsdk.rpc.winch.WinchResult\"&\n\022LoadPayl"
    "oadRequest\022\020\n\010instance\030\001 \001(\r\"J\n\023LoadPayl"
    "oadResponse\0223\n\014winch_result\030\001 \001(\0132\035.mavs"
    "dk.rpc.winch.WinchResult\"\360\001\n\013WinchResult"
    "\0224\n\006result\030\001 \001(\0162$.mavsdk.rpc.winch.Winc"
    "hResult.Result\022\022\n\nresult_str\030\002 \001(\t\"\226\001\n\006R"
    "esult\022\022\n\016RESULT_UNKNOWN\020\000\022\022\n\016RESULT_SUCC"
    "ESS\020\001\022\024\n\020RESULT_NO_SYSTEM\020\002\022\017\n\013RESULT_BU"
    "SY\020\003\022\022\n\016RESULT_TIMEOUT\020\004\022\026\n\022RESULT_UNSUP"
    "PORTED\020\005\022\021\n\rRESULT_FAILED\020\006*\254\002\n\013WinchAct"
    "ion\022\030\n\024WINCH_ACTION_RELAXED\020\000\022(\n$WINCH_A"
    "CTION_RELATIVE_LENGTH_CONTROL\020\001\022\035\n\031WINCH"
    "_ACTION_RATE_CONTROL\020\002\022\025\n\021WINCH_ACTION_L"
    "OCK\020\003\022\030\n\024WINCH_ACTION_DELIVER\020\004\022\025\n\021WINCH"
    "_ACTION_HOLD\020\005\022\030\n\024WINCH_ACTION_RETRACT\020\006"
    "\022\032\n\026WINCH_ACTION_LOAD_LINE\020\007\022\035\n\031WINCH_AC"
    "TION_ABANDON_LINE\020\010\022\035\n\031WINCH_ACTION_LOAD"
    "_PAYLOAD\020\t2\336\007\n\014WinchService\022a\n\017Subscribe"
    "Status\022(.mavsdk.rpc.winch.SubscribeStatu"
    "sRequest\032 .mavsdk.rpc.winch.StatusRespon"
    "se\"\0000\001\022J\n\005Relax\022\036.mavsdk.rpc.winch.Relax"
    "Request\032\037.mavsdk.rpc.winch.RelaxResponse"
    "\"\000\022z\n\025RelativeLengthControl\022..mavsdk.rpc"
    ".winch.RelativeLengthControlRequest\032/.ma"
    "vsdk.rpc.winch.RelativeLengthControlResp"
    "onse\"\000\022\\\n\013RateControl\022$.mavsdk.rpc.winch"
    ".RateControlRequest\032%.mavsdk.rpc.winch.R"
    "ateControlResponse\"\000\022G\n\004Lock\022\035.mavsdk.rp"
    "c.winch.LockRequest\032\036.mavsdk.rpc.winch.L"
    "ockResponse\"\000\022P\n\007Deliver\022 .mavsdk.rpc.wi"
    "nch.DeliverRequest\032!.mavsdk.rpc.winch.De"
    "liverResponse\"\000\022G\n\004Hold\022\035.mavsdk.rpc.win"
    "ch.HoldRequest\032\036.mavsdk.rpc.winch.HoldRe"
    "sponse\"\000\022P\n\007Retract\022 .mavsdk.rpc.winch.R"
    "etractRequest\032!.mavsdk.rpc.winch.Retract"
    "Response\"\000\022S\n\010LoadLine\022!.mavsdk.rpc.winc"
    "h.LoadLineRequest\032\".mavsdk.rpc.winch.Loa"
    "dLineResponse\"\000\022\\\n\013AbandonLine\022$.mavsdk."
    "rpc.winch.AbandonLineRequest\032%.mavsdk.rp"
    "c.winch.AbandonLineResponse\"\000\022\\\n\013LoadPay"
    "load\022$.mavsdk.rpc.winch.LoadPayloadReque"
    "st\032%.mavsdk.rpc.winch.LoadPayloadRespons"
    "e\"\000B\035\n\017io.mavsdk.winchB\nWinchProtob\006prot"
    "o3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_winch_2fwinch_2eproto_deps[1] =
    {
        &::descriptor_table_mavsdk_5foptions_2eproto,
};
static ::absl::once_flag descriptor_table_winch_2fwinch_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_winch_2fwinch_2eproto = {
    false,
    false,
    3402,
    descriptor_table_protodef_winch_2fwinch_2eproto,
    "winch/winch.proto",
    &descriptor_table_winch_2fwinch_2eproto_once,
    descriptor_table_winch_2fwinch_2eproto_deps,
    1,
    25,
    schemas,
    file_default_instances,
    TableStruct_winch_2fwinch_2eproto::offsets,
    file_level_metadata_winch_2fwinch_2eproto,
    file_level_enum_descriptors_winch_2fwinch_2eproto,
    file_level_service_descriptors_winch_2fwinch_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_winch_2fwinch_2eproto_getter() {
  return &descriptor_table_winch_2fwinch_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_winch_2fwinch_2eproto(&descriptor_table_winch_2fwinch_2eproto);
namespace mavsdk {
namespace rpc {
namespace winch {
const ::google::protobuf::EnumDescriptor* WinchResult_Result_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_winch_2fwinch_2eproto);
  return file_level_enum_descriptors_winch_2fwinch_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t WinchResult_Result_internal_data_[] = {
    458752u, 0u, };
bool WinchResult_Result_IsValid(int value) {
  return 0 <= value && value <= 6;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr WinchResult_Result WinchResult::RESULT_UNKNOWN;
constexpr WinchResult_Result WinchResult::RESULT_SUCCESS;
constexpr WinchResult_Result WinchResult::RESULT_NO_SYSTEM;
constexpr WinchResult_Result WinchResult::RESULT_BUSY;
constexpr WinchResult_Result WinchResult::RESULT_TIMEOUT;
constexpr WinchResult_Result WinchResult::RESULT_UNSUPPORTED;
constexpr WinchResult_Result WinchResult::RESULT_FAILED;
constexpr WinchResult_Result WinchResult::Result_MIN;
constexpr WinchResult_Result WinchResult::Result_MAX;
constexpr int WinchResult::Result_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* WinchAction_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_winch_2fwinch_2eproto);
  return file_level_enum_descriptors_winch_2fwinch_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t WinchAction_internal_data_[] = {
    655360u, 0u, };
bool WinchAction_IsValid(int value) {
  return 0 <= value && value <= 9;
}
// ===================================================================

class SubscribeStatusRequest::_Internal {
 public:
};

SubscribeStatusRequest::SubscribeStatusRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.winch.SubscribeStatusRequest)
}
SubscribeStatusRequest::SubscribeStatusRequest(
    ::google::protobuf::Arena* arena,
    const SubscribeStatusRequest& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  SubscribeStatusRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.winch.SubscribeStatusRequest)
}









::google::protobuf::Metadata SubscribeStatusRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_winch_2fwinch_2eproto_getter, &descriptor_table_winch_2fwinch_2eproto_once,
      file_level_metadata_winch_2fwinch_2eproto[0]);
}
// ===================================================================

class StatusResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<StatusResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(StatusResponse, _impl_._has_bits_);
  static const ::mavsdk::rpc::winch::Status& status(const StatusResponse* msg);
  static void set_has_status(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::winch::Status& StatusResponse::_Internal::status(const StatusResponse* msg) {
  return *msg->_impl_.status_;
}
StatusResponse::StatusResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.winch.StatusResponse)
}
inline PROTOBUF_NDEBUG_INLINE StatusResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

StatusResponse::StatusResponse(
    ::google::protobuf::Arena* arena,
    const StatusResponse& from)
    : ::google::protobuf::Message(arena) {
  StatusResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.status_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::winch::Status>(arena, *from._impl_.status_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.winch.StatusResponse)
}
inline PROTOBUF_NDEBUG_INLINE StatusResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void StatusResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.status_ = {};
}
StatusResponse::~StatusResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.winch.StatusResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void StatusResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.status_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void StatusResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.winch.StatusResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.status_ != nullptr);
    _impl_.status_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* StatusResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> StatusResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(StatusResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_StatusResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.winch.Status status = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(StatusResponse, _impl_.status_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.winch.Status status = 1;
    {PROTOBUF_FIELD_OFFSET(StatusResponse, _impl_.status_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::winch::Status>()},
  }}, {{
  }},
};

::uint8_t* StatusResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.winch.StatusResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.winch.Status status = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::status(this),
        _Internal::status(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.winch.StatusResponse)
  return target;
}

::size_t StatusResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.winch.StatusResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.winch.Status status = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.status_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData StatusResponse::_class_data_ = {
    StatusResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* StatusResponse::GetClassData() const {
  return &_class_data_;
}

void StatusResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<StatusResponse*>(&to_msg);
  auto& from = static_cast<const StatusResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.winch.StatusResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_status()->::mavsdk::rpc::winch::Status::MergeFrom(
        from._internal_status());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void StatusResponse::CopyFrom(const StatusResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.winch.StatusResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool StatusResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* StatusResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void StatusResponse::InternalSwap(StatusResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.status_, other->_impl_.status_);
}

::google::protobuf::Metadata StatusResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_winch_2fwinch_2eproto_getter, &descriptor_table_winch_2fwinch_2eproto_once,
      file_level_metadata_winch_2fwinch_2eproto[1]);
}
// ===================================================================

class StatusFlags::_Internal {
 public:
};

StatusFlags::StatusFlags(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.winch.StatusFlags)
}
StatusFlags::StatusFlags(
    ::google::protobuf::Arena* arena, const StatusFlags& from)
    : StatusFlags(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE StatusFlags::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void StatusFlags::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, healthy_),
           0,
           offsetof(Impl_, load_payload_) -
               offsetof(Impl_, healthy_) +
               sizeof(Impl_::load_payload_));
}
StatusFlags::~StatusFlags() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.winch.StatusFlags)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void StatusFlags::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void StatusFlags::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.winch.StatusFlags)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.healthy_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.load_payload_) -
      reinterpret_cast<char*>(&_impl_.healthy_)) + sizeof(_impl_.load_payload_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* StatusFlags::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 14, 0, 0, 2> StatusFlags::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    14, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294950912,  // skipmap
    offsetof(decltype(_table_), field_entries),
    14,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_StatusFlags_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // bool healthy = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(StatusFlags, _impl_.healthy_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(StatusFlags, _impl_.healthy_)}},
    // bool fully_retracted = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(StatusFlags, _impl_.fully_retracted_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(StatusFlags, _impl_.fully_retracted_)}},
    // bool moving = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(StatusFlags, _impl_.moving_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(StatusFlags, _impl_.moving_)}},
    // bool clutch_engaged = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(StatusFlags, _impl_.clutch_engaged_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(StatusFlags, _impl_.clutch_engaged_)}},
    // bool locked = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(StatusFlags, _impl_.locked_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(StatusFlags, _impl_.locked_)}},
    // bool dropping = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(StatusFlags, _impl_.dropping_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(StatusFlags, _impl_.dropping_)}},
    // bool arresting = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(StatusFlags, _impl_.arresting_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(StatusFlags, _impl_.arresting_)}},
    // bool ground_sense = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(StatusFlags, _impl_.ground_sense_), 63>(),
     {64, 63, 0, PROTOBUF_FIELD_OFFSET(StatusFlags, _impl_.ground_sense_)}},
    // bool retracting = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(StatusFlags, _impl_.retracting_), 63>(),
     {72, 63, 0, PROTOBUF_FIELD_OFFSET(StatusFlags, _impl_.retracting_)}},
    // bool redeliver = 10;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(StatusFlags, _impl_.redeliver_), 63>(),
     {80, 63, 0, PROTOBUF_FIELD_OFFSET(StatusFlags, _impl_.redeliver_)}},
    // bool abandon_line = 11;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(StatusFlags, _impl_.abandon_line_), 63>(),
     {88, 63, 0, PROTOBUF_FIELD_OFFSET(StatusFlags, _impl_.abandon_line_)}},
    // bool locking = 12;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(StatusFlags, _impl_.locking_), 63>(),
     {96, 63, 0, PROTOBUF_FIELD_OFFSET(StatusFlags, _impl_.locking_)}},
    // bool load_line = 13;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(StatusFlags, _impl_.load_line_), 63>(),
     {104, 63, 0, PROTOBUF_FIELD_OFFSET(StatusFlags, _impl_.load_line_)}},
    // bool load_payload = 14;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(StatusFlags, _impl_.load_payload_), 63>(),
     {112, 63, 0, PROTOBUF_FIELD_OFFSET(StatusFlags, _impl_.load_payload_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // bool healthy = 1;
    {PROTOBUF_FIELD_OFFSET(StatusFlags, _impl_.healthy_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bool fully_retracted = 2;
    {PROTOBUF_FIELD_OFFSET(StatusFlags, _impl_.fully_retracted_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bool moving = 3;
    {PROTOBUF_FIELD_OFFSET(StatusFlags, _impl_.moving_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bool clutch_engaged = 4;
    {PROTOBUF_FIELD_OFFSET(StatusFlags, _impl_.clutch_engaged_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bool locked = 5;
    {PROTOBUF_FIELD_OFFSET(StatusFlags, _impl_.locked_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bool dropping = 6;
    {PROTOBUF_FIELD_OFFSET(StatusFlags, _impl_.dropping_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bool arresting = 7;
    {PROTOBUF_FIELD_OFFSET(StatusFlags, _impl_.arresting_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bool ground_sense = 8;
    {PROTOBUF_FIELD_OFFSET(StatusFlags, _impl_.ground_sense_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bool retracting = 9;
    {PROTOBUF_FIELD_OFFSET(StatusFlags, _impl_.retracting_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bool redeliver = 10;
    {PROTOBUF_FIELD_OFFSET(StatusFlags, _impl_.redeliver_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bool abandon_line = 11;
    {PROTOBUF_FIELD_OFFSET(StatusFlags, _impl_.abandon_line_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bool locking = 12;
    {PROTOBUF_FIELD_OFFSET(StatusFlags, _impl_.locking_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bool load_line = 13;
    {PROTOBUF_FIELD_OFFSET(StatusFlags, _impl_.load_line_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bool load_payload = 14;
    {PROTOBUF_FIELD_OFFSET(StatusFlags, _impl_.load_payload_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* StatusFlags::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.winch.StatusFlags)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bool healthy = 1;
  if (this->_internal_healthy() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        1, this->_internal_healthy(), target);
  }

  // bool fully_retracted = 2;
  if (this->_internal_fully_retracted() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        2, this->_internal_fully_retracted(), target);
  }

  // bool moving = 3;
  if (this->_internal_moving() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        3, this->_internal_moving(), target);
  }

  // bool clutch_engaged = 4;
  if (this->_internal_clutch_engaged() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        4, this->_internal_clutch_engaged(), target);
  }

  // bool locked = 5;
  if (this->_internal_locked() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        5, this->_internal_locked(), target);
  }

  // bool dropping = 6;
  if (this->_internal_dropping() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        6, this->_internal_dropping(), target);
  }

  // bool arresting = 7;
  if (this->_internal_arresting() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        7, this->_internal_arresting(), target);
  }

  // bool ground_sense = 8;
  if (this->_internal_ground_sense() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        8, this->_internal_ground_sense(), target);
  }

  // bool retracting = 9;
  if (this->_internal_retracting() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        9, this->_internal_retracting(), target);
  }

  // bool redeliver = 10;
  if (this->_internal_redeliver() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        10, this->_internal_redeliver(), target);
  }

  // bool abandon_line = 11;
  if (this->_internal_abandon_line() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        11, this->_internal_abandon_line(), target);
  }

  // bool locking = 12;
  if (this->_internal_locking() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        12, this->_internal_locking(), target);
  }

  // bool load_line = 13;
  if (this->_internal_load_line() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        13, this->_internal_load_line(), target);
  }

  // bool load_payload = 14;
  if (this->_internal_load_payload() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        14, this->_internal_load_payload(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.winch.StatusFlags)
  return target;
}

::size_t StatusFlags::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.winch.StatusFlags)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool healthy = 1;
  if (this->_internal_healthy() != 0) {
    total_size += 2;
  }

  // bool fully_retracted = 2;
  if (this->_internal_fully_retracted() != 0) {
    total_size += 2;
  }

  // bool moving = 3;
  if (this->_internal_moving() != 0) {
    total_size += 2;
  }

  // bool clutch_engaged = 4;
  if (this->_internal_clutch_engaged() != 0) {
    total_size += 2;
  }

  // bool locked = 5;
  if (this->_internal_locked() != 0) {
    total_size += 2;
  }

  // bool dropping = 6;
  if (this->_internal_dropping() != 0) {
    total_size += 2;
  }

  // bool arresting = 7;
  if (this->_internal_arresting() != 0) {
    total_size += 2;
  }

  // bool ground_sense = 8;
  if (this->_internal_ground_sense() != 0) {
    total_size += 2;
  }

  // bool retracting = 9;
  if (this->_internal_retracting() != 0) {
    total_size += 2;
  }

  // bool redeliver = 10;
  if (this->_internal_redeliver() != 0) {
    total_size += 2;
  }

  // bool abandon_line = 11;
  if (this->_internal_abandon_line() != 0) {
    total_size += 2;
  }

  // bool locking = 12;
  if (this->_internal_locking() != 0) {
    total_size += 2;
  }

  // bool load_line = 13;
  if (this->_internal_load_line() != 0) {
    total_size += 2;
  }

  // bool load_payload = 14;
  if (this->_internal_load_payload() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData StatusFlags::_class_data_ = {
    StatusFlags::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* StatusFlags::GetClassData() const {
  return &_class_data_;
}

void StatusFlags::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<StatusFlags*>(&to_msg);
  auto& from = static_cast<const StatusFlags&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.winch.StatusFlags)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_healthy() != 0) {
    _this->_internal_set_healthy(from._internal_healthy());
  }
  if (from._internal_fully_retracted() != 0) {
    _this->_internal_set_fully_retracted(from._internal_fully_retracted());
  }
  if (from._internal_moving() != 0) {
    _this->_internal_set_moving(from._internal_moving());
  }
  if (from._internal_clutch_engaged() != 0) {
    _this->_internal_set_clutch_engaged(from._internal_clutch_engaged());
  }
  if (from._internal_locked() != 0) {
    _this->_internal_set_locked(from._internal_locked());
  }
  if (from._internal_dropping() != 0) {
    _this->_internal_set_dropping(from._internal_dropping());
  }
  if (from._internal_arresting() != 0) {
    _this->_internal_set_arresting(from._internal_arresting());
  }
  if (from._internal_ground_sense() != 0) {
    _this->_internal_set_ground_sense(from._internal_ground_sense());
  }
  if (from._internal_retracting() != 0) {
    _this->_internal_set_retracting(from._internal_retracting());
  }
  if (from._internal_redeliver() != 0) {
    _this->_internal_set_redeliver(from._internal_redeliver());
  }
  if (from._internal_abandon_line() != 0) {
    _this->_internal_set_abandon_line(from._internal_abandon_line());
  }
  if (from._internal_locking() != 0) {
    _this->_internal_set_locking(from._internal_locking());
  }
  if (from._internal_load_line() != 0) {
    _this->_internal_set_load_line(from._internal_load_line());
  }
  if (from._internal_load_payload() != 0) {
    _this->_internal_set_load_payload(from._internal_load_payload());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void StatusFlags::CopyFrom(const StatusFlags& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.winch.StatusFlags)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool StatusFlags::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* StatusFlags::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void StatusFlags::InternalSwap(StatusFlags* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(StatusFlags, _impl_.load_payload_)
      + sizeof(StatusFlags::_impl_.load_payload_)
      - PROTOBUF_FIELD_OFFSET(StatusFlags, _impl_.healthy_)>(
          reinterpret_cast<char*>(&_impl_.healthy_),
          reinterpret_cast<char*>(&other->_impl_.healthy_));
}

::google::protobuf::Metadata StatusFlags::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_winch_2fwinch_2eproto_getter, &descriptor_table_winch_2fwinch_2eproto_once,
      file_level_metadata_winch_2fwinch_2eproto[2]);
}
// ===================================================================

class Status::_Internal {
 public:
  using HasBits = decltype(std::declval<Status>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Status, _impl_._has_bits_);
  static const ::mavsdk::rpc::winch::StatusFlags& status_flags(const Status* msg);
  static void set_has_status_flags(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::winch::StatusFlags& Status::_Internal::status_flags(const Status* msg) {
  return *msg->_impl_.status_flags_;
}
Status::Status(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.winch.Status)
}
inline PROTOBUF_NDEBUG_INLINE Status::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

Status::Status(
    ::google::protobuf::Arena* arena,
    const Status& from)
    : ::google::protobuf::Message(arena) {
  Status* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.status_flags_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::winch::StatusFlags>(arena, *from._impl_.status_flags_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, time_usec_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, time_usec_),
           offsetof(Impl_, temperature_c_) -
               offsetof(Impl_, time_usec_) +
               sizeof(Impl_::temperature_c_));

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.winch.Status)
}
inline PROTOBUF_NDEBUG_INLINE Status::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Status::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, status_flags_),
           0,
           offsetof(Impl_, temperature_c_) -
               offsetof(Impl_, status_flags_) +
               sizeof(Impl_::temperature_c_));
}
Status::~Status() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.winch.Status)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Status::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.status_flags_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Status::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.winch.Status)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.status_flags_ != nullptr);
    _impl_.status_flags_->Clear();
  }
  ::memset(&_impl_.time_usec_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.temperature_c_) -
      reinterpret_cast<char*>(&_impl_.time_usec_)) + sizeof(_impl_.temperature_c_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Status::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 8, 1, 0, 2> Status::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Status, _impl_._has_bits_),
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967040,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Status_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.winch.StatusFlags status_flags = 8;
    {::_pbi::TcParser::FastMtS1,
     {66, 0, 0, PROTOBUF_FIELD_OFFSET(Status, _impl_.status_flags_)}},
    // uint64 time_usec = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Status, _impl_.time_usec_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Status, _impl_.time_usec_)}},
    // float line_length_m = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 63, 0, PROTOBUF_FIELD_OFFSET(Status, _impl_.line_length_m_)}},
    // float speed_m_s = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 63, 0, PROTOBUF_FIELD_OFFSET(Status, _impl_.speed_m_s_)}},
    // float tension_kg = 4;
    {::_pbi::TcParser::FastF32S1,
     {37, 63, 0, PROTOBUF_FIELD_OFFSET(Status, _impl_.tension_kg_)}},
    // float voltage_v = 5;
    {::_pbi::TcParser::FastF32S1,
     {45, 63, 0, PROTOBUF_FIELD_OFFSET(Status, _impl_.voltage_v_)}},
    // float current_a = 6;
    {::_pbi::TcParser::FastF32S1,
     {53, 63, 0, PROTOBUF_FIELD_OFFSET(Status, _impl_.current_a_)}},
    // int32 temperature_c = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Status, _impl_.temperature_c_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(Status, _impl_.temperature_c_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 time_usec = 1;
    {PROTOBUF_FIELD_OFFSET(Status, _impl_.time_usec_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // float line_length_m = 2;
    {PROTOBUF_FIELD_OFFSET(Status, _impl_.line_length_m_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float speed_m_s = 3;
    {PROTOBUF_FIELD_OFFSET(Status, _impl_.speed_m_s_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float tension_kg = 4;
    {PROTOBUF_FIELD_OFFSET(Status, _impl_.tension_kg_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float voltage_v = 5;
    {PROTOBUF_FIELD_OFFSET(Status, _impl_.voltage_v_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float current_a = 6;
    {PROTOBUF_FIELD_OFFSET(Status, _impl_.current_a_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // int32 temperature_c = 7;
    {PROTOBUF_FIELD_OFFSET(Status, _impl_.temperature_c_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // .mavsdk.rpc.winch.StatusFlags status_flags = 8;
    {PROTOBUF_FIELD_OFFSET(Status, _impl_.status_flags_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::winch::StatusFlags>()},
  }}, {{
  }},
};

::uint8_t* Status::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.winch.Status)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint64 time_usec = 1;
  if (this->_internal_time_usec() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this->_internal_time_usec(), target);
  }

  // float line_length_m = 2;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_line_length_m = this->_internal_line_length_m();
  ::uint32_t raw_line_length_m;
  memcpy(&raw_line_length_m, &tmp_line_length_m, sizeof(tmp_line_length_m));
  if (raw_line_length_m != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        2, this->_internal_line_length_m(), target);
  }

  // float speed_m_s = 3;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_speed_m_s = this->_internal_speed_m_s();
  ::uint32_t raw_speed_m_s;
  memcpy(&raw_speed_m_s, &tmp_speed_m_s, sizeof(tmp_speed_m_s));
  if (raw_speed_m_s != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        3, this->_internal_speed_m_s(), target);
  }

  // float tension_kg = 4;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_tension_kg = this->_internal_tension_kg();
  ::uint32_t raw_tension_kg;
  memcpy(&raw_tension_kg, &tmp_tension_kg, sizeof(tmp_tension_kg));
  if (raw_tension_kg != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        4, this->_internal_tension_kg(), target);
  }

  // float voltage_v = 5;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_voltage_v = this->_internal_voltage_v();
  ::uint32_t raw_voltage_v;
  memcpy(&raw_voltage_v, &tmp_voltage_v, sizeof(tmp_voltage_v));
  if (raw_voltage_v != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        5, this->_internal_voltage_v(), target);
  }

  // float current_a = 6;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_current_a = this->_internal_current_a();
  ::uint32_t raw_current_a;
  memcpy(&raw_current_a, &tmp_current_a, sizeof(tmp_current_a));
  if (raw_current_a != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        6, this->_internal_current_a(), target);
  }

  // int32 temperature_c = 7;
  if (this->_internal_temperature_c() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<7>(
            stream, this->_internal_temperature_c(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.winch.StatusFlags status_flags = 8;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        8, _Internal::status_flags(this),
        _Internal::status_flags(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.winch.Status)
  return target;
}

::size_t Status::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.winch.Status)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.winch.StatusFlags status_flags = 8;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.status_flags_);
  }

  // uint64 time_usec = 1;
  if (this->_internal_time_usec() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_time_usec());
  }

  // float line_length_m = 2;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_line_length_m = this->_internal_line_length_m();
  ::uint32_t raw_line_length_m;
  memcpy(&raw_line_length_m, &tmp_line_length_m, sizeof(tmp_line_length_m));
  if (raw_line_length_m != 0) {
    total_size += 5;
  }

  // float speed_m_s = 3;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_speed_m_s = this->_internal_speed_m_s();
  ::uint32_t raw_speed_m_s;
  memcpy(&raw_speed_m_s, &tmp_speed_m_s, sizeof(tmp_speed_m_s));
  if (raw_speed_m_s != 0) {
    total_size += 5;
  }

  // float tension_kg = 4;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_tension_kg = this->_internal_tension_kg();
  ::uint32_t raw_tension_kg;
  memcpy(&raw_tension_kg, &tmp_tension_kg, sizeof(tmp_tension_kg));
  if (raw_tension_kg != 0) {
    total_size += 5;
  }

  // float voltage_v = 5;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_voltage_v = this->_internal_voltage_v();
  ::uint32_t raw_voltage_v;
  memcpy(&raw_voltage_v, &tmp_voltage_v, sizeof(tmp_voltage_v));
  if (raw_voltage_v != 0) {
    total_size += 5;
  }

  // float current_a = 6;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_current_a = this->_internal_current_a();
  ::uint32_t raw_current_a;
  memcpy(&raw_current_a, &tmp_current_a, sizeof(tmp_current_a));
  if (raw_current_a != 0) {
    total_size += 5;
  }

  // int32 temperature_c = 7;
  if (this->_internal_temperature_c() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_temperature_c());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Status::_class_data_ = {
    Status::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Status::GetClassData() const {
  return &_class_data_;
}

void Status::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Status*>(&to_msg);
  auto& from = static_cast<const Status&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.winch.Status)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_status_flags()->::mavsdk::rpc::winch::StatusFlags::MergeFrom(
        from._internal_status_flags());
  }
  if (from._internal_time_usec() != 0) {
    _this->_internal_set_time_usec(from._internal_time_usec());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_line_length_m = from._internal_line_length_m();
  ::uint32_t raw_line_length_m;
  memcpy(&raw_line_length_m, &tmp_line_length_m, sizeof(tmp_line_length_m));
  if (raw_line_length_m != 0) {
    _this->_internal_set_line_length_m(from._internal_line_length_m());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_speed_m_s = from._internal_speed_m_s();
  ::uint32_t raw_speed_m_s;
  memcpy(&raw_speed_m_s, &tmp_speed_m_s, sizeof(tmp_speed_m_s));
  if (raw_speed_m_s != 0) {
    _this->_internal_set_speed_m_s(from._internal_speed_m_s());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_tension_kg = from._internal_tension_kg();
  ::uint32_t raw_tension_kg;
  memcpy(&raw_tension_kg, &tmp_tension_kg, sizeof(tmp_tension_kg));
  if (raw_tension_kg != 0) {
    _this->_internal_set_tension_kg(from._internal_tension_kg());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_voltage_v = from._internal_voltage_v();
  ::uint32_t raw_voltage_v;
  memcpy(&raw_voltage_v, &tmp_voltage_v, sizeof(tmp_voltage_v));
  if (raw_voltage_v != 0) {
    _this->_internal_set_voltage_v(from._internal_voltage_v());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_current_a = from._internal_current_a();
  ::uint32_t raw_current_a;
  memcpy(&raw_current_a, &tmp_current_a, sizeof(tmp_current_a));
  if (raw_current_a != 0) {
    _this->_internal_set_current_a(from._internal_current_a());
  }
  if (from._internal_temperature_c() != 0) {
    _this->_internal_set_temperature_c(from._internal_temperature_c());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Status::CopyFrom(const Status& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.winch.Status)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Status::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Status::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Status::InternalSwap(Status* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Status, _impl_.temperature_c_)
      + sizeof(Status::_impl_.temperature_c_)
      - PROTOBUF_FIELD_OFFSET(Status, _impl_.status_flags_)>(
          reinterpret_cast<char*>(&_impl_.status_flags_),
          reinterpret_cast<char*>(&other->_impl_.status_flags_));
}

::google::protobuf::Metadata Status::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_winch_2fwinch_2eproto_getter, &descriptor_table_winch_2fwinch_2eproto_once,
      file_level_metadata_winch_2fwinch_2eproto[3]);
}
// ===================================================================

class RelaxRequest::_Internal {
 public:
};

RelaxRequest::RelaxRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.winch.RelaxRequest)
}
RelaxRequest::RelaxRequest(
    ::google::protobuf::Arena* arena, const RelaxRequest& from)
    : RelaxRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE RelaxRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void RelaxRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.instance_ = {};
}
RelaxRequest::~RelaxRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.winch.RelaxRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RelaxRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void RelaxRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.winch.RelaxRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.instance_ = 0u;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RelaxRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> RelaxRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_RelaxRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // uint32 instance = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RelaxRequest, _impl_.instance_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(RelaxRequest, _impl_.instance_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 instance = 1;
    {PROTOBUF_FIELD_OFFSET(RelaxRequest, _impl_.instance_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* RelaxRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.winch.RelaxRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 instance = 1;
  if (this->_internal_instance() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_instance(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.winch.RelaxRequest)
  return target;
}

::size_t RelaxRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.winch.RelaxRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 instance = 1;
  if (this->_internal_instance() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_instance());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData RelaxRequest::_class_data_ = {
    RelaxRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* RelaxRequest::GetClassData() const {
  return &_class_data_;
}

void RelaxRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<RelaxRequest*>(&to_msg);
  auto& from = static_cast<const RelaxRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.winch.RelaxRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_instance() != 0) {
    _this->_internal_set_instance(from._internal_instance());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RelaxRequest::CopyFrom(const RelaxRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.winch.RelaxRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RelaxRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* RelaxRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void RelaxRequest::InternalSwap(RelaxRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.instance_, other->_impl_.instance_);
}

::google::protobuf::Metadata RelaxRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_winch_2fwinch_2eproto_getter, &descriptor_table_winch_2fwinch_2eproto_once,
      file_level_metadata_winch_2fwinch_2eproto[4]);
}
// ===================================================================

class RelaxResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<RelaxResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(RelaxResponse, _impl_._has_bits_);
  static const ::mavsdk::rpc::winch::WinchResult& winch_result(const RelaxResponse* msg);
  static void set_has_winch_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::winch::WinchResult& RelaxResponse::_Internal::winch_result(const RelaxResponse* msg) {
  return *msg->_impl_.winch_result_;
}
RelaxResponse::RelaxResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.winch.RelaxResponse)
}
inline PROTOBUF_NDEBUG_INLINE RelaxResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

RelaxResponse::RelaxResponse(
    ::google::protobuf::Arena* arena,
    const RelaxResponse& from)
    : ::google::protobuf::Message(arena) {
  RelaxResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.winch_result_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::winch::WinchResult>(arena, *from._impl_.winch_result_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.winch.RelaxResponse)
}
inline PROTOBUF_NDEBUG_INLINE RelaxResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void RelaxResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.winch_result_ = {};
}
RelaxResponse::~RelaxResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.winch.RelaxResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RelaxResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.winch_result_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void RelaxResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.winch.RelaxResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.winch_result_ != nullptr);
    _impl_.winch_result_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RelaxResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> RelaxResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RelaxResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_RelaxResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.winch.WinchResult winch_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RelaxResponse, _impl_.winch_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.winch.WinchResult winch_result = 1;
    {PROTOBUF_FIELD_OFFSET(RelaxResponse, _impl_.winch_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::winch::WinchResult>()},
  }}, {{
  }},
};

::uint8_t* RelaxResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.winch.RelaxResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.winch.WinchResult winch_result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::winch_result(this),
        _Internal::winch_result(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.winch.RelaxResponse)
  return target;
}

::size_t RelaxResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.winch.RelaxResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.winch.WinchResult winch_result = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.winch_result_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData RelaxResponse::_class_data_ = {
    RelaxResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* RelaxResponse::GetClassData() const {
  return &_class_data_;
}

void RelaxResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<RelaxResponse*>(&to_msg);
  auto& from = static_cast<const RelaxResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.winch.RelaxResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_winch_result()->::mavsdk::rpc::winch::WinchResult::MergeFrom(
        from._internal_winch_result());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RelaxResponse::CopyFrom(const RelaxResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.winch.RelaxResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RelaxResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* RelaxResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void RelaxResponse::InternalSwap(RelaxResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.winch_result_, other->_impl_.winch_result_);
}

::google::protobuf::Metadata RelaxResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_winch_2fwinch_2eproto_getter, &descriptor_table_winch_2fwinch_2eproto_once,
      file_level_metadata_winch_2fwinch_2eproto[5]);
}
// ===================================================================

class RelativeLengthControlRequest::_Internal {
 public:
};

RelativeLengthControlRequest::RelativeLengthControlRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.winch.RelativeLengthControlRequest)
}
RelativeLengthControlRequest::RelativeLengthControlRequest(
    ::google::protobuf::Arena* arena, const RelativeLengthControlRequest& from)
    : RelativeLengthControlRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE RelativeLengthControlRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void RelativeLengthControlRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, instance_),
           0,
           offsetof(Impl_, rate_m_s_) -
               offsetof(Impl_, instance_) +
               sizeof(Impl_::rate_m_s_));
}
RelativeLengthControlRequest::~RelativeLengthControlRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.winch.RelativeLengthControlRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RelativeLengthControlRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void RelativeLengthControlRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.winch.RelativeLengthControlRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.instance_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.rate_m_s_) -
      reinterpret_cast<char*>(&_impl_.instance_)) + sizeof(_impl_.rate_m_s_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RelativeLengthControlRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> RelativeLengthControlRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_RelativeLengthControlRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 instance = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RelativeLengthControlRequest, _impl_.instance_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(RelativeLengthControlRequest, _impl_.instance_)}},
    // float length_m = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 63, 0, PROTOBUF_FIELD_OFFSET(RelativeLengthControlRequest, _impl_.length_m_)}},
    // float rate_m_s = 3 [(.mavsdk.options.default_value) = "NaN"];
    {::_pbi::TcParser::FastF32S1,
     {29, 63, 0, PROTOBUF_FIELD_OFFSET(RelativeLengthControlRequest, _impl_.rate_m_s_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 instance = 1;
    {PROTOBUF_FIELD_OFFSET(RelativeLengthControlRequest, _impl_.instance_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // float length_m = 2;
    {PROTOBUF_FIELD_OFFSET(RelativeLengthControlRequest, _impl_.length_m_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float rate_m_s = 3 [(.mavsdk.options.default_value) = "NaN"];
    {PROTOBUF_FIELD_OFFSET(RelativeLengthControlRequest, _impl_.rate_m_s_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* RelativeLengthControlRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.winch.RelativeLengthControlRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 instance = 1;
  if (this->_internal_instance() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_instance(), target);
  }

  // float length_m = 2;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_length_m = this->_internal_length_m();
  ::uint32_t raw_length_m;
  memcpy(&raw_length_m, &tmp_length_m, sizeof(tmp_length_m));
  if (raw_length_m != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        2, this->_internal_length_m(), target);
  }

  // float rate_m_s = 3 [(.mavsdk.options.default_value) = "NaN"];
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_rate_m_s = this->_internal_rate_m_s();
  ::uint32_t raw_rate_m_s;
  memcpy(&raw_rate_m_s, &tmp_rate_m_s, sizeof(tmp_rate_m_s));
  if (raw_rate_m_s != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        3, this->_internal_rate_m_s(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.winch.RelativeLengthControlRequest)
  return target;
}

::size_t RelativeLengthControlRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.winch.RelativeLengthControlRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 instance = 1;
  if (this->_internal_instance() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_instance());
  }

  // float length_m = 2;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_length_m = this->_internal_length_m();
  ::uint32_t raw_length_m;
  memcpy(&raw_length_m, &tmp_length_m, sizeof(tmp_length_m));
  if (raw_length_m != 0) {
    total_size += 5;
  }

  // float rate_m_s = 3 [(.mavsdk.options.default_value) = "NaN"];
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_rate_m_s = this->_internal_rate_m_s();
  ::uint32_t raw_rate_m_s;
  memcpy(&raw_rate_m_s, &tmp_rate_m_s, sizeof(tmp_rate_m_s));
  if (raw_rate_m_s != 0) {
    total_size += 5;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData RelativeLengthControlRequest::_class_data_ = {
    RelativeLengthControlRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* RelativeLengthControlRequest::GetClassData() const {
  return &_class_data_;
}

void RelativeLengthControlRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<RelativeLengthControlRequest*>(&to_msg);
  auto& from = static_cast<const RelativeLengthControlRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.winch.RelativeLengthControlRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_instance() != 0) {
    _this->_internal_set_instance(from._internal_instance());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_length_m = from._internal_length_m();
  ::uint32_t raw_length_m;
  memcpy(&raw_length_m, &tmp_length_m, sizeof(tmp_length_m));
  if (raw_length_m != 0) {
    _this->_internal_set_length_m(from._internal_length_m());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_rate_m_s = from._internal_rate_m_s();
  ::uint32_t raw_rate_m_s;
  memcpy(&raw_rate_m_s, &tmp_rate_m_s, sizeof(tmp_rate_m_s));
  if (raw_rate_m_s != 0) {
    _this->_internal_set_rate_m_s(from._internal_rate_m_s());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RelativeLengthControlRequest::CopyFrom(const RelativeLengthControlRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.winch.RelativeLengthControlRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RelativeLengthControlRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* RelativeLengthControlRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void RelativeLengthControlRequest::InternalSwap(RelativeLengthControlRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RelativeLengthControlRequest, _impl_.rate_m_s_)
      + sizeof(RelativeLengthControlRequest::_impl_.rate_m_s_)
      - PROTOBUF_FIELD_OFFSET(RelativeLengthControlRequest, _impl_.instance_)>(
          reinterpret_cast<char*>(&_impl_.instance_),
          reinterpret_cast<char*>(&other->_impl_.instance_));
}

::google::protobuf::Metadata RelativeLengthControlRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_winch_2fwinch_2eproto_getter, &descriptor_table_winch_2fwinch_2eproto_once,
      file_level_metadata_winch_2fwinch_2eproto[6]);
}
// ===================================================================

class RelativeLengthControlResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<RelativeLengthControlResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(RelativeLengthControlResponse, _impl_._has_bits_);
  static const ::mavsdk::rpc::winch::WinchResult& winch_result(const RelativeLengthControlResponse* msg);
  static void set_has_winch_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::winch::WinchResult& RelativeLengthControlResponse::_Internal::winch_result(const RelativeLengthControlResponse* msg) {
  return *msg->_impl_.winch_result_;
}
RelativeLengthControlResponse::RelativeLengthControlResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.winch.RelativeLengthControlResponse)
}
inline PROTOBUF_NDEBUG_INLINE RelativeLengthControlResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

RelativeLengthControlResponse::RelativeLengthControlResponse(
    ::google::protobuf::Arena* arena,
    const RelativeLengthControlResponse& from)
    : ::google::protobuf::Message(arena) {
  RelativeLengthControlResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.winch_result_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::winch::WinchResult>(arena, *from._impl_.winch_result_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.winch.RelativeLengthControlResponse)
}
inline PROTOBUF_NDEBUG_INLINE RelativeLengthControlResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void RelativeLengthControlResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.winch_result_ = {};
}
RelativeLengthControlResponse::~RelativeLengthControlResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.winch.RelativeLengthControlResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RelativeLengthControlResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.winch_result_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void RelativeLengthControlResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.winch.RelativeLengthControlResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.winch_result_ != nullptr);
    _impl_.winch_result_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RelativeLengthControlResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> RelativeLengthControlResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RelativeLengthControlResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_RelativeLengthControlResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.winch.WinchResult winch_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RelativeLengthControlResponse, _impl_.winch_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.winch.WinchResult winch_result = 1;
    {PROTOBUF_FIELD_OFFSET(RelativeLengthControlResponse, _impl_.winch_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::winch::WinchResult>()},
  }}, {{
  }},
};

::uint8_t* RelativeLengthControlResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.winch.RelativeLengthControlResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.winch.WinchResult winch_result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::winch_result(this),
        _Internal::winch_result(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.winch.RelativeLengthControlResponse)
  return target;
}

::size_t RelativeLengthControlResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.winch.RelativeLengthControlResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.winch.WinchResult winch_result = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.winch_result_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData RelativeLengthControlResponse::_class_data_ = {
    RelativeLengthControlResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* RelativeLengthControlResponse::GetClassData() const {
  return &_class_data_;
}

void RelativeLengthControlResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<RelativeLengthControlResponse*>(&to_msg);
  auto& from = static_cast<const RelativeLengthControlResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.winch.RelativeLengthControlResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_winch_result()->::mavsdk::rpc::winch::WinchResult::MergeFrom(
        from._internal_winch_result());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RelativeLengthControlResponse::CopyFrom(const RelativeLengthControlResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.winch.RelativeLengthControlResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RelativeLengthControlResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* RelativeLengthControlResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void RelativeLengthControlResponse::InternalSwap(RelativeLengthControlResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.winch_result_, other->_impl_.winch_result_);
}

::google::protobuf::Metadata RelativeLengthControlResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_winch_2fwinch_2eproto_getter, &descriptor_table_winch_2fwinch_2eproto_once,
      file_level_metadata_winch_2fwinch_2eproto[7]);
}
// ===================================================================

class RateControlRequest::_Internal {
 public:
};

RateControlRequest::RateControlRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.winch.RateControlRequest)
}
RateControlRequest::RateControlRequest(
    ::google::protobuf::Arena* arena, const RateControlRequest& from)
    : RateControlRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE RateControlRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void RateControlRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, instance_),
           0,
           offsetof(Impl_, rate_m_s_) -
               offsetof(Impl_, instance_) +
               sizeof(Impl_::rate_m_s_));
}
RateControlRequest::~RateControlRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.winch.RateControlRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RateControlRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void RateControlRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.winch.RateControlRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.instance_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.rate_m_s_) -
      reinterpret_cast<char*>(&_impl_.instance_)) + sizeof(_impl_.rate_m_s_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RateControlRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> RateControlRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_RateControlRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // float rate_m_s = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 63, 0, PROTOBUF_FIELD_OFFSET(RateControlRequest, _impl_.rate_m_s_)}},
    // uint32 instance = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RateControlRequest, _impl_.instance_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(RateControlRequest, _impl_.instance_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 instance = 1;
    {PROTOBUF_FIELD_OFFSET(RateControlRequest, _impl_.instance_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // float rate_m_s = 2;
    {PROTOBUF_FIELD_OFFSET(RateControlRequest, _impl_.rate_m_s_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* RateControlRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.winch.RateControlRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 instance = 1;
  if (this->_internal_instance() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_instance(), target);
  }

  // float rate_m_s = 2;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_rate_m_s = this->_internal_rate_m_s();
  ::uint32_t raw_rate_m_s;
  memcpy(&raw_rate_m_s, &tmp_rate_m_s, sizeof(tmp_rate_m_s));
  if (raw_rate_m_s != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        2, this->_internal_rate_m_s(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.winch.RateControlRequest)
  return target;
}

::size_t RateControlRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.winch.RateControlRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 instance = 1;
  if (this->_internal_instance() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_instance());
  }

  // float rate_m_s = 2;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_rate_m_s = this->_internal_rate_m_s();
  ::uint32_t raw_rate_m_s;
  memcpy(&raw_rate_m_s, &tmp_rate_m_s, sizeof(tmp_rate_m_s));
  if (raw_rate_m_s != 0) {
    total_size += 5;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData RateControlRequest::_class_data_ = {
    RateControlRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* RateControlRequest::GetClassData() const {
  return &_class_data_;
}

void RateControlRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<RateControlRequest*>(&to_msg);
  auto& from = static_cast<const RateControlRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.winch.RateControlRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_instance() != 0) {
    _this->_internal_set_instance(from._internal_instance());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_rate_m_s = from._internal_rate_m_s();
  ::uint32_t raw_rate_m_s;
  memcpy(&raw_rate_m_s, &tmp_rate_m_s, sizeof(tmp_rate_m_s));
  if (raw_rate_m_s != 0) {
    _this->_internal_set_rate_m_s(from._internal_rate_m_s());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RateControlRequest::CopyFrom(const RateControlRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.winch.RateControlRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RateControlRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* RateControlRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void RateControlRequest::InternalSwap(RateControlRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RateControlRequest, _impl_.rate_m_s_)
      + sizeof(RateControlRequest::_impl_.rate_m_s_)
      - PROTOBUF_FIELD_OFFSET(RateControlRequest, _impl_.instance_)>(
          reinterpret_cast<char*>(&_impl_.instance_),
          reinterpret_cast<char*>(&other->_impl_.instance_));
}

::google::protobuf::Metadata RateControlRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_winch_2fwinch_2eproto_getter, &descriptor_table_winch_2fwinch_2eproto_once,
      file_level_metadata_winch_2fwinch_2eproto[8]);
}
// ===================================================================

class RateControlResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<RateControlResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(RateControlResponse, _impl_._has_bits_);
  static const ::mavsdk::rpc::winch::WinchResult& winch_result(const RateControlResponse* msg);
  static void set_has_winch_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::winch::WinchResult& RateControlResponse::_Internal::winch_result(const RateControlResponse* msg) {
  return *msg->_impl_.winch_result_;
}
RateControlResponse::RateControlResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.winch.RateControlResponse)
}
inline PROTOBUF_NDEBUG_INLINE RateControlResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

RateControlResponse::RateControlResponse(
    ::google::protobuf::Arena* arena,
    const RateControlResponse& from)
    : ::google::protobuf::Message(arena) {
  RateControlResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.winch_result_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::winch::WinchResult>(arena, *from._impl_.winch_result_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.winch.RateControlResponse)
}
inline PROTOBUF_NDEBUG_INLINE RateControlResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void RateControlResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.winch_result_ = {};
}
RateControlResponse::~RateControlResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.winch.RateControlResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RateControlResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.winch_result_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void RateControlResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.winch.RateControlResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.winch_result_ != nullptr);
    _impl_.winch_result_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RateControlResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> RateControlResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RateControlResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_RateControlResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.winch.WinchResult winch_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RateControlResponse, _impl_.winch_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.winch.WinchResult winch_result = 1;
    {PROTOBUF_FIELD_OFFSET(RateControlResponse, _impl_.winch_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::winch::WinchResult>()},
  }}, {{
  }},
};

::uint8_t* RateControlResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.winch.RateControlResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.winch.WinchResult winch_result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::winch_result(this),
        _Internal::winch_result(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.winch.RateControlResponse)
  return target;
}

::size_t RateControlResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.winch.RateControlResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.winch.WinchResult winch_result = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.winch_result_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData RateControlResponse::_class_data_ = {
    RateControlResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* RateControlResponse::GetClassData() const {
  return &_class_data_;
}

void RateControlResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<RateControlResponse*>(&to_msg);
  auto& from = static_cast<const RateControlResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.winch.RateControlResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_winch_result()->::mavsdk::rpc::winch::WinchResult::MergeFrom(
        from._internal_winch_result());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RateControlResponse::CopyFrom(const RateControlResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.winch.RateControlResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RateControlResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* RateControlResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void RateControlResponse::InternalSwap(RateControlResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.winch_result_, other->_impl_.winch_result_);
}

::google::protobuf::Metadata RateControlResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_winch_2fwinch_2eproto_getter, &descriptor_table_winch_2fwinch_2eproto_once,
      file_level_metadata_winch_2fwinch_2eproto[9]);
}
// ===================================================================

class LockRequest::_Internal {
 public:
};

LockRequest::LockRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.winch.LockRequest)
}
LockRequest::LockRequest(
    ::google::protobuf::Arena* arena, const LockRequest& from)
    : LockRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE LockRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void LockRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.instance_ = {};
}
LockRequest::~LockRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.winch.LockRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void LockRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void LockRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.winch.LockRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.instance_ = 0u;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* LockRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> LockRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_LockRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // uint32 instance = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(LockRequest, _impl_.instance_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(LockRequest, _impl_.instance_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 instance = 1;
    {PROTOBUF_FIELD_OFFSET(LockRequest, _impl_.instance_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* LockRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.winch.LockRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 instance = 1;
  if (this->_internal_instance() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_instance(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.winch.LockRequest)
  return target;
}

::size_t LockRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.winch.LockRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 instance = 1;
  if (this->_internal_instance() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_instance());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData LockRequest::_class_data_ = {
    LockRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* LockRequest::GetClassData() const {
  return &_class_data_;
}

void LockRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<LockRequest*>(&to_msg);
  auto& from = static_cast<const LockRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.winch.LockRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_instance() != 0) {
    _this->_internal_set_instance(from._internal_instance());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void LockRequest::CopyFrom(const LockRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.winch.LockRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool LockRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* LockRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void LockRequest::InternalSwap(LockRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.instance_, other->_impl_.instance_);
}

::google::protobuf::Metadata LockRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_winch_2fwinch_2eproto_getter, &descriptor_table_winch_2fwinch_2eproto_once,
      file_level_metadata_winch_2fwinch_2eproto[10]);
}
// ===================================================================

class LockResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<LockResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(LockResponse, _impl_._has_bits_);
  static const ::mavsdk::rpc::winch::WinchResult& winch_result(const LockResponse* msg);
  static void set_has_winch_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::winch::WinchResult& LockResponse::_Internal::winch_result(const LockResponse* msg) {
  return *msg->_impl_.winch_result_;
}
LockResponse::LockResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.winch.LockResponse)
}
inline PROTOBUF_NDEBUG_INLINE LockResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

LockResponse::LockResponse(
    ::google::protobuf::Arena* arena,
    const LockResponse& from)
    : ::google::protobuf::Message(arena) {
  LockResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.winch_result_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::winch::WinchResult>(arena, *from._impl_.winch_result_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.winch.LockResponse)
}
inline PROTOBUF_NDEBUG_INLINE LockResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void LockResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.winch_result_ = {};
}
LockResponse::~LockResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.winch.LockResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void LockResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.winch_result_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void LockResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.winch.LockResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.winch_result_ != nullptr);
    _impl_.winch_result_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* LockResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> LockResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(LockResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_LockResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.winch.WinchResult winch_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(LockResponse, _impl_.winch_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.winch.WinchResult winch_result = 1;
    {PROTOBUF_FIELD_OFFSET(LockResponse, _impl_.winch_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::winch::WinchResult>()},
  }}, {{
  }},
};

::uint8_t* LockResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.winch.LockResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.winch.WinchResult winch_result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::winch_result(this),
        _Internal::winch_result(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.winch.LockResponse)
  return target;
}

::size_t LockResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.winch.LockResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.winch.WinchResult winch_result = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.winch_result_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData LockResponse::_class_data_ = {
    LockResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* LockResponse::GetClassData() const {
  return &_class_data_;
}

void LockResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<LockResponse*>(&to_msg);
  auto& from = static_cast<const LockResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.winch.LockResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_winch_result()->::mavsdk::rpc::winch::WinchResult::MergeFrom(
        from._internal_winch_result());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void LockResponse::CopyFrom(const LockResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.winch.LockResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool LockResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* LockResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void LockResponse::InternalSwap(LockResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.winch_result_, other->_impl_.winch_result_);
}

::google::protobuf::Metadata LockResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_winch_2fwinch_2eproto_getter, &descriptor_table_winch_2fwinch_2eproto_once,
      file_level_metadata_winch_2fwinch_2eproto[11]);
}
// ===================================================================

class DeliverRequest::_Internal {
 public:
};

DeliverRequest::DeliverRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.winch.DeliverRequest)
}
DeliverRequest::DeliverRequest(
    ::google::protobuf::Arena* arena, const DeliverRequest& from)
    : DeliverRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE DeliverRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void DeliverRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.instance_ = {};
}
DeliverRequest::~DeliverRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.winch.DeliverRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void DeliverRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void DeliverRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.winch.DeliverRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.instance_ = 0u;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* DeliverRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> DeliverRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_DeliverRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // uint32 instance = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(DeliverRequest, _impl_.instance_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(DeliverRequest, _impl_.instance_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 instance = 1;
    {PROTOBUF_FIELD_OFFSET(DeliverRequest, _impl_.instance_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* DeliverRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.winch.DeliverRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 instance = 1;
  if (this->_internal_instance() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_instance(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.winch.DeliverRequest)
  return target;
}

::size_t DeliverRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.winch.DeliverRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 instance = 1;
  if (this->_internal_instance() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_instance());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData DeliverRequest::_class_data_ = {
    DeliverRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* DeliverRequest::GetClassData() const {
  return &_class_data_;
}

void DeliverRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<DeliverRequest*>(&to_msg);
  auto& from = static_cast<const DeliverRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.winch.DeliverRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_instance() != 0) {
    _this->_internal_set_instance(from._internal_instance());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DeliverRequest::CopyFrom(const DeliverRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.winch.DeliverRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool DeliverRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* DeliverRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void DeliverRequest::InternalSwap(DeliverRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.instance_, other->_impl_.instance_);
}

::google::protobuf::Metadata DeliverRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_winch_2fwinch_2eproto_getter, &descriptor_table_winch_2fwinch_2eproto_once,
      file_level_metadata_winch_2fwinch_2eproto[12]);
}
// ===================================================================

class DeliverResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<DeliverResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(DeliverResponse, _impl_._has_bits_);
  static const ::mavsdk::rpc::winch::WinchResult& winch_result(const DeliverResponse* msg);
  static void set_has_winch_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::winch::WinchResult& DeliverResponse::_Internal::winch_result(const DeliverResponse* msg) {
  return *msg->_impl_.winch_result_;
}
DeliverResponse::DeliverResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.winch.DeliverResponse)
}
inline PROTOBUF_NDEBUG_INLINE DeliverResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

DeliverResponse::DeliverResponse(
    ::google::protobuf::Arena* arena,
    const DeliverResponse& from)
    : ::google::protobuf::Message(arena) {
  DeliverResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.winch_result_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::winch::WinchResult>(arena, *from._impl_.winch_result_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.winch.DeliverResponse)
}
inline PROTOBUF_NDEBUG_INLINE DeliverResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void DeliverResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.winch_result_ = {};
}
DeliverResponse::~DeliverResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.winch.DeliverResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void DeliverResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.winch_result_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void DeliverResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.winch.DeliverResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.winch_result_ != nullptr);
    _impl_.winch_result_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* DeliverResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> DeliverResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(DeliverResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_DeliverResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.winch.WinchResult winch_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(DeliverResponse, _impl_.winch_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.winch.WinchResult winch_result = 1;
    {PROTOBUF_FIELD_OFFSET(DeliverResponse, _impl_.winch_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::winch::WinchResult>()},
  }}, {{
  }},
};

::uint8_t* DeliverResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.winch.DeliverResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.winch.WinchResult winch_result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::winch_result(this),
        _Internal::winch_result(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.winch.DeliverResponse)
  return target;
}

::size_t DeliverResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.winch.DeliverResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.winch.WinchResult winch_result = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.winch_result_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData DeliverResponse::_class_data_ = {
    DeliverResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* DeliverResponse::GetClassData() const {
  return &_class_data_;
}

void DeliverResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<DeliverResponse*>(&to_msg);
  auto& from = static_cast<const DeliverResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.winch.DeliverResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_winch_result()->::mavsdk::rpc::winch::WinchResult::MergeFrom(
        from._internal_winch_result());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DeliverResponse::CopyFrom(const DeliverResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.winch.DeliverResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool DeliverResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* DeliverResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void DeliverResponse::InternalSwap(DeliverResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.winch_result_, other->_impl_.winch_result_);
}

::google::protobuf::Metadata DeliverResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_winch_2fwinch_2eproto_getter, &descriptor_table_winch_2fwinch_2eproto_once,
      file_level_metadata_winch_2fwinch_2eproto[13]);
}
// ===================================================================

class HoldRequest::_Internal {
 public:
};

HoldRequest::HoldRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.winch.HoldRequest)
}
HoldRequest::HoldRequest(
    ::google::protobuf::Arena* arena, const HoldRequest& from)
    : HoldRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE HoldRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void HoldRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.instance_ = {};
}
HoldRequest::~HoldRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.winch.HoldRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void HoldRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void HoldRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.winch.HoldRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.instance_ = 0u;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* HoldRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> HoldRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_HoldRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // uint32 instance = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(HoldRequest, _impl_.instance_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(HoldRequest, _impl_.instance_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 instance = 1;
    {PROTOBUF_FIELD_OFFSET(HoldRequest, _impl_.instance_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* HoldRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.winch.HoldRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 instance = 1;
  if (this->_internal_instance() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_instance(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.winch.HoldRequest)
  return target;
}

::size_t HoldRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.winch.HoldRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 instance = 1;
  if (this->_internal_instance() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_instance());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData HoldRequest::_class_data_ = {
    HoldRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* HoldRequest::GetClassData() const {
  return &_class_data_;
}

void HoldRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<HoldRequest*>(&to_msg);
  auto& from = static_cast<const HoldRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.winch.HoldRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_instance() != 0) {
    _this->_internal_set_instance(from._internal_instance());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void HoldRequest::CopyFrom(const HoldRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.winch.HoldRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool HoldRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* HoldRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void HoldRequest::InternalSwap(HoldRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.instance_, other->_impl_.instance_);
}

::google::protobuf::Metadata HoldRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_winch_2fwinch_2eproto_getter, &descriptor_table_winch_2fwinch_2eproto_once,
      file_level_metadata_winch_2fwinch_2eproto[14]);
}
// ===================================================================

class HoldResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<HoldResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(HoldResponse, _impl_._has_bits_);
  static const ::mavsdk::rpc::winch::WinchResult& winch_result(const HoldResponse* msg);
  static void set_has_winch_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::winch::WinchResult& HoldResponse::_Internal::winch_result(const HoldResponse* msg) {
  return *msg->_impl_.winch_result_;
}
HoldResponse::HoldResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.winch.HoldResponse)
}
inline PROTOBUF_NDEBUG_INLINE HoldResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

HoldResponse::HoldResponse(
    ::google::protobuf::Arena* arena,
    const HoldResponse& from)
    : ::google::protobuf::Message(arena) {
  HoldResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.winch_result_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::winch::WinchResult>(arena, *from._impl_.winch_result_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.winch.HoldResponse)
}
inline PROTOBUF_NDEBUG_INLINE HoldResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void HoldResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.winch_result_ = {};
}
HoldResponse::~HoldResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.winch.HoldResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void HoldResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.winch_result_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void HoldResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.winch.HoldResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.winch_result_ != nullptr);
    _impl_.winch_result_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* HoldResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> HoldResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(HoldResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_HoldResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.winch.WinchResult winch_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(HoldResponse, _impl_.winch_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.winch.WinchResult winch_result = 1;
    {PROTOBUF_FIELD_OFFSET(HoldResponse, _impl_.winch_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::winch::WinchResult>()},
  }}, {{
  }},
};

::uint8_t* HoldResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.winch.HoldResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.winch.WinchResult winch_result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::winch_result(this),
        _Internal::winch_result(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.winch.HoldResponse)
  return target;
}

::size_t HoldResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.winch.HoldResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.winch.WinchResult winch_result = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.winch_result_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData HoldResponse::_class_data_ = {
    HoldResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* HoldResponse::GetClassData() const {
  return &_class_data_;
}

void HoldResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<HoldResponse*>(&to_msg);
  auto& from = static_cast<const HoldResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.winch.HoldResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_winch_result()->::mavsdk::rpc::winch::WinchResult::MergeFrom(
        from._internal_winch_result());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void HoldResponse::CopyFrom(const HoldResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.winch.HoldResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool HoldResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* HoldResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void HoldResponse::InternalSwap(HoldResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.winch_result_, other->_impl_.winch_result_);
}

::google::protobuf::Metadata HoldResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_winch_2fwinch_2eproto_getter, &descriptor_table_winch_2fwinch_2eproto_once,
      file_level_metadata_winch_2fwinch_2eproto[15]);
}
// ===================================================================

class RetractRequest::_Internal {
 public:
};

RetractRequest::RetractRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.winch.RetractRequest)
}
RetractRequest::RetractRequest(
    ::google::protobuf::Arena* arena, const RetractRequest& from)
    : RetractRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE RetractRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void RetractRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.instance_ = {};
}
RetractRequest::~RetractRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.winch.RetractRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RetractRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void RetractRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.winch.RetractRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.instance_ = 0u;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RetractRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> RetractRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_RetractRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // uint32 instance = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RetractRequest, _impl_.instance_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(RetractRequest, _impl_.instance_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 instance = 1;
    {PROTOBUF_FIELD_OFFSET(RetractRequest, _impl_.instance_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* RetractRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.winch.RetractRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 instance = 1;
  if (this->_internal_instance() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_instance(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.winch.RetractRequest)
  return target;
}

::size_t RetractRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.winch.RetractRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 instance = 1;
  if (this->_internal_instance() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_instance());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData RetractRequest::_class_data_ = {
    RetractRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* RetractRequest::GetClassData() const {
  return &_class_data_;
}

void RetractRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<RetractRequest*>(&to_msg);
  auto& from = static_cast<const RetractRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.winch.RetractRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_instance() != 0) {
    _this->_internal_set_instance(from._internal_instance());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RetractRequest::CopyFrom(const RetractRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.winch.RetractRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RetractRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* RetractRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void RetractRequest::InternalSwap(RetractRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.instance_, other->_impl_.instance_);
}

::google::protobuf::Metadata RetractRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_winch_2fwinch_2eproto_getter, &descriptor_table_winch_2fwinch_2eproto_once,
      file_level_metadata_winch_2fwinch_2eproto[16]);
}
// ===================================================================

class RetractResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<RetractResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(RetractResponse, _impl_._has_bits_);
  static const ::mavsdk::rpc::winch::WinchResult& winch_result(const RetractResponse* msg);
  static void set_has_winch_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::winch::WinchResult& RetractResponse::_Internal::winch_result(const RetractResponse* msg) {
  return *msg->_impl_.winch_result_;
}
RetractResponse::RetractResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.winch.RetractResponse)
}
inline PROTOBUF_NDEBUG_INLINE RetractResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

RetractResponse::RetractResponse(
    ::google::protobuf::Arena* arena,
    const RetractResponse& from)
    : ::google::protobuf::Message(arena) {
  RetractResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.winch_result_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::winch::WinchResult>(arena, *from._impl_.winch_result_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.winch.RetractResponse)
}
inline PROTOBUF_NDEBUG_INLINE RetractResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void RetractResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.winch_result_ = {};
}
RetractResponse::~RetractResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.winch.RetractResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RetractResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.winch_result_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void RetractResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.winch.RetractResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.winch_result_ != nullptr);
    _impl_.winch_result_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RetractResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> RetractResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RetractResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_RetractResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.winch.WinchResult winch_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RetractResponse, _impl_.winch_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.winch.WinchResult winch_result = 1;
    {PROTOBUF_FIELD_OFFSET(RetractResponse, _impl_.winch_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::winch::WinchResult>()},
  }}, {{
  }},
};

::uint8_t* RetractResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.winch.RetractResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.winch.WinchResult winch_result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::winch_result(this),
        _Internal::winch_result(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.winch.RetractResponse)
  return target;
}

::size_t RetractResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.winch.RetractResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.winch.WinchResult winch_result = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.winch_result_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData RetractResponse::_class_data_ = {
    RetractResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* RetractResponse::GetClassData() const {
  return &_class_data_;
}

void RetractResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<RetractResponse*>(&to_msg);
  auto& from = static_cast<const RetractResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.winch.RetractResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_winch_result()->::mavsdk::rpc::winch::WinchResult::MergeFrom(
        from._internal_winch_result());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RetractResponse::CopyFrom(const RetractResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.winch.RetractResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RetractResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* RetractResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void RetractResponse::InternalSwap(RetractResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.winch_result_, other->_impl_.winch_result_);
}

::google::protobuf::Metadata RetractResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_winch_2fwinch_2eproto_getter, &descriptor_table_winch_2fwinch_2eproto_once,
      file_level_metadata_winch_2fwinch_2eproto[17]);
}
// ===================================================================

class LoadLineRequest::_Internal {
 public:
};

LoadLineRequest::LoadLineRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.winch.LoadLineRequest)
}
LoadLineRequest::LoadLineRequest(
    ::google::protobuf::Arena* arena, const LoadLineRequest& from)
    : LoadLineRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE LoadLineRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void LoadLineRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.instance_ = {};
}
LoadLineRequest::~LoadLineRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.winch.LoadLineRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void LoadLineRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void LoadLineRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.winch.LoadLineRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.instance_ = 0u;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* LoadLineRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> LoadLineRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_LoadLineRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // uint32 instance = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(LoadLineRequest, _impl_.instance_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(LoadLineRequest, _impl_.instance_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 instance = 1;
    {PROTOBUF_FIELD_OFFSET(LoadLineRequest, _impl_.instance_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* LoadLineRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.winch.LoadLineRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 instance = 1;
  if (this->_internal_instance() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_instance(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.winch.LoadLineRequest)
  return target;
}

::size_t LoadLineRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.winch.LoadLineRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 instance = 1;
  if (this->_internal_instance() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_instance());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData LoadLineRequest::_class_data_ = {
    LoadLineRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* LoadLineRequest::GetClassData() const {
  return &_class_data_;
}

void LoadLineRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<LoadLineRequest*>(&to_msg);
  auto& from = static_cast<const LoadLineRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.winch.LoadLineRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_instance() != 0) {
    _this->_internal_set_instance(from._internal_instance());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void LoadLineRequest::CopyFrom(const LoadLineRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.winch.LoadLineRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool LoadLineRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* LoadLineRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void LoadLineRequest::InternalSwap(LoadLineRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.instance_, other->_impl_.instance_);
}

::google::protobuf::Metadata LoadLineRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_winch_2fwinch_2eproto_getter, &descriptor_table_winch_2fwinch_2eproto_once,
      file_level_metadata_winch_2fwinch_2eproto[18]);
}
// ===================================================================

class LoadLineResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<LoadLineResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(LoadLineResponse, _impl_._has_bits_);
  static const ::mavsdk::rpc::winch::WinchResult& winch_result(const LoadLineResponse* msg);
  static void set_has_winch_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::winch::WinchResult& LoadLineResponse::_Internal::winch_result(const LoadLineResponse* msg) {
  return *msg->_impl_.winch_result_;
}
LoadLineResponse::LoadLineResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.winch.LoadLineResponse)
}
inline PROTOBUF_NDEBUG_INLINE LoadLineResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

LoadLineResponse::LoadLineResponse(
    ::google::protobuf::Arena* arena,
    const LoadLineResponse& from)
    : ::google::protobuf::Message(arena) {
  LoadLineResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.winch_result_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::winch::WinchResult>(arena, *from._impl_.winch_result_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.winch.LoadLineResponse)
}
inline PROTOBUF_NDEBUG_INLINE LoadLineResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void LoadLineResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.winch_result_ = {};
}
LoadLineResponse::~LoadLineResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.winch.LoadLineResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void LoadLineResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.winch_result_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void LoadLineResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.winch.LoadLineResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.winch_result_ != nullptr);
    _impl_.winch_result_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* LoadLineResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> LoadLineResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(LoadLineResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_LoadLineResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.winch.WinchResult winch_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(LoadLineResponse, _impl_.winch_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.winch.WinchResult winch_result = 1;
    {PROTOBUF_FIELD_OFFSET(LoadLineResponse, _impl_.winch_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::winch::WinchResult>()},
  }}, {{
  }},
};

::uint8_t* LoadLineResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.winch.LoadLineResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.winch.WinchResult winch_result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::winch_result(this),
        _Internal::winch_result(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.winch.LoadLineResponse)
  return target;
}

::size_t LoadLineResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.winch.LoadLineResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.winch.WinchResult winch_result = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.winch_result_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData LoadLineResponse::_class_data_ = {
    LoadLineResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* LoadLineResponse::GetClassData() const {
  return &_class_data_;
}

void LoadLineResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<LoadLineResponse*>(&to_msg);
  auto& from = static_cast<const LoadLineResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.winch.LoadLineResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_winch_result()->::mavsdk::rpc::winch::WinchResult::MergeFrom(
        from._internal_winch_result());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void LoadLineResponse::CopyFrom(const LoadLineResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.winch.LoadLineResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool LoadLineResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* LoadLineResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void LoadLineResponse::InternalSwap(LoadLineResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.winch_result_, other->_impl_.winch_result_);
}

::google::protobuf::Metadata LoadLineResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_winch_2fwinch_2eproto_getter, &descriptor_table_winch_2fwinch_2eproto_once,
      file_level_metadata_winch_2fwinch_2eproto[19]);
}
// ===================================================================

class AbandonLineRequest::_Internal {
 public:
};

AbandonLineRequest::AbandonLineRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.winch.AbandonLineRequest)
}
AbandonLineRequest::AbandonLineRequest(
    ::google::protobuf::Arena* arena, const AbandonLineRequest& from)
    : AbandonLineRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE AbandonLineRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void AbandonLineRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.instance_ = {};
}
AbandonLineRequest::~AbandonLineRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.winch.AbandonLineRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AbandonLineRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void AbandonLineRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.winch.AbandonLineRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.instance_ = 0u;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* AbandonLineRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> AbandonLineRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_AbandonLineRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // uint32 instance = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AbandonLineRequest, _impl_.instance_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(AbandonLineRequest, _impl_.instance_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 instance = 1;
    {PROTOBUF_FIELD_OFFSET(AbandonLineRequest, _impl_.instance_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* AbandonLineRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.winch.AbandonLineRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 instance = 1;
  if (this->_internal_instance() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_instance(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.winch.AbandonLineRequest)
  return target;
}

::size_t AbandonLineRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.winch.AbandonLineRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 instance = 1;
  if (this->_internal_instance() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_instance());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData AbandonLineRequest::_class_data_ = {
    AbandonLineRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* AbandonLineRequest::GetClassData() const {
  return &_class_data_;
}

void AbandonLineRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<AbandonLineRequest*>(&to_msg);
  auto& from = static_cast<const AbandonLineRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.winch.AbandonLineRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_instance() != 0) {
    _this->_internal_set_instance(from._internal_instance());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AbandonLineRequest::CopyFrom(const AbandonLineRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.winch.AbandonLineRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool AbandonLineRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* AbandonLineRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void AbandonLineRequest::InternalSwap(AbandonLineRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.instance_, other->_impl_.instance_);
}

::google::protobuf::Metadata AbandonLineRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_winch_2fwinch_2eproto_getter, &descriptor_table_winch_2fwinch_2eproto_once,
      file_level_metadata_winch_2fwinch_2eproto[20]);
}
// ===================================================================

class AbandonLineResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<AbandonLineResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(AbandonLineResponse, _impl_._has_bits_);
  static const ::mavsdk::rpc::winch::WinchResult& winch_result(const AbandonLineResponse* msg);
  static void set_has_winch_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::winch::WinchResult& AbandonLineResponse::_Internal::winch_result(const AbandonLineResponse* msg) {
  return *msg->_impl_.winch_result_;
}
AbandonLineResponse::AbandonLineResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.winch.AbandonLineResponse)
}
inline PROTOBUF_NDEBUG_INLINE AbandonLineResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

AbandonLineResponse::AbandonLineResponse(
    ::google::protobuf::Arena* arena,
    const AbandonLineResponse& from)
    : ::google::protobuf::Message(arena) {
  AbandonLineResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.winch_result_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::winch::WinchResult>(arena, *from._impl_.winch_result_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.winch.AbandonLineResponse)
}
inline PROTOBUF_NDEBUG_INLINE AbandonLineResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void AbandonLineResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.winch_result_ = {};
}
AbandonLineResponse::~AbandonLineResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.winch.AbandonLineResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AbandonLineResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.winch_result_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void AbandonLineResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.winch.AbandonLineResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.winch_result_ != nullptr);
    _impl_.winch_result_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* AbandonLineResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> AbandonLineResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AbandonLineResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_AbandonLineResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.winch.WinchResult winch_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(AbandonLineResponse, _impl_.winch_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.winch.WinchResult winch_result = 1;
    {PROTOBUF_FIELD_OFFSET(AbandonLineResponse, _impl_.winch_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::winch::WinchResult>()},
  }}, {{
  }},
};

::uint8_t* AbandonLineResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.winch.AbandonLineResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.winch.WinchResult winch_result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::winch_result(this),
        _Internal::winch_result(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.winch.AbandonLineResponse)
  return target;
}

::size_t AbandonLineResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.winch.AbandonLineResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.winch.WinchResult winch_result = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.winch_result_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData AbandonLineResponse::_class_data_ = {
    AbandonLineResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* AbandonLineResponse::GetClassData() const {
  return &_class_data_;
}

void AbandonLineResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<AbandonLineResponse*>(&to_msg);
  auto& from = static_cast<const AbandonLineResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.winch.AbandonLineResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_winch_result()->::mavsdk::rpc::winch::WinchResult::MergeFrom(
        from._internal_winch_result());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AbandonLineResponse::CopyFrom(const AbandonLineResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.winch.AbandonLineResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool AbandonLineResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* AbandonLineResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void AbandonLineResponse::InternalSwap(AbandonLineResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.winch_result_, other->_impl_.winch_result_);
}

::google::protobuf::Metadata AbandonLineResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_winch_2fwinch_2eproto_getter, &descriptor_table_winch_2fwinch_2eproto_once,
      file_level_metadata_winch_2fwinch_2eproto[21]);
}
// ===================================================================

class LoadPayloadRequest::_Internal {
 public:
};

LoadPayloadRequest::LoadPayloadRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.winch.LoadPayloadRequest)
}
LoadPayloadRequest::LoadPayloadRequest(
    ::google::protobuf::Arena* arena, const LoadPayloadRequest& from)
    : LoadPayloadRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE LoadPayloadRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void LoadPayloadRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.instance_ = {};
}
LoadPayloadRequest::~LoadPayloadRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.winch.LoadPayloadRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void LoadPayloadRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void LoadPayloadRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.winch.LoadPayloadRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.instance_ = 0u;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* LoadPayloadRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> LoadPayloadRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_LoadPayloadRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // uint32 instance = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(LoadPayloadRequest, _impl_.instance_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(LoadPayloadRequest, _impl_.instance_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 instance = 1;
    {PROTOBUF_FIELD_OFFSET(LoadPayloadRequest, _impl_.instance_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* LoadPayloadRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.winch.LoadPayloadRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 instance = 1;
  if (this->_internal_instance() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_instance(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.winch.LoadPayloadRequest)
  return target;
}

::size_t LoadPayloadRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.winch.LoadPayloadRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 instance = 1;
  if (this->_internal_instance() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_instance());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData LoadPayloadRequest::_class_data_ = {
    LoadPayloadRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* LoadPayloadRequest::GetClassData() const {
  return &_class_data_;
}

void LoadPayloadRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<LoadPayloadRequest*>(&to_msg);
  auto& from = static_cast<const LoadPayloadRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.winch.LoadPayloadRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_instance() != 0) {
    _this->_internal_set_instance(from._internal_instance());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void LoadPayloadRequest::CopyFrom(const LoadPayloadRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.winch.LoadPayloadRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool LoadPayloadRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* LoadPayloadRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void LoadPayloadRequest::InternalSwap(LoadPayloadRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.instance_, other->_impl_.instance_);
}

::google::protobuf::Metadata LoadPayloadRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_winch_2fwinch_2eproto_getter, &descriptor_table_winch_2fwinch_2eproto_once,
      file_level_metadata_winch_2fwinch_2eproto[22]);
}
// ===================================================================

class LoadPayloadResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<LoadPayloadResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(LoadPayloadResponse, _impl_._has_bits_);
  static const ::mavsdk::rpc::winch::WinchResult& winch_result(const LoadPayloadResponse* msg);
  static void set_has_winch_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::winch::WinchResult& LoadPayloadResponse::_Internal::winch_result(const LoadPayloadResponse* msg) {
  return *msg->_impl_.winch_result_;
}
LoadPayloadResponse::LoadPayloadResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.winch.LoadPayloadResponse)
}
inline PROTOBUF_NDEBUG_INLINE LoadPayloadResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

LoadPayloadResponse::LoadPayloadResponse(
    ::google::protobuf::Arena* arena,
    const LoadPayloadResponse& from)
    : ::google::protobuf::Message(arena) {
  LoadPayloadResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.winch_result_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::winch::WinchResult>(arena, *from._impl_.winch_result_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.winch.LoadPayloadResponse)
}
inline PROTOBUF_NDEBUG_INLINE LoadPayloadResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void LoadPayloadResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.winch_result_ = {};
}
LoadPayloadResponse::~LoadPayloadResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.winch.LoadPayloadResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void LoadPayloadResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.winch_result_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void LoadPayloadResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.winch.LoadPayloadResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.winch_result_ != nullptr);
    _impl_.winch_result_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* LoadPayloadResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> LoadPayloadResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(LoadPayloadResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_LoadPayloadResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.winch.WinchResult winch_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(LoadPayloadResponse, _impl_.winch_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.winch.WinchResult winch_result = 1;
    {PROTOBUF_FIELD_OFFSET(LoadPayloadResponse, _impl_.winch_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::winch::WinchResult>()},
  }}, {{
  }},
};

::uint8_t* LoadPayloadResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.winch.LoadPayloadResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.winch.WinchResult winch_result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::winch_result(this),
        _Internal::winch_result(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.winch.LoadPayloadResponse)
  return target;
}

::size_t LoadPayloadResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.winch.LoadPayloadResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.winch.WinchResult winch_result = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.winch_result_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData LoadPayloadResponse::_class_data_ = {
    LoadPayloadResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* LoadPayloadResponse::GetClassData() const {
  return &_class_data_;
}

void LoadPayloadResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<LoadPayloadResponse*>(&to_msg);
  auto& from = static_cast<const LoadPayloadResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.winch.LoadPayloadResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_winch_result()->::mavsdk::rpc::winch::WinchResult::MergeFrom(
        from._internal_winch_result());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void LoadPayloadResponse::CopyFrom(const LoadPayloadResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.winch.LoadPayloadResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool LoadPayloadResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* LoadPayloadResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void LoadPayloadResponse::InternalSwap(LoadPayloadResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.winch_result_, other->_impl_.winch_result_);
}

::google::protobuf::Metadata LoadPayloadResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_winch_2fwinch_2eproto_getter, &descriptor_table_winch_2fwinch_2eproto_once,
      file_level_metadata_winch_2fwinch_2eproto[23]);
}
// ===================================================================

class WinchResult::_Internal {
 public:
};

WinchResult::WinchResult(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.winch.WinchResult)
}
inline PROTOBUF_NDEBUG_INLINE WinchResult::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : result_str_(arena, from.result_str_),
        _cached_size_{0} {}

WinchResult::WinchResult(
    ::google::protobuf::Arena* arena,
    const WinchResult& from)
    : ::google::protobuf::Message(arena) {
  WinchResult* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.result_ = from._impl_.result_;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.winch.WinchResult)
}
inline PROTOBUF_NDEBUG_INLINE WinchResult::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : result_str_(arena),
        _cached_size_{0} {}

inline void WinchResult::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.result_ = {};
}
WinchResult::~WinchResult() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.winch.WinchResult)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void WinchResult::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.result_str_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void WinchResult::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.winch.WinchResult)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.result_str_.ClearToEmpty();
  _impl_.result_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* WinchResult::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 47, 2> WinchResult::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_WinchResult_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string result_str = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(WinchResult, _impl_.result_str_)}},
    // .mavsdk.rpc.winch.WinchResult.Result result = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(WinchResult, _impl_.result_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(WinchResult, _impl_.result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.winch.WinchResult.Result result = 1;
    {PROTOBUF_FIELD_OFFSET(WinchResult, _impl_.result_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string result_str = 2;
    {PROTOBUF_FIELD_OFFSET(WinchResult, _impl_.result_str_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\34\0\12\0\0\0\0\0"
    "mavsdk.rpc.winch.WinchResult"
    "result_str"
  }},
};

::uint8_t* WinchResult::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.winch.WinchResult)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .mavsdk.rpc.winch.WinchResult.Result result = 1;
  if (this->_internal_result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_result(), target);
  }

  // string result_str = 2;
  if (!this->_internal_result_str().empty()) {
    const std::string& _s = this->_internal_result_str();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mavsdk.rpc.winch.WinchResult.result_str");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.winch.WinchResult)
  return target;
}

::size_t WinchResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.winch.WinchResult)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string result_str = 2;
  if (!this->_internal_result_str().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_result_str());
  }

  // .mavsdk.rpc.winch.WinchResult.Result result = 1;
  if (this->_internal_result() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_result());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData WinchResult::_class_data_ = {
    WinchResult::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* WinchResult::GetClassData() const {
  return &_class_data_;
}

void WinchResult::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<WinchResult*>(&to_msg);
  auto& from = static_cast<const WinchResult&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.winch.WinchResult)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_result_str().empty()) {
    _this->_internal_set_result_str(from._internal_result_str());
  }
  if (from._internal_result() != 0) {
    _this->_internal_set_result(from._internal_result());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void WinchResult::CopyFrom(const WinchResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.winch.WinchResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool WinchResult::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* WinchResult::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void WinchResult::InternalSwap(WinchResult* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.result_str_, &other->_impl_.result_str_, arena);
  swap(_impl_.result_, other->_impl_.result_);
}

::google::protobuf::Metadata WinchResult::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_winch_2fwinch_2eproto_getter, &descriptor_table_winch_2fwinch_2eproto_once,
      file_level_metadata_winch_2fwinch_2eproto[24]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace winch
}  // namespace rpc
}  // namespace mavsdk
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"

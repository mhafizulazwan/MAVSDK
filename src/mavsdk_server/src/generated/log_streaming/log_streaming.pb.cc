// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: log_streaming/log_streaming.proto

#include "log_streaming/log_streaming.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace mavsdk {
namespace rpc {
namespace log_streaming {
      template <typename>
PROTOBUF_CONSTEXPR SubscribeLogStreamingRawRequest::SubscribeLogStreamingRawRequest(::_pbi::ConstantInitialized) {}
struct SubscribeLogStreamingRawRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscribeLogStreamingRawRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscribeLogStreamingRawRequestDefaultTypeInternal() {}
  union {
    SubscribeLogStreamingRawRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscribeLogStreamingRawRequestDefaultTypeInternal _SubscribeLogStreamingRawRequest_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR StopLogStreamingRequest::StopLogStreamingRequest(::_pbi::ConstantInitialized) {}
struct StopLogStreamingRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StopLogStreamingRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StopLogStreamingRequestDefaultTypeInternal() {}
  union {
    StopLogStreamingRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StopLogStreamingRequestDefaultTypeInternal _StopLogStreamingRequest_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR StartLogStreamingRequest::StartLogStreamingRequest(::_pbi::ConstantInitialized) {}
struct StartLogStreamingRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StartLogStreamingRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StartLogStreamingRequestDefaultTypeInternal() {}
  union {
    StartLogStreamingRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StartLogStreamingRequestDefaultTypeInternal _StartLogStreamingRequest_default_instance_;

inline constexpr LogStreamingResult::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : result_str_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        result_{static_cast< ::mavsdk::rpc::log_streaming::LogStreamingResult_Result >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR LogStreamingResult::LogStreamingResult(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct LogStreamingResultDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LogStreamingResultDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LogStreamingResultDefaultTypeInternal() {}
  union {
    LogStreamingResult _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LogStreamingResultDefaultTypeInternal _LogStreamingResult_default_instance_;

inline constexpr LogStreamingRaw::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : data_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR LogStreamingRaw::LogStreamingRaw(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct LogStreamingRawDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LogStreamingRawDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LogStreamingRawDefaultTypeInternal() {}
  union {
    LogStreamingRaw _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LogStreamingRawDefaultTypeInternal _LogStreamingRaw_default_instance_;

inline constexpr StopLogStreamingResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        log_streaming_result_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR StopLogStreamingResponse::StopLogStreamingResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct StopLogStreamingResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StopLogStreamingResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StopLogStreamingResponseDefaultTypeInternal() {}
  union {
    StopLogStreamingResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StopLogStreamingResponseDefaultTypeInternal _StopLogStreamingResponse_default_instance_;

inline constexpr StartLogStreamingResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        log_streaming_result_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR StartLogStreamingResponse::StartLogStreamingResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct StartLogStreamingResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StartLogStreamingResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StartLogStreamingResponseDefaultTypeInternal() {}
  union {
    StartLogStreamingResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StartLogStreamingResponseDefaultTypeInternal _StartLogStreamingResponse_default_instance_;

inline constexpr LogStreamingRawResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        logging_raw_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR LogStreamingRawResponse::LogStreamingRawResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct LogStreamingRawResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LogStreamingRawResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LogStreamingRawResponseDefaultTypeInternal() {}
  union {
    LogStreamingRawResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LogStreamingRawResponseDefaultTypeInternal _LogStreamingRawResponse_default_instance_;
}  // namespace log_streaming
}  // namespace rpc
}  // namespace mavsdk
static ::_pb::Metadata file_level_metadata_log_5fstreaming_2flog_5fstreaming_2eproto[8];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_log_5fstreaming_2flog_5fstreaming_2eproto[1];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_log_5fstreaming_2flog_5fstreaming_2eproto = nullptr;
const ::uint32_t TableStruct_log_5fstreaming_2flog_5fstreaming_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::log_streaming::StartLogStreamingRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::log_streaming::StartLogStreamingResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::log_streaming::StartLogStreamingResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::log_streaming::StartLogStreamingResponse, _impl_.log_streaming_result_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::log_streaming::StopLogStreamingRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::log_streaming::StopLogStreamingResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::log_streaming::StopLogStreamingResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::log_streaming::StopLogStreamingResponse, _impl_.log_streaming_result_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::log_streaming::SubscribeLogStreamingRawRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::log_streaming::LogStreamingRawResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::log_streaming::LogStreamingRawResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::log_streaming::LogStreamingRawResponse, _impl_.logging_raw_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::log_streaming::LogStreamingRaw, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::log_streaming::LogStreamingRaw, _impl_.data_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::log_streaming::LogStreamingResult, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::log_streaming::LogStreamingResult, _impl_.result_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::log_streaming::LogStreamingResult, _impl_.result_str_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::mavsdk::rpc::log_streaming::StartLogStreamingRequest)},
        {8, 17, -1, sizeof(::mavsdk::rpc::log_streaming::StartLogStreamingResponse)},
        {18, -1, -1, sizeof(::mavsdk::rpc::log_streaming::StopLogStreamingRequest)},
        {26, 35, -1, sizeof(::mavsdk::rpc::log_streaming::StopLogStreamingResponse)},
        {36, -1, -1, sizeof(::mavsdk::rpc::log_streaming::SubscribeLogStreamingRawRequest)},
        {44, 53, -1, sizeof(::mavsdk::rpc::log_streaming::LogStreamingRawResponse)},
        {54, -1, -1, sizeof(::mavsdk::rpc::log_streaming::LogStreamingRaw)},
        {63, -1, -1, sizeof(::mavsdk::rpc::log_streaming::LogStreamingResult)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::mavsdk::rpc::log_streaming::_StartLogStreamingRequest_default_instance_._instance,
    &::mavsdk::rpc::log_streaming::_StartLogStreamingResponse_default_instance_._instance,
    &::mavsdk::rpc::log_streaming::_StopLogStreamingRequest_default_instance_._instance,
    &::mavsdk::rpc::log_streaming::_StopLogStreamingResponse_default_instance_._instance,
    &::mavsdk::rpc::log_streaming::_SubscribeLogStreamingRawRequest_default_instance_._instance,
    &::mavsdk::rpc::log_streaming::_LogStreamingRawResponse_default_instance_._instance,
    &::mavsdk::rpc::log_streaming::_LogStreamingRaw_default_instance_._instance,
    &::mavsdk::rpc::log_streaming::_LogStreamingResult_default_instance_._instance,
};
const char descriptor_table_protodef_log_5fstreaming_2flog_5fstreaming_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n!log_streaming/log_streaming.proto\022\030mav"
    "sdk.rpc.log_streaming\032\024mavsdk_options.pr"
    "oto\"\032\n\030StartLogStreamingRequest\"g\n\031Start"
    "LogStreamingResponse\022J\n\024log_streaming_re"
    "sult\030\001 \001(\0132,.mavsdk.rpc.log_streaming.Lo"
    "gStreamingResult\"\031\n\027StopLogStreamingRequ"
    "est\"f\n\030StopLogStreamingResponse\022J\n\024log_s"
    "treaming_result\030\001 \001(\0132,.mavsdk.rpc.log_s"
    "treaming.LogStreamingResult\"!\n\037Subscribe"
    "LogStreamingRawRequest\"Y\n\027LogStreamingRa"
    "wResponse\022>\n\013logging_raw\030\001 \001(\0132).mavsdk."
    "rpc.log_streaming.LogStreamingRaw\"\037\n\017Log"
    "StreamingRaw\022\014\n\004data\030\001 \001(\t\"\253\002\n\022LogStream"
    "ingResult\022C\n\006result\030\001 \001(\01623.mavsdk.rpc.l"
    "og_streaming.LogStreamingResult.Result\022\022"
    "\n\nresult_str\030\002 \001(\t\"\273\001\n\006Result\022\022\n\016RESULT_"
    "SUCCESS\020\000\022\024\n\020RESULT_NO_SYSTEM\020\001\022\033\n\027RESUL"
    "T_CONNECTION_ERROR\020\002\022\017\n\013RESULT_BUSY\020\003\022\031\n"
    "\025RESULT_COMMAND_DENIED\020\004\022\022\n\016RESULT_TIMEO"
    "UT\020\005\022\026\n\022RESULT_UNSUPPORTED\020\006\022\022\n\016RESULT_U"
    "NKNOWN\020\0072\245\003\n\023LogStreamingService\022~\n\021Star"
    "tLogStreaming\0222.mavsdk.rpc.log_streaming"
    ".StartLogStreamingRequest\0323.mavsdk.rpc.l"
    "og_streaming.StartLogStreamingResponse\"\000"
    "\022{\n\020StopLogStreaming\0221.mavsdk.rpc.log_st"
    "reaming.StopLogStreamingRequest\0322.mavsdk"
    ".rpc.log_streaming.StopLogStreamingRespo"
    "nse\"\000\022\220\001\n\030SubscribeLogStreamingRaw\0229.mav"
    "sdk.rpc.log_streaming.SubscribeLogStream"
    "ingRawRequest\0321.mavsdk.rpc.log_streaming"
    ".LogStreamingRawResponse\"\004\200\265\030\0000\001B,\n\027io.m"
    "avsdk.log_streamingB\021LogStreamingProtob\006"
    "proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_log_5fstreaming_2flog_5fstreaming_2eproto_deps[1] =
    {
        &::descriptor_table_mavsdk_5foptions_2eproto,
};
static ::absl::once_flag descriptor_table_log_5fstreaming_2flog_5fstreaming_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_log_5fstreaming_2flog_5fstreaming_2eproto = {
    false,
    false,
    1286,
    descriptor_table_protodef_log_5fstreaming_2flog_5fstreaming_2eproto,
    "log_streaming/log_streaming.proto",
    &descriptor_table_log_5fstreaming_2flog_5fstreaming_2eproto_once,
    descriptor_table_log_5fstreaming_2flog_5fstreaming_2eproto_deps,
    1,
    8,
    schemas,
    file_default_instances,
    TableStruct_log_5fstreaming_2flog_5fstreaming_2eproto::offsets,
    file_level_metadata_log_5fstreaming_2flog_5fstreaming_2eproto,
    file_level_enum_descriptors_log_5fstreaming_2flog_5fstreaming_2eproto,
    file_level_service_descriptors_log_5fstreaming_2flog_5fstreaming_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_log_5fstreaming_2flog_5fstreaming_2eproto_getter() {
  return &descriptor_table_log_5fstreaming_2flog_5fstreaming_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_log_5fstreaming_2flog_5fstreaming_2eproto(&descriptor_table_log_5fstreaming_2flog_5fstreaming_2eproto);
namespace mavsdk {
namespace rpc {
namespace log_streaming {
const ::google::protobuf::EnumDescriptor* LogStreamingResult_Result_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_log_5fstreaming_2flog_5fstreaming_2eproto);
  return file_level_enum_descriptors_log_5fstreaming_2flog_5fstreaming_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t LogStreamingResult_Result_internal_data_[] = {
    524288u, 0u, };
bool LogStreamingResult_Result_IsValid(int value) {
  return 0 <= value && value <= 7;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr LogStreamingResult_Result LogStreamingResult::RESULT_SUCCESS;
constexpr LogStreamingResult_Result LogStreamingResult::RESULT_NO_SYSTEM;
constexpr LogStreamingResult_Result LogStreamingResult::RESULT_CONNECTION_ERROR;
constexpr LogStreamingResult_Result LogStreamingResult::RESULT_BUSY;
constexpr LogStreamingResult_Result LogStreamingResult::RESULT_COMMAND_DENIED;
constexpr LogStreamingResult_Result LogStreamingResult::RESULT_TIMEOUT;
constexpr LogStreamingResult_Result LogStreamingResult::RESULT_UNSUPPORTED;
constexpr LogStreamingResult_Result LogStreamingResult::RESULT_UNKNOWN;
constexpr LogStreamingResult_Result LogStreamingResult::Result_MIN;
constexpr LogStreamingResult_Result LogStreamingResult::Result_MAX;
constexpr int LogStreamingResult::Result_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
// ===================================================================

class StartLogStreamingRequest::_Internal {
 public:
};

StartLogStreamingRequest::StartLogStreamingRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.log_streaming.StartLogStreamingRequest)
}
StartLogStreamingRequest::StartLogStreamingRequest(
    ::google::protobuf::Arena* arena,
    const StartLogStreamingRequest& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  StartLogStreamingRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.log_streaming.StartLogStreamingRequest)
}









::google::protobuf::Metadata StartLogStreamingRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_log_5fstreaming_2flog_5fstreaming_2eproto_getter, &descriptor_table_log_5fstreaming_2flog_5fstreaming_2eproto_once,
      file_level_metadata_log_5fstreaming_2flog_5fstreaming_2eproto[0]);
}
// ===================================================================

class StartLogStreamingResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<StartLogStreamingResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(StartLogStreamingResponse, _impl_._has_bits_);
  static const ::mavsdk::rpc::log_streaming::LogStreamingResult& log_streaming_result(const StartLogStreamingResponse* msg);
  static void set_has_log_streaming_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::log_streaming::LogStreamingResult& StartLogStreamingResponse::_Internal::log_streaming_result(const StartLogStreamingResponse* msg) {
  return *msg->_impl_.log_streaming_result_;
}
StartLogStreamingResponse::StartLogStreamingResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.log_streaming.StartLogStreamingResponse)
}
inline PROTOBUF_NDEBUG_INLINE StartLogStreamingResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

StartLogStreamingResponse::StartLogStreamingResponse(
    ::google::protobuf::Arena* arena,
    const StartLogStreamingResponse& from)
    : ::google::protobuf::Message(arena) {
  StartLogStreamingResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.log_streaming_result_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::log_streaming::LogStreamingResult>(arena, *from._impl_.log_streaming_result_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.log_streaming.StartLogStreamingResponse)
}
inline PROTOBUF_NDEBUG_INLINE StartLogStreamingResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void StartLogStreamingResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.log_streaming_result_ = {};
}
StartLogStreamingResponse::~StartLogStreamingResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.log_streaming.StartLogStreamingResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void StartLogStreamingResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.log_streaming_result_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void StartLogStreamingResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.log_streaming.StartLogStreamingResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.log_streaming_result_ != nullptr);
    _impl_.log_streaming_result_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* StartLogStreamingResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> StartLogStreamingResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(StartLogStreamingResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_StartLogStreamingResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.log_streaming.LogStreamingResult log_streaming_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(StartLogStreamingResponse, _impl_.log_streaming_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.log_streaming.LogStreamingResult log_streaming_result = 1;
    {PROTOBUF_FIELD_OFFSET(StartLogStreamingResponse, _impl_.log_streaming_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::log_streaming::LogStreamingResult>()},
  }}, {{
  }},
};

::uint8_t* StartLogStreamingResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.log_streaming.StartLogStreamingResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.log_streaming.LogStreamingResult log_streaming_result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::log_streaming_result(this),
        _Internal::log_streaming_result(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.log_streaming.StartLogStreamingResponse)
  return target;
}

::size_t StartLogStreamingResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.log_streaming.StartLogStreamingResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.log_streaming.LogStreamingResult log_streaming_result = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.log_streaming_result_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData StartLogStreamingResponse::_class_data_ = {
    StartLogStreamingResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* StartLogStreamingResponse::GetClassData() const {
  return &_class_data_;
}

void StartLogStreamingResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<StartLogStreamingResponse*>(&to_msg);
  auto& from = static_cast<const StartLogStreamingResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.log_streaming.StartLogStreamingResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_log_streaming_result()->::mavsdk::rpc::log_streaming::LogStreamingResult::MergeFrom(
        from._internal_log_streaming_result());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void StartLogStreamingResponse::CopyFrom(const StartLogStreamingResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.log_streaming.StartLogStreamingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool StartLogStreamingResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* StartLogStreamingResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void StartLogStreamingResponse::InternalSwap(StartLogStreamingResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.log_streaming_result_, other->_impl_.log_streaming_result_);
}

::google::protobuf::Metadata StartLogStreamingResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_log_5fstreaming_2flog_5fstreaming_2eproto_getter, &descriptor_table_log_5fstreaming_2flog_5fstreaming_2eproto_once,
      file_level_metadata_log_5fstreaming_2flog_5fstreaming_2eproto[1]);
}
// ===================================================================

class StopLogStreamingRequest::_Internal {
 public:
};

StopLogStreamingRequest::StopLogStreamingRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.log_streaming.StopLogStreamingRequest)
}
StopLogStreamingRequest::StopLogStreamingRequest(
    ::google::protobuf::Arena* arena,
    const StopLogStreamingRequest& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  StopLogStreamingRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.log_streaming.StopLogStreamingRequest)
}









::google::protobuf::Metadata StopLogStreamingRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_log_5fstreaming_2flog_5fstreaming_2eproto_getter, &descriptor_table_log_5fstreaming_2flog_5fstreaming_2eproto_once,
      file_level_metadata_log_5fstreaming_2flog_5fstreaming_2eproto[2]);
}
// ===================================================================

class StopLogStreamingResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<StopLogStreamingResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(StopLogStreamingResponse, _impl_._has_bits_);
  static const ::mavsdk::rpc::log_streaming::LogStreamingResult& log_streaming_result(const StopLogStreamingResponse* msg);
  static void set_has_log_streaming_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::log_streaming::LogStreamingResult& StopLogStreamingResponse::_Internal::log_streaming_result(const StopLogStreamingResponse* msg) {
  return *msg->_impl_.log_streaming_result_;
}
StopLogStreamingResponse::StopLogStreamingResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.log_streaming.StopLogStreamingResponse)
}
inline PROTOBUF_NDEBUG_INLINE StopLogStreamingResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

StopLogStreamingResponse::StopLogStreamingResponse(
    ::google::protobuf::Arena* arena,
    const StopLogStreamingResponse& from)
    : ::google::protobuf::Message(arena) {
  StopLogStreamingResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.log_streaming_result_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::log_streaming::LogStreamingResult>(arena, *from._impl_.log_streaming_result_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.log_streaming.StopLogStreamingResponse)
}
inline PROTOBUF_NDEBUG_INLINE StopLogStreamingResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void StopLogStreamingResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.log_streaming_result_ = {};
}
StopLogStreamingResponse::~StopLogStreamingResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.log_streaming.StopLogStreamingResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void StopLogStreamingResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.log_streaming_result_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void StopLogStreamingResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.log_streaming.StopLogStreamingResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.log_streaming_result_ != nullptr);
    _impl_.log_streaming_result_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* StopLogStreamingResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> StopLogStreamingResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(StopLogStreamingResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_StopLogStreamingResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.log_streaming.LogStreamingResult log_streaming_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(StopLogStreamingResponse, _impl_.log_streaming_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.log_streaming.LogStreamingResult log_streaming_result = 1;
    {PROTOBUF_FIELD_OFFSET(StopLogStreamingResponse, _impl_.log_streaming_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::log_streaming::LogStreamingResult>()},
  }}, {{
  }},
};

::uint8_t* StopLogStreamingResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.log_streaming.StopLogStreamingResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.log_streaming.LogStreamingResult log_streaming_result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::log_streaming_result(this),
        _Internal::log_streaming_result(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.log_streaming.StopLogStreamingResponse)
  return target;
}

::size_t StopLogStreamingResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.log_streaming.StopLogStreamingResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.log_streaming.LogStreamingResult log_streaming_result = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.log_streaming_result_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData StopLogStreamingResponse::_class_data_ = {
    StopLogStreamingResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* StopLogStreamingResponse::GetClassData() const {
  return &_class_data_;
}

void StopLogStreamingResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<StopLogStreamingResponse*>(&to_msg);
  auto& from = static_cast<const StopLogStreamingResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.log_streaming.StopLogStreamingResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_log_streaming_result()->::mavsdk::rpc::log_streaming::LogStreamingResult::MergeFrom(
        from._internal_log_streaming_result());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void StopLogStreamingResponse::CopyFrom(const StopLogStreamingResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.log_streaming.StopLogStreamingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool StopLogStreamingResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* StopLogStreamingResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void StopLogStreamingResponse::InternalSwap(StopLogStreamingResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.log_streaming_result_, other->_impl_.log_streaming_result_);
}

::google::protobuf::Metadata StopLogStreamingResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_log_5fstreaming_2flog_5fstreaming_2eproto_getter, &descriptor_table_log_5fstreaming_2flog_5fstreaming_2eproto_once,
      file_level_metadata_log_5fstreaming_2flog_5fstreaming_2eproto[3]);
}
// ===================================================================

class SubscribeLogStreamingRawRequest::_Internal {
 public:
};

SubscribeLogStreamingRawRequest::SubscribeLogStreamingRawRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.log_streaming.SubscribeLogStreamingRawRequest)
}
SubscribeLogStreamingRawRequest::SubscribeLogStreamingRawRequest(
    ::google::protobuf::Arena* arena,
    const SubscribeLogStreamingRawRequest& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  SubscribeLogStreamingRawRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.log_streaming.SubscribeLogStreamingRawRequest)
}









::google::protobuf::Metadata SubscribeLogStreamingRawRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_log_5fstreaming_2flog_5fstreaming_2eproto_getter, &descriptor_table_log_5fstreaming_2flog_5fstreaming_2eproto_once,
      file_level_metadata_log_5fstreaming_2flog_5fstreaming_2eproto[4]);
}
// ===================================================================

class LogStreamingRawResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<LogStreamingRawResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(LogStreamingRawResponse, _impl_._has_bits_);
  static const ::mavsdk::rpc::log_streaming::LogStreamingRaw& logging_raw(const LogStreamingRawResponse* msg);
  static void set_has_logging_raw(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::log_streaming::LogStreamingRaw& LogStreamingRawResponse::_Internal::logging_raw(const LogStreamingRawResponse* msg) {
  return *msg->_impl_.logging_raw_;
}
LogStreamingRawResponse::LogStreamingRawResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.log_streaming.LogStreamingRawResponse)
}
inline PROTOBUF_NDEBUG_INLINE LogStreamingRawResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

LogStreamingRawResponse::LogStreamingRawResponse(
    ::google::protobuf::Arena* arena,
    const LogStreamingRawResponse& from)
    : ::google::protobuf::Message(arena) {
  LogStreamingRawResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.logging_raw_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::log_streaming::LogStreamingRaw>(arena, *from._impl_.logging_raw_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.log_streaming.LogStreamingRawResponse)
}
inline PROTOBUF_NDEBUG_INLINE LogStreamingRawResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void LogStreamingRawResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.logging_raw_ = {};
}
LogStreamingRawResponse::~LogStreamingRawResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.log_streaming.LogStreamingRawResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void LogStreamingRawResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.logging_raw_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void LogStreamingRawResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.log_streaming.LogStreamingRawResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.logging_raw_ != nullptr);
    _impl_.logging_raw_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* LogStreamingRawResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> LogStreamingRawResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(LogStreamingRawResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_LogStreamingRawResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.log_streaming.LogStreamingRaw logging_raw = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(LogStreamingRawResponse, _impl_.logging_raw_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.log_streaming.LogStreamingRaw logging_raw = 1;
    {PROTOBUF_FIELD_OFFSET(LogStreamingRawResponse, _impl_.logging_raw_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::log_streaming::LogStreamingRaw>()},
  }}, {{
  }},
};

::uint8_t* LogStreamingRawResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.log_streaming.LogStreamingRawResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.log_streaming.LogStreamingRaw logging_raw = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::logging_raw(this),
        _Internal::logging_raw(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.log_streaming.LogStreamingRawResponse)
  return target;
}

::size_t LogStreamingRawResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.log_streaming.LogStreamingRawResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.log_streaming.LogStreamingRaw logging_raw = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.logging_raw_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData LogStreamingRawResponse::_class_data_ = {
    LogStreamingRawResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* LogStreamingRawResponse::GetClassData() const {
  return &_class_data_;
}

void LogStreamingRawResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<LogStreamingRawResponse*>(&to_msg);
  auto& from = static_cast<const LogStreamingRawResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.log_streaming.LogStreamingRawResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_logging_raw()->::mavsdk::rpc::log_streaming::LogStreamingRaw::MergeFrom(
        from._internal_logging_raw());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void LogStreamingRawResponse::CopyFrom(const LogStreamingRawResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.log_streaming.LogStreamingRawResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool LogStreamingRawResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* LogStreamingRawResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void LogStreamingRawResponse::InternalSwap(LogStreamingRawResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.logging_raw_, other->_impl_.logging_raw_);
}

::google::protobuf::Metadata LogStreamingRawResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_log_5fstreaming_2flog_5fstreaming_2eproto_getter, &descriptor_table_log_5fstreaming_2flog_5fstreaming_2eproto_once,
      file_level_metadata_log_5fstreaming_2flog_5fstreaming_2eproto[5]);
}
// ===================================================================

class LogStreamingRaw::_Internal {
 public:
};

LogStreamingRaw::LogStreamingRaw(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.log_streaming.LogStreamingRaw)
}
inline PROTOBUF_NDEBUG_INLINE LogStreamingRaw::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : data_(arena, from.data_),
        _cached_size_{0} {}

LogStreamingRaw::LogStreamingRaw(
    ::google::protobuf::Arena* arena,
    const LogStreamingRaw& from)
    : ::google::protobuf::Message(arena) {
  LogStreamingRaw* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.log_streaming.LogStreamingRaw)
}
inline PROTOBUF_NDEBUG_INLINE LogStreamingRaw::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : data_(arena),
        _cached_size_{0} {}

inline void LogStreamingRaw::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
LogStreamingRaw::~LogStreamingRaw() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.log_streaming.LogStreamingRaw)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void LogStreamingRaw::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.data_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void LogStreamingRaw::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.log_streaming.LogStreamingRaw)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.data_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* LogStreamingRaw::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 53, 2> LogStreamingRaw::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_LogStreamingRaw_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string data = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(LogStreamingRaw, _impl_.data_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string data = 1;
    {PROTOBUF_FIELD_OFFSET(LogStreamingRaw, _impl_.data_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\50\4\0\0\0\0\0\0"
    "mavsdk.rpc.log_streaming.LogStreamingRaw"
    "data"
  }},
};

::uint8_t* LogStreamingRaw::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.log_streaming.LogStreamingRaw)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string data = 1;
  if (!this->_internal_data().empty()) {
    const std::string& _s = this->_internal_data();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mavsdk.rpc.log_streaming.LogStreamingRaw.data");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.log_streaming.LogStreamingRaw)
  return target;
}

::size_t LogStreamingRaw::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.log_streaming.LogStreamingRaw)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string data = 1;
  if (!this->_internal_data().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_data());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData LogStreamingRaw::_class_data_ = {
    LogStreamingRaw::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* LogStreamingRaw::GetClassData() const {
  return &_class_data_;
}

void LogStreamingRaw::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<LogStreamingRaw*>(&to_msg);
  auto& from = static_cast<const LogStreamingRaw&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.log_streaming.LogStreamingRaw)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_data().empty()) {
    _this->_internal_set_data(from._internal_data());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void LogStreamingRaw::CopyFrom(const LogStreamingRaw& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.log_streaming.LogStreamingRaw)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool LogStreamingRaw::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* LogStreamingRaw::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void LogStreamingRaw::InternalSwap(LogStreamingRaw* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.data_, &other->_impl_.data_, arena);
}

::google::protobuf::Metadata LogStreamingRaw::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_log_5fstreaming_2flog_5fstreaming_2eproto_getter, &descriptor_table_log_5fstreaming_2flog_5fstreaming_2eproto_once,
      file_level_metadata_log_5fstreaming_2flog_5fstreaming_2eproto[6]);
}
// ===================================================================

class LogStreamingResult::_Internal {
 public:
};

LogStreamingResult::LogStreamingResult(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.log_streaming.LogStreamingResult)
}
inline PROTOBUF_NDEBUG_INLINE LogStreamingResult::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : result_str_(arena, from.result_str_),
        _cached_size_{0} {}

LogStreamingResult::LogStreamingResult(
    ::google::protobuf::Arena* arena,
    const LogStreamingResult& from)
    : ::google::protobuf::Message(arena) {
  LogStreamingResult* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.result_ = from._impl_.result_;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.log_streaming.LogStreamingResult)
}
inline PROTOBUF_NDEBUG_INLINE LogStreamingResult::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : result_str_(arena),
        _cached_size_{0} {}

inline void LogStreamingResult::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.result_ = {};
}
LogStreamingResult::~LogStreamingResult() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.log_streaming.LogStreamingResult)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void LogStreamingResult::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.result_str_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void LogStreamingResult::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.log_streaming.LogStreamingResult)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.result_str_.ClearToEmpty();
  _impl_.result_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* LogStreamingResult::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 62, 2> LogStreamingResult::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_LogStreamingResult_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string result_str = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(LogStreamingResult, _impl_.result_str_)}},
    // .mavsdk.rpc.log_streaming.LogStreamingResult.Result result = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(LogStreamingResult, _impl_.result_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(LogStreamingResult, _impl_.result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.log_streaming.LogStreamingResult.Result result = 1;
    {PROTOBUF_FIELD_OFFSET(LogStreamingResult, _impl_.result_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string result_str = 2;
    {PROTOBUF_FIELD_OFFSET(LogStreamingResult, _impl_.result_str_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\53\0\12\0\0\0\0\0"
    "mavsdk.rpc.log_streaming.LogStreamingResult"
    "result_str"
  }},
};

::uint8_t* LogStreamingResult::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.log_streaming.LogStreamingResult)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .mavsdk.rpc.log_streaming.LogStreamingResult.Result result = 1;
  if (this->_internal_result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_result(), target);
  }

  // string result_str = 2;
  if (!this->_internal_result_str().empty()) {
    const std::string& _s = this->_internal_result_str();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mavsdk.rpc.log_streaming.LogStreamingResult.result_str");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.log_streaming.LogStreamingResult)
  return target;
}

::size_t LogStreamingResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.log_streaming.LogStreamingResult)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string result_str = 2;
  if (!this->_internal_result_str().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_result_str());
  }

  // .mavsdk.rpc.log_streaming.LogStreamingResult.Result result = 1;
  if (this->_internal_result() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_result());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData LogStreamingResult::_class_data_ = {
    LogStreamingResult::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* LogStreamingResult::GetClassData() const {
  return &_class_data_;
}

void LogStreamingResult::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<LogStreamingResult*>(&to_msg);
  auto& from = static_cast<const LogStreamingResult&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.log_streaming.LogStreamingResult)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_result_str().empty()) {
    _this->_internal_set_result_str(from._internal_result_str());
  }
  if (from._internal_result() != 0) {
    _this->_internal_set_result(from._internal_result());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void LogStreamingResult::CopyFrom(const LogStreamingResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.log_streaming.LogStreamingResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool LogStreamingResult::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* LogStreamingResult::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void LogStreamingResult::InternalSwap(LogStreamingResult* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.result_str_, &other->_impl_.result_str_, arena);
  swap(_impl_.result_, other->_impl_.result_);
}

::google::protobuf::Metadata LogStreamingResult::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_log_5fstreaming_2flog_5fstreaming_2eproto_getter, &descriptor_table_log_5fstreaming_2flog_5fstreaming_2eproto_once,
      file_level_metadata_log_5fstreaming_2flog_5fstreaming_2eproto[7]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace log_streaming
}  // namespace rpc
}  // namespace mavsdk
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
